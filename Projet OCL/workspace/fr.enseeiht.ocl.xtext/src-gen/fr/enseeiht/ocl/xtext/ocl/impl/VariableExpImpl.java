/**
 * generated by Xtext 2.37.0
 */
package fr.enseeiht.ocl.xtext.ocl.impl;

import fr.enseeiht.ocl.xtext.ocl.Auxiliary;
import fr.enseeiht.ocl.xtext.ocl.OclPackage;
import fr.enseeiht.ocl.xtext.ocl.VariableExp;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Variable Exp</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.enseeiht.ocl.xtext.ocl.impl.VariableExpImpl#getReferredVariable <em>Referred Variable</em>}</li>
 * </ul>
 *
 * @generated
 */
public class VariableExpImpl extends OclExpressionImpl implements VariableExp
{
  /**
   * The cached value of the '{@link #getReferredVariable() <em>Referred Variable</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReferredVariable()
   * @generated
   * @ordered
   */
  protected Auxiliary referredVariable;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected VariableExpImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OclPackage.Literals.VARIABLE_EXP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Auxiliary getReferredVariable()
  {
    if (referredVariable != null && referredVariable.eIsProxy())
    {
      InternalEObject oldReferredVariable = (InternalEObject)referredVariable;
      referredVariable = (Auxiliary)eResolveProxy(oldReferredVariable);
      if (referredVariable != oldReferredVariable)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, OclPackage.VARIABLE_EXP__REFERRED_VARIABLE, oldReferredVariable, referredVariable));
      }
    }
    return referredVariable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Auxiliary basicGetReferredVariable()
  {
    return referredVariable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReferredVariable(Auxiliary newReferredVariable)
  {
    Auxiliary oldReferredVariable = referredVariable;
    referredVariable = newReferredVariable;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OclPackage.VARIABLE_EXP__REFERRED_VARIABLE, oldReferredVariable, referredVariable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OclPackage.VARIABLE_EXP__REFERRED_VARIABLE:
        if (resolve) return getReferredVariable();
        return basicGetReferredVariable();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OclPackage.VARIABLE_EXP__REFERRED_VARIABLE:
        setReferredVariable((Auxiliary)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OclPackage.VARIABLE_EXP__REFERRED_VARIABLE:
        setReferredVariable((Auxiliary)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OclPackage.VARIABLE_EXP__REFERRED_VARIABLE:
        return referredVariable != null;
    }
    return super.eIsSet(featureID);
  }

} //VariableExpImpl
