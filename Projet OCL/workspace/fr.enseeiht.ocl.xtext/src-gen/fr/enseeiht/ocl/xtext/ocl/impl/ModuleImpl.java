/**
 * generated by Xtext
 */
package fr.enseeiht.ocl.xtext.ocl.impl;

import fr.enseeiht.ocl.xtext.ocl.Import;
import fr.enseeiht.ocl.xtext.ocl.OclContextBlock;
import fr.enseeiht.ocl.xtext.ocl.OclFeatureDefinition;
import fr.enseeiht.ocl.xtext.ocl.OclPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Module</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.enseeiht.ocl.xtext.ocl.impl.ModuleImpl#getImports <em>Imports</em>}</li>
 *   <li>{@link fr.enseeiht.ocl.xtext.ocl.impl.ModuleImpl#getContextlessFeatures <em>Contextless Features</em>}</li>
 *   <li>{@link fr.enseeiht.ocl.xtext.ocl.impl.ModuleImpl#getContextBlocks <em>Context Blocks</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModuleImpl extends MinimalEObjectImpl.Container implements fr.enseeiht.ocl.xtext.ocl.Module
{
  /**
   * The cached value of the '{@link #getImports() <em>Imports</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImports()
   * @generated
   * @ordered
   */
  protected EList<Import> imports;

  /**
   * The cached value of the '{@link #getContextlessFeatures() <em>Contextless Features</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContextlessFeatures()
   * @generated
   * @ordered
   */
  protected EList<OclFeatureDefinition> contextlessFeatures;

  /**
   * The cached value of the '{@link #getContextBlocks() <em>Context Blocks</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContextBlocks()
   * @generated
   * @ordered
   */
  protected EList<OclContextBlock> contextBlocks;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModuleImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OclPackage.Literals.MODULE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Import> getImports()
  {
    if (imports == null)
    {
      imports = new EObjectContainmentEList<Import>(Import.class, this, OclPackage.MODULE__IMPORTS);
    }
    return imports;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<OclFeatureDefinition> getContextlessFeatures()
  {
    if (contextlessFeatures == null)
    {
      contextlessFeatures = new EObjectContainmentEList<OclFeatureDefinition>(OclFeatureDefinition.class, this, OclPackage.MODULE__CONTEXTLESS_FEATURES);
    }
    return contextlessFeatures;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<OclContextBlock> getContextBlocks()
  {
    if (contextBlocks == null)
    {
      contextBlocks = new EObjectContainmentEList<OclContextBlock>(OclContextBlock.class, this, OclPackage.MODULE__CONTEXT_BLOCKS);
    }
    return contextBlocks;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OclPackage.MODULE__IMPORTS:
        return ((InternalEList<?>)getImports()).basicRemove(otherEnd, msgs);
      case OclPackage.MODULE__CONTEXTLESS_FEATURES:
        return ((InternalEList<?>)getContextlessFeatures()).basicRemove(otherEnd, msgs);
      case OclPackage.MODULE__CONTEXT_BLOCKS:
        return ((InternalEList<?>)getContextBlocks()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OclPackage.MODULE__IMPORTS:
        return getImports();
      case OclPackage.MODULE__CONTEXTLESS_FEATURES:
        return getContextlessFeatures();
      case OclPackage.MODULE__CONTEXT_BLOCKS:
        return getContextBlocks();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OclPackage.MODULE__IMPORTS:
        getImports().clear();
        getImports().addAll((Collection<? extends Import>)newValue);
        return;
      case OclPackage.MODULE__CONTEXTLESS_FEATURES:
        getContextlessFeatures().clear();
        getContextlessFeatures().addAll((Collection<? extends OclFeatureDefinition>)newValue);
        return;
      case OclPackage.MODULE__CONTEXT_BLOCKS:
        getContextBlocks().clear();
        getContextBlocks().addAll((Collection<? extends OclContextBlock>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OclPackage.MODULE__IMPORTS:
        getImports().clear();
        return;
      case OclPackage.MODULE__CONTEXTLESS_FEATURES:
        getContextlessFeatures().clear();
        return;
      case OclPackage.MODULE__CONTEXT_BLOCKS:
        getContextBlocks().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OclPackage.MODULE__IMPORTS:
        return imports != null && !imports.isEmpty();
      case OclPackage.MODULE__CONTEXTLESS_FEATURES:
        return contextlessFeatures != null && !contextlessFeatures.isEmpty();
      case OclPackage.MODULE__CONTEXT_BLOCKS:
        return contextBlocks != null && !contextBlocks.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ModuleImpl
