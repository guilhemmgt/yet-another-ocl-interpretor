/*
 * generated by Xtext
 */
grammar InternalOcl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package fr.enseeiht.ocl.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.enseeiht.ocl.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.enseeiht.ocl.xtext.services.OclGrammarAccess;

}

@parser::members {

 	private OclGrammarAccess grammarAccess;

    public InternalOclParser(TokenStream input, OclGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Module";
   	}

   	@Override
   	protected OclGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModule
entryRuleModule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModuleRule()); }
	iv_ruleModule=ruleModule
	{ $current=$iv_ruleModule.current; }
	EOF;

// Rule Module
ruleModule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleAccess().getImportsImportParserRuleCall_0_0());
				}
				lv_imports_0_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleRule());
					}
					add(
						$current,
						"imports",
						lv_imports_0_0,
						"fr.enseeiht.ocl.xtext.Ocl.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleAccess().getElementsOclFeatureDefinitionParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleOclFeatureDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"fr.enseeiht.ocl.xtext.Ocl.OclFeatureDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleAccess().getElementsOclModuleElementParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleOclModuleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"fr.enseeiht.ocl.xtext.Ocl.OclModuleElement");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportRule());
					}
				}
				otherlv_1=RULE_STRING
				{
					newLeafNode(otherlv_1, grammarAccess.getImportAccess().getPackageEPackageCrossReference_1_0());
				}
			)
		)
		otherlv_2='as'
		{
			newLeafNode(otherlv_2, grammarAccess.getImportAccess().getAsKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getImportAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleOclModuleElement
entryRuleOclModuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOclModuleElementRule()); }
	iv_ruleOclModuleElement=ruleOclModuleElement
	{ $current=$iv_ruleOclModuleElement.current; }
	EOF;

// Rule OclModuleElement
ruleOclModuleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='context'
			{
				newLeafNode(otherlv_0, grammarAccess.getOclModuleElementAccess().getContextKeyword_0_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOclModuleElementRule());
						}
					}
					otherlv_1=RULE_ID
					{
						newLeafNode(otherlv_1, grammarAccess.getOclModuleElementAccess().getEcoreTypesImportCrossReference_0_1_0());
					}
				)
			)
			otherlv_2='!'
			{
				newLeafNode(otherlv_2, grammarAccess.getOclModuleElementAccess().getExclamationMarkKeyword_0_2());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOclModuleElementRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getOclModuleElementAccess().getClassEClassCrossReference_0_3_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOclModuleElementAccess().getMembersOclFeatureDefinitionParserRuleCall_1_0_0());
					}
					lv_members_4_1=ruleOclFeatureDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOclModuleElementRule());
						}
						add(
							$current,
							"members",
							lv_members_4_1,
							"fr.enseeiht.ocl.xtext.Ocl.OclFeatureDefinition");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getOclModuleElementAccess().getMembersOclInvariantParserRuleCall_1_0_1());
					}
					lv_members_4_2=ruleOclInvariant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOclModuleElementRule());
						}
						add(
							$current,
							"members",
							lv_members_4_2,
							"fr.enseeiht.ocl.xtext.Ocl.OclInvariant");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
	)
;

// Entry rule entryRuleOclFeatureDefinition
entryRuleOclFeatureDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOclFeatureDefinitionRule()); }
	iv_ruleOclFeatureDefinition=ruleOclFeatureDefinition
	{ $current=$iv_ruleOclFeatureDefinition.current; }
	EOF;

// Rule OclFeatureDefinition
ruleOclFeatureDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='def'
		{
			newLeafNode(otherlv_0, grammarAccess.getOclFeatureDefinitionAccess().getDefKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getOclFeatureDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOclFeatureDefinitionAccess().getFeatureAttributeParserRuleCall_2_0_0());
					}
					lv_feature_2_1=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOclFeatureDefinitionRule());
						}
						set(
							$current,
							"feature",
							lv_feature_2_1,
							"fr.enseeiht.ocl.xtext.Ocl.Attribute");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getOclFeatureDefinitionAccess().getFeatureOperationParserRuleCall_2_0_1());
					}
					lv_feature_2_2=ruleOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOclFeatureDefinitionRule());
						}
						set(
							$current,
							"feature",
							lv_feature_2_2,
							"fr.enseeiht.ocl.xtext.Ocl.Operation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAttributeAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getTypeOclTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleOclType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"fr.enseeiht.ocl.xtext.Ocl.OclType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getAttributeAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getInitExpressionOclExpressionParserRuleCall_4_0());
				}
				lv_initExpression_4_0=ruleOclExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"initExpression",
						lv_initExpression_4_0,
						"fr.enseeiht.ocl.xtext.Ocl.OclExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	iv_ruleOperation=ruleOperation
	{ $current=$iv_ruleOperation.current; }
	EOF;

// Rule Operation
ruleOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getOperationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationAccess().getParametersParameterParserRuleCall_2_0_0());
					}
					lv_parameters_2_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_2_0,
							"fr.enseeiht.ocl.xtext.Ocl.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getOperationAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOperationAccess().getParametersParameterParserRuleCall_2_1_1_0());
						}
						lv_parameters_4_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOperationRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_4_0,
								"fr.enseeiht.ocl.xtext.Ocl.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)+
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getOperationAccess().getRightParenthesisKeyword_3());
		}
		otherlv_6=':'
		{
			newLeafNode(otherlv_6, grammarAccess.getOperationAccess().getColonKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationAccess().getReturnTypeOclTypeParserRuleCall_5_0());
				}
				lv_returnType_7_0=ruleOclType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationRule());
					}
					set(
						$current,
						"returnType",
						lv_returnType_7_0,
						"fr.enseeiht.ocl.xtext.Ocl.OclType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='='
		{
			newLeafNode(otherlv_8, grammarAccess.getOperationAccess().getEqualsSignKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationAccess().getBodyOclExpressionParserRuleCall_7_0());
				}
				lv_body_9_0=ruleOclExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationRule());
					}
					set(
						$current,
						"body",
						lv_body_9_0,
						"fr.enseeiht.ocl.xtext.Ocl.OclExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getTypeOclTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleOclType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"fr.enseeiht.ocl.xtext.Ocl.OclType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOclInvariant
entryRuleOclInvariant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOclInvariantRule()); }
	iv_ruleOclInvariant=ruleOclInvariant
	{ $current=$iv_ruleOclInvariant.current; }
	EOF;

// Rule OclInvariant
ruleOclInvariant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='inv'
		{
			newLeafNode(otherlv_0, grammarAccess.getOclInvariantAccess().getInvKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getOclInvariantAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOclInvariantRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getOclInvariantAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOclInvariantAccess().getBodyOclExpressionParserRuleCall_3_0());
				}
				lv_body_3_0=ruleOclExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOclInvariantRule());
					}
					set(
						$current,
						"body",
						lv_body_3_0,
						"fr.enseeiht.ocl.xtext.Ocl.OclExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOclExpression
entryRuleOclExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOclExpressionRule()); }
	iv_ruleOclExpression=ruleOclExpression
	{ $current=$iv_ruleOclExpression.current; }
	EOF;

// Rule OclExpression
ruleOclExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOclExpressionAccess().getOperatorCallExpParserRuleCall_0());
		}
		this_OperatorCallExp_0=ruleOperatorCallExp
		{
			$current = $this_OperatorCallExp_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOclExpressionAccess().getLetExpParserRuleCall_1());
		}
		this_LetExp_1=ruleLetExp
		{
			$current = $this_LetExp_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOclModelElementExp
entryRuleOclModelElementExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOclModelElementExpRule()); }
	iv_ruleOclModelElementExp=ruleOclModelElementExp
	{ $current=$iv_ruleOclModelElementExp.current; }
	EOF;

// Rule OclModelElementExp
ruleOclModelElementExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOclModelElementExpRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getOclModelElementExpAccess().getModelImportCrossReference_0_0());
				}
			)
		)
		otherlv_1='!'
		{
			newLeafNode(otherlv_1, grammarAccess.getOclModelElementExpAccess().getExclamationMarkKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getOclModelElementExpAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOclModelElementExpRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleOperatorCallExp
entryRuleOperatorCallExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperatorCallExpRule()); }
	iv_ruleOperatorCallExp=ruleOperatorCallExp
	{ $current=$iv_ruleOperatorCallExp.current; }
	EOF;

// Rule OperatorCallExp
ruleOperatorCallExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOperatorCallExpAccess().getEqOpCallExpParserRuleCall_0());
		}
		this_EqOpCallExp_0=ruleEqOpCallExp
		{
			$current = $this_EqOpCallExp_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getOperatorCallExpAccess().getOperatorCallExpSourceAction_1_0_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getOperatorCallExpAccess().getOperationNameBOOLOPParserRuleCall_1_0_1_0());
						}
						lv_operationName_2_0=ruleBOOLOP
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOperatorCallExpRule());
							}
							set(
								$current,
								"operationName",
								lv_operationName_2_0,
								"fr.enseeiht.ocl.xtext.Ocl.BOOLOP");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOperatorCallExpAccess().getArgumentEqOpCallExpParserRuleCall_1_1_0());
					}
					lv_argument_3_0=ruleEqOpCallExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperatorCallExpRule());
						}
						set(
							$current,
							"argument",
							lv_argument_3_0,
							"fr.enseeiht.ocl.xtext.Ocl.EqOpCallExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleBOOLOP
entryRuleBOOLOP returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBOOLOPRule()); }
	iv_ruleBOOLOP=ruleBOOLOP
	{ $current=$iv_ruleBOOLOP.current.getText(); }
	EOF;

// Rule BOOLOP
ruleBOOLOP returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='and'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBOOLOPAccess().getAndKeyword_0());
		}
		    |
		kw='or'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBOOLOPAccess().getOrKeyword_1());
		}
		    |
		kw='xor'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBOOLOPAccess().getXorKeyword_2());
		}
		    |
		kw='implies'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBOOLOPAccess().getImpliesKeyword_3());
		}
		    |
		kw='equivalent'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBOOLOPAccess().getEquivalentKeyword_4());
		}
	)
;

// Entry rule entryRuleEqOpCallExp
entryRuleEqOpCallExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqOpCallExpRule()); }
	iv_ruleEqOpCallExp=ruleEqOpCallExp
	{ $current=$iv_ruleEqOpCallExp.current; }
	EOF;

// Rule EqOpCallExp
ruleEqOpCallExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqOpCallExpAccess().getRelOpCallExpParserRuleCall_0());
		}
		this_RelOpCallExp_0=ruleRelOpCallExp
		{
			$current = $this_RelOpCallExp_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getEqOpCallExpAccess().getEqOpCallExpSourceAction_1_0_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getEqOpCallExpAccess().getOperationNameEQOPParserRuleCall_1_0_1_0());
						}
						lv_operationName_2_0=ruleEQOP
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEqOpCallExpRule());
							}
							set(
								$current,
								"operationName",
								lv_operationName_2_0,
								"fr.enseeiht.ocl.xtext.Ocl.EQOP");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqOpCallExpAccess().getArgumentRelOpCallExpParserRuleCall_1_1_0());
					}
					lv_argument_3_0=ruleRelOpCallExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqOpCallExpRule());
						}
						set(
							$current,
							"argument",
							lv_argument_3_0,
							"fr.enseeiht.ocl.xtext.Ocl.RelOpCallExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleEQOP
entryRuleEQOP returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEQOPRule()); }
	iv_ruleEQOP=ruleEQOP
	{ $current=$iv_ruleEQOP.current.getText(); }
	EOF;

// Rule EQOP
ruleEQOP returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEQOPAccess().getEqualsSignKeyword_0());
		}
		    |
		kw='<>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEQOPAccess().getLessThanSignGreaterThanSignKeyword_1());
		}
	)
;

// Entry rule entryRuleRelOpCallExp
entryRuleRelOpCallExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelOpCallExpRule()); }
	iv_ruleRelOpCallExp=ruleRelOpCallExp
	{ $current=$iv_ruleRelOpCallExp.current; }
	EOF;

// Rule RelOpCallExp
ruleRelOpCallExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRelOpCallExpAccess().getAddOpCallExpParserRuleCall_0());
		}
		this_AddOpCallExp_0=ruleAddOpCallExp
		{
			$current = $this_AddOpCallExp_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getRelOpCallExpAccess().getRelOpCallExpSourceAction_1_0_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getRelOpCallExpAccess().getOperationNameRELOPParserRuleCall_1_0_1_0());
						}
						lv_operationName_2_0=ruleRELOP
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRelOpCallExpRule());
							}
							set(
								$current,
								"operationName",
								lv_operationName_2_0,
								"fr.enseeiht.ocl.xtext.Ocl.RELOP");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRelOpCallExpAccess().getArgumentAddOpCallExpParserRuleCall_1_1_0());
					}
					lv_argument_3_0=ruleAddOpCallExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelOpCallExpRule());
						}
						set(
							$current,
							"argument",
							lv_argument_3_0,
							"fr.enseeiht.ocl.xtext.Ocl.AddOpCallExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleRELOP
entryRuleRELOP returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRELOPRule()); }
	iv_ruleRELOP=ruleRELOP
	{ $current=$iv_ruleRELOP.current.getText(); }
	EOF;

// Rule RELOP
ruleRELOP returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRELOPAccess().getGreaterThanSignKeyword_0());
		}
		    |
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRELOPAccess().getLessThanSignKeyword_1());
		}
		    |
		kw='>='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRELOPAccess().getGreaterThanSignEqualsSignKeyword_2());
		}
		    |
		kw='<='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRELOPAccess().getLessThanSignEqualsSignKeyword_3());
		}
	)
;

// Entry rule entryRuleAddOpCallExp
entryRuleAddOpCallExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddOpCallExpRule()); }
	iv_ruleAddOpCallExp=ruleAddOpCallExp
	{ $current=$iv_ruleAddOpCallExp.current; }
	EOF;

// Rule AddOpCallExp
ruleAddOpCallExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAddOpCallExpAccess().getIntOpCallExpParserRuleCall_0());
		}
		this_IntOpCallExp_0=ruleIntOpCallExp
		{
			$current = $this_IntOpCallExp_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getAddOpCallExpAccess().getAddOpCallExpSourceAction_1_0_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getAddOpCallExpAccess().getOperationNameADDOPParserRuleCall_1_0_1_0());
						}
						lv_operationName_2_0=ruleADDOP
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAddOpCallExpRule());
							}
							set(
								$current,
								"operationName",
								lv_operationName_2_0,
								"fr.enseeiht.ocl.xtext.Ocl.ADDOP");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAddOpCallExpAccess().getArgumentIntOpCallExpParserRuleCall_1_1_0());
					}
					lv_argument_3_0=ruleIntOpCallExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAddOpCallExpRule());
						}
						set(
							$current,
							"argument",
							lv_argument_3_0,
							"fr.enseeiht.ocl.xtext.Ocl.IntOpCallExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleADDOP
entryRuleADDOP returns [String current=null]:
	{ newCompositeNode(grammarAccess.getADDOPRule()); }
	iv_ruleADDOP=ruleADDOP
	{ $current=$iv_ruleADDOP.current.getText(); }
	EOF;

// Rule ADDOP
ruleADDOP returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getADDOPAccess().getHyphenMinusKeyword_0());
		}
		    |
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getADDOPAccess().getPlusSignKeyword_1());
		}
	)
;

// Entry rule entryRuleIntOpCallExp
entryRuleIntOpCallExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntOpCallExpRule()); }
	iv_ruleIntOpCallExp=ruleIntOpCallExp
	{ $current=$iv_ruleIntOpCallExp.current; }
	EOF;

// Rule IntOpCallExp
ruleIntOpCallExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getIntOpCallExpAccess().getMulOpCallExpParserRuleCall_0());
		}
		this_MulOpCallExp_0=ruleMulOpCallExp
		{
			$current = $this_MulOpCallExp_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getIntOpCallExpAccess().getIntOpCallExpSourceAction_1_0_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getIntOpCallExpAccess().getOperationNameINTOPParserRuleCall_1_0_1_0());
						}
						lv_operationName_2_0=ruleINTOP
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIntOpCallExpRule());
							}
							set(
								$current,
								"operationName",
								lv_operationName_2_0,
								"fr.enseeiht.ocl.xtext.Ocl.INTOP");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIntOpCallExpAccess().getArgumentMulOpCallExpParserRuleCall_1_1_0());
					}
					lv_argument_3_0=ruleMulOpCallExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntOpCallExpRule());
						}
						set(
							$current,
							"argument",
							lv_argument_3_0,
							"fr.enseeiht.ocl.xtext.Ocl.MulOpCallExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleINTOP
entryRuleINTOP returns [String current=null]:
	{ newCompositeNode(grammarAccess.getINTOPRule()); }
	iv_ruleINTOP=ruleINTOP
	{ $current=$iv_ruleINTOP.current.getText(); }
	EOF;

// Rule INTOP
ruleINTOP returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='div'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getINTOPAccess().getDivKeyword_0());
		}
		    |
		kw='mod'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getINTOPAccess().getModKeyword_1());
		}
	)
;

// Entry rule entryRuleMulOpCallExp
entryRuleMulOpCallExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMulOpCallExpRule()); }
	iv_ruleMulOpCallExp=ruleMulOpCallExp
	{ $current=$iv_ruleMulOpCallExp.current; }
	EOF;

// Rule MulOpCallExp
ruleMulOpCallExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMulOpCallExpAccess().getNotOpCallExpParserRuleCall_0());
		}
		this_NotOpCallExp_0=ruleNotOpCallExp
		{
			$current = $this_NotOpCallExp_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getMulOpCallExpAccess().getMulOpCallExpSourceAction_1_0_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getMulOpCallExpAccess().getOperationNameMULOPParserRuleCall_1_0_1_0());
						}
						lv_operationName_2_0=ruleMULOP
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMulOpCallExpRule());
							}
							set(
								$current,
								"operationName",
								lv_operationName_2_0,
								"fr.enseeiht.ocl.xtext.Ocl.MULOP");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMulOpCallExpAccess().getArgumentNotOpCallExpParserRuleCall_1_1_0());
					}
					lv_argument_3_0=ruleNotOpCallExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMulOpCallExpRule());
						}
						set(
							$current,
							"argument",
							lv_argument_3_0,
							"fr.enseeiht.ocl.xtext.Ocl.NotOpCallExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMULOP
entryRuleMULOP returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMULOPRule()); }
	iv_ruleMULOP=ruleMULOP
	{ $current=$iv_ruleMULOP.current.getText(); }
	EOF;

// Rule MULOP
ruleMULOP returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMULOPAccess().getAsteriskKeyword_0());
		}
		    |
		kw='/'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMULOPAccess().getSolidusKeyword_1());
		}
	)
;

// Entry rule entryRuleNotOpCallExp
entryRuleNotOpCallExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotOpCallExpRule()); }
	iv_ruleNotOpCallExp=ruleNotOpCallExp
	{ $current=$iv_ruleNotOpCallExp.current; }
	EOF;

// Rule NotOpCallExp
ruleNotOpCallExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getNotOpCallExpAccess().getOperationNameUNARYOPParserRuleCall_0_0_0());
					}
					lv_operationName_0_0=ruleUNARYOP
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNotOpCallExpRule());
						}
						set(
							$current,
							"operationName",
							lv_operationName_0_0,
							"fr.enseeiht.ocl.xtext.Ocl.UNARYOP");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNotOpCallExpAccess().getSourceNotOpCallExpParserRuleCall_0_1_0());
					}
					lv_source_1_0=ruleNotOpCallExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNotOpCallExpRule());
						}
						set(
							$current,
							"source",
							lv_source_1_0,
							"fr.enseeiht.ocl.xtext.Ocl.NotOpCallExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getNotOpCallExpAccess().getPropertyCallExpParserRuleCall_1());
		}
		this_PropertyCallExp_2=rulePropertyCallExp
		{
			$current = $this_PropertyCallExp_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleUNARYOP
entryRuleUNARYOP returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUNARYOPRule()); }
	iv_ruleUNARYOP=ruleUNARYOP
	{ $current=$iv_ruleUNARYOP.current.getText(); }
	EOF;

// Rule UNARYOP
ruleUNARYOP returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='not'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUNARYOPAccess().getNotKeyword_0());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUNARYOPAccess().getHyphenMinusKeyword_1());
		}
	)
;

// Entry rule entryRulePropertyCallExp
entryRulePropertyCallExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyCallExpRule()); }
	iv_rulePropertyCallExp=rulePropertyCallExp
	{ $current=$iv_rulePropertyCallExp.current; }
	EOF;

// Rule PropertyCallExp
rulePropertyCallExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyCallExpAccess().getSourcePrimary_OclExpressionParserRuleCall_0_0());
				}
				lv_source_0_0=rulePrimary_OclExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyCallExpRule());
					}
					set(
						$current,
						"source",
						lv_source_0_0,
						"fr.enseeiht.ocl.xtext.Ocl.Primary_OclExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyCallExpAccess().getCallsPropertyCallParserRuleCall_1_0());
				}
				lv_calls_1_0=rulePropertyCall
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyCallExpRule());
					}
					add(
						$current,
						"calls",
						lv_calls_1_0,
						"fr.enseeiht.ocl.xtext.Ocl.PropertyCall");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRulePrimary_OclExpression
entryRulePrimary_OclExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimary_OclExpressionRule()); }
	iv_rulePrimary_OclExpression=rulePrimary_OclExpression
	{ $current=$iv_rulePrimary_OclExpression.current; }
	EOF;

// Rule Primary_OclExpression
rulePrimary_OclExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimary_OclExpressionAccess().getVariableExpParserRuleCall_0());
		}
		this_VariableExp_0=ruleVariableExp
		{
			$current = $this_VariableExp_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimary_OclExpressionAccess().getSelfExpParserRuleCall_1());
		}
		this_SelfExp_1=ruleSelfExp
		{
			$current = $this_SelfExp_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimary_OclExpressionAccess().getStringExpParserRuleCall_2());
		}
		this_StringExp_2=ruleStringExp
		{
			$current = $this_StringExp_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimary_OclExpressionAccess().getBooleanExpParserRuleCall_3());
		}
		this_BooleanExp_3=ruleBooleanExp
		{
			$current = $this_BooleanExp_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimary_OclExpressionAccess().getNumericExpParserRuleCall_4());
		}
		this_NumericExp_4=ruleNumericExp
		{
			$current = $this_NumericExp_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimary_OclExpressionAccess().getBagExpParserRuleCall_5());
		}
		this_BagExp_5=ruleBagExp
		{
			$current = $this_BagExp_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimary_OclExpressionAccess().getOrderedSetExpParserRuleCall_6());
		}
		this_OrderedSetExp_6=ruleOrderedSetExp
		{
			$current = $this_OrderedSetExp_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimary_OclExpressionAccess().getSequenceExpParserRuleCall_7());
		}
		this_SequenceExp_7=ruleSequenceExp
		{
			$current = $this_SequenceExp_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimary_OclExpressionAccess().getSetExpParserRuleCall_8());
		}
		this_SetExp_8=ruleSetExp
		{
			$current = $this_SetExp_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimary_OclExpressionAccess().getTupleExpParserRuleCall_9());
		}
		this_TupleExp_9=ruleTupleExp
		{
			$current = $this_TupleExp_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimary_OclExpressionAccess().getMapExpParserRuleCall_10());
		}
		this_MapExp_10=ruleMapExp
		{
			$current = $this_MapExp_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimary_OclExpressionAccess().getEnumLiteralExpParserRuleCall_11());
		}
		this_EnumLiteralExp_11=ruleEnumLiteralExp
		{
			$current = $this_EnumLiteralExp_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimary_OclExpressionAccess().getIfExpParserRuleCall_12());
		}
		this_IfExp_12=ruleIfExp
		{
			$current = $this_IfExp_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimary_OclExpressionAccess().getBraceExpParserRuleCall_13());
		}
		this_BraceExp_13=ruleBraceExp
		{
			$current = $this_BraceExp_13.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimary_OclExpressionAccess().getOclModelElementExpParserRuleCall_14());
		}
		this_OclModelElementExp_14=ruleOclModelElementExp
		{
			$current = $this_OclModelElementExp_14.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleVariableExp
entryRuleVariableExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableExpRule()); }
	iv_ruleVariableExp=ruleVariableExp
	{ $current=$iv_ruleVariableExp.current; }
	EOF;

// Rule VariableExp
ruleVariableExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getVariableExpRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getVariableExpAccess().getReferredVariableAuxiliaryCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleSelfExp
entryRuleSelfExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelfExpRule()); }
	iv_ruleSelfExp=ruleSelfExp
	{ $current=$iv_ruleSelfExp.current; }
	EOF;

// Rule SelfExp
ruleSelfExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSelfExpAccess().getSelfExpAction_0(),
					$current);
			}
		)
		otherlv_1='self'
		{
			newLeafNode(otherlv_1, grammarAccess.getSelfExpAccess().getSelfKeyword_1());
		}
	)
;

// Entry rule entryRuleStringExp
entryRuleStringExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringExpRule()); }
	iv_ruleStringExp=ruleStringExp
	{ $current=$iv_ruleStringExp.current; }
	EOF;

// Rule StringExp
ruleStringExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStringExpAccess().getStringExpAction_0(),
					$current);
			}
		)
		(
			(
				lv_stringSymbol_1_0=RULE_STRING
				{
					newLeafNode(lv_stringSymbol_1_0, grammarAccess.getStringExpAccess().getStringSymbolSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringExpRule());
					}
					setWithLastConsumed(
						$current,
						"stringSymbol",
						lv_stringSymbol_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleNumericExp
entryRuleNumericExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumericExpRule()); }
	iv_ruleNumericExp=ruleNumericExp
	{ $current=$iv_ruleNumericExp.current; }
	EOF;

// Rule NumericExp
ruleNumericExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNumericExpAccess().getRealExpParserRuleCall_0());
		}
		this_RealExp_0=ruleRealExp
		{
			$current = $this_RealExp_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNumericExpAccess().getIntegerExpParserRuleCall_1());
		}
		this_IntegerExp_1=ruleIntegerExp
		{
			$current = $this_IntegerExp_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRealExp
entryRuleRealExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRealExpRule()); }
	iv_ruleRealExp=ruleRealExp
	{ $current=$iv_ruleRealExp.current; }
	EOF;

// Rule RealExp
ruleRealExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_realSymbol_0_0=RULE_DOUBLE
			{
				newLeafNode(lv_realSymbol_0_0, grammarAccess.getRealExpAccess().getRealSymbolDOUBLETerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getRealExpRule());
				}
				setWithLastConsumed(
					$current,
					"realSymbol",
					lv_realSymbol_0_0,
					"fr.enseeiht.ocl.xtext.Ocl.DOUBLE");
			}
		)
	)
;

// Entry rule entryRuleIntegerExp
entryRuleIntegerExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerExpRule()); }
	iv_ruleIntegerExp=ruleIntegerExp
	{ $current=$iv_ruleIntegerExp.current; }
	EOF;

// Rule IntegerExp
ruleIntegerExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIntegerExpAccess().getIntegerExpAction_0(),
					$current);
			}
		)
		(
			(
				lv_integerSymbol_1_0=RULE_INT
				{
					newLeafNode(lv_integerSymbol_1_0, grammarAccess.getIntegerExpAccess().getIntegerSymbolINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntegerExpRule());
					}
					setWithLastConsumed(
						$current,
						"integerSymbol",
						lv_integerSymbol_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleBagExp
entryRuleBagExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBagExpRule()); }
	iv_ruleBagExp=ruleBagExp
	{ $current=$iv_ruleBagExp.current; }
	EOF;

// Rule BagExp
ruleBagExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBagExpAccess().getBagExpAction_0(),
					$current);
			}
		)
		otherlv_1='Bag'
		{
			newLeafNode(otherlv_1, grammarAccess.getBagExpAccess().getBagKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getBagExpAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBagExpAccess().getElementsOclExpressionParserRuleCall_3_0_0());
					}
					lv_elements_3_0=ruleOclExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBagExpRule());
						}
						add(
							$current,
							"elements",
							lv_elements_3_0,
							"fr.enseeiht.ocl.xtext.Ocl.OclExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getBagExpAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBagExpAccess().getElementsOclExpressionParserRuleCall_3_1_1_0());
						}
						lv_elements_5_0=ruleOclExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBagExpRule());
							}
							add(
								$current,
								"elements",
								lv_elements_5_0,
								"fr.enseeiht.ocl.xtext.Ocl.OclExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getBagExpAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleOrderedSetExp
entryRuleOrderedSetExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrderedSetExpRule()); }
	iv_ruleOrderedSetExp=ruleOrderedSetExp
	{ $current=$iv_ruleOrderedSetExp.current; }
	EOF;

// Rule OrderedSetExp
ruleOrderedSetExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getOrderedSetExpAccess().getOrderedSetExpAction_0(),
					$current);
			}
		)
		otherlv_1='OrderedSet'
		{
			newLeafNode(otherlv_1, grammarAccess.getOrderedSetExpAccess().getOrderedSetKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getOrderedSetExpAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOrderedSetExpAccess().getElementsOclExpressionParserRuleCall_3_0_0());
					}
					lv_elements_3_0=ruleOclExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrderedSetExpRule());
						}
						add(
							$current,
							"elements",
							lv_elements_3_0,
							"fr.enseeiht.ocl.xtext.Ocl.OclExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getOrderedSetExpAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOrderedSetExpAccess().getElementsOclExpressionParserRuleCall_3_1_1_0());
						}
						lv_elements_5_0=ruleOclExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOrderedSetExpRule());
							}
							add(
								$current,
								"elements",
								lv_elements_5_0,
								"fr.enseeiht.ocl.xtext.Ocl.OclExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getOrderedSetExpAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleSequenceExp
entryRuleSequenceExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSequenceExpRule()); }
	iv_ruleSequenceExp=ruleSequenceExp
	{ $current=$iv_ruleSequenceExp.current; }
	EOF;

// Rule SequenceExp
ruleSequenceExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSequenceExpAccess().getSequenceExpAction_0(),
					$current);
			}
		)
		otherlv_1='Sequence'
		{
			newLeafNode(otherlv_1, grammarAccess.getSequenceExpAccess().getSequenceKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSequenceExpAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSequenceExpAccess().getElementsOclExpressionParserRuleCall_3_0_0());
					}
					lv_elements_3_0=ruleOclExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSequenceExpRule());
						}
						add(
							$current,
							"elements",
							lv_elements_3_0,
							"fr.enseeiht.ocl.xtext.Ocl.OclExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getSequenceExpAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSequenceExpAccess().getElementsOclExpressionParserRuleCall_3_1_1_0());
						}
						lv_elements_5_0=ruleOclExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSequenceExpRule());
							}
							add(
								$current,
								"elements",
								lv_elements_5_0,
								"fr.enseeiht.ocl.xtext.Ocl.OclExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getSequenceExpAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleSetExp
entryRuleSetExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetExpRule()); }
	iv_ruleSetExp=ruleSetExp
	{ $current=$iv_ruleSetExp.current; }
	EOF;

// Rule SetExp
ruleSetExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSetExpAccess().getSetExpAction_0(),
					$current);
			}
		)
		otherlv_1='Set'
		{
			newLeafNode(otherlv_1, grammarAccess.getSetExpAccess().getSetKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSetExpAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSetExpAccess().getElementsOclExpressionParserRuleCall_3_0_0());
					}
					lv_elements_3_0=ruleOclExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetExpRule());
						}
						add(
							$current,
							"elements",
							lv_elements_3_0,
							"fr.enseeiht.ocl.xtext.Ocl.OclExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getSetExpAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSetExpAccess().getElementsOclExpressionParserRuleCall_3_1_1_0());
						}
						lv_elements_5_0=ruleOclExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSetExpRule());
							}
							add(
								$current,
								"elements",
								lv_elements_5_0,
								"fr.enseeiht.ocl.xtext.Ocl.OclExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getSetExpAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleTupleExp
entryRuleTupleExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTupleExpRule()); }
	iv_ruleTupleExp=ruleTupleExp
	{ $current=$iv_ruleTupleExp.current; }
	EOF;

// Rule TupleExp
ruleTupleExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTupleExpAccess().getTupleExpAction_0(),
					$current);
			}
		)
		otherlv_1='Tuple'
		{
			newLeafNode(otherlv_1, grammarAccess.getTupleExpAccess().getTupleKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getTupleExpAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTupleExpAccess().getTuplePartTuplePartParserRuleCall_3_0_0());
					}
					lv_tuplePart_3_0=ruleTuplePart
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTupleExpRule());
						}
						add(
							$current,
							"tuplePart",
							lv_tuplePart_3_0,
							"fr.enseeiht.ocl.xtext.Ocl.TuplePart");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getTupleExpAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTupleExpAccess().getTuplePartTuplePartParserRuleCall_3_1_1_0());
						}
						lv_tuplePart_5_0=ruleTuplePart
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTupleExpRule());
							}
							add(
								$current,
								"tuplePart",
								lv_tuplePart_5_0,
								"fr.enseeiht.ocl.xtext.Ocl.TuplePart");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getTupleExpAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleTuplePart
entryRuleTuplePart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTuplePartRule()); }
	iv_ruleTuplePart=ruleTuplePart
	{ $current=$iv_ruleTuplePart.current; }
	EOF;

// Rule TuplePart
ruleTuplePart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_varName_0_0=RULE_STRING
				{
					newLeafNode(lv_varName_0_0, grammarAccess.getTuplePartAccess().getVarNameSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTuplePartRule());
					}
					setWithLastConsumed(
						$current,
						"varName",
						lv_varName_0_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getTuplePartAccess().getColonKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTuplePartAccess().getTypeOclTypeParserRuleCall_1_1_0());
					}
					lv_type_2_0=ruleOclType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTuplePartRule());
						}
						set(
							$current,
							"type",
							lv_type_2_0,
							"fr.enseeiht.ocl.xtext.Ocl.OclType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getTuplePartAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTuplePartAccess().getInitExpressionOclExpressionParserRuleCall_3_0());
				}
				lv_initExpression_4_0=ruleOclExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTuplePartRule());
					}
					set(
						$current,
						"initExpression",
						lv_initExpression_4_0,
						"fr.enseeiht.ocl.xtext.Ocl.OclExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMapExp
entryRuleMapExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapExpRule()); }
	iv_ruleMapExp=ruleMapExp
	{ $current=$iv_ruleMapExp.current; }
	EOF;

// Rule MapExp
ruleMapExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMapExpAccess().getMapExpAction_0(),
					$current);
			}
		)
		otherlv_1='Map'
		{
			newLeafNode(otherlv_1, grammarAccess.getMapExpAccess().getMapKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMapExpAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMapExpAccess().getElementsMapElementParserRuleCall_3_0_0());
					}
					lv_elements_3_0=ruleMapElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMapExpRule());
						}
						add(
							$current,
							"elements",
							lv_elements_3_0,
							"fr.enseeiht.ocl.xtext.Ocl.MapElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getMapExpAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMapExpAccess().getElementsMapElementParserRuleCall_3_1_1_0());
						}
						lv_elements_5_0=ruleMapElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMapExpRule());
							}
							add(
								$current,
								"elements",
								lv_elements_5_0,
								"fr.enseeiht.ocl.xtext.Ocl.MapElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getMapExpAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleMapElement
entryRuleMapElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapElementRule()); }
	iv_ruleMapElement=ruleMapElement
	{ $current=$iv_ruleMapElement.current; }
	EOF;

// Rule MapElement
ruleMapElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getMapElementAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapElementAccess().getKeyOclExpressionParserRuleCall_1_0());
				}
				lv_key_1_0=ruleOclExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapElementRule());
					}
					set(
						$current,
						"key",
						lv_key_1_0,
						"fr.enseeiht.ocl.xtext.Ocl.OclExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getMapElementAccess().getCommaKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapElementAccess().getValueOclExpressionParserRuleCall_3_0());
				}
				lv_value_3_0=ruleOclExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapElementRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"fr.enseeiht.ocl.xtext.Ocl.OclExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getMapElementAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleEnumLiteralExp
entryRuleEnumLiteralExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumLiteralExpRule()); }
	iv_ruleEnumLiteralExp=ruleEnumLiteralExp
	{ $current=$iv_ruleEnumLiteralExp.current; }
	EOF;

// Rule EnumLiteralExp
ruleEnumLiteralExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='#'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumLiteralExpAccess().getNumberSignKeyword_0());
		}
		(
			(
				(
					lv_name_1_0=RULE_STRING
					{
						newLeafNode(lv_name_1_0, grammarAccess.getEnumLiteralExpAccess().getNameSTRINGTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnumLiteralExpRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			    |
			(
				(
					lv_name_2_0=RULE_ID
					{
						newLeafNode(lv_name_2_0, grammarAccess.getEnumLiteralExpAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnumLiteralExpRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleLetExp
entryRuleLetExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLetExpRule()); }
	iv_ruleLetExp=ruleLetExp
	{ $current=$iv_ruleLetExp.current; }
	EOF;

// Rule LetExp
ruleLetExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='let'
		{
			newLeafNode(otherlv_0, grammarAccess.getLetExpAccess().getLetKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLetExpAccess().getVariableLocalVariableParserRuleCall_1_0());
				}
				lv_variable_1_0=ruleLocalVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLetExpRule());
					}
					set(
						$current,
						"variable",
						lv_variable_1_0,
						"fr.enseeiht.ocl.xtext.Ocl.LocalVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getLetExpAccess().getInKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLetExpAccess().getIn_OclExpressionParserRuleCall_3_0());
				}
				lv_in__3_0=ruleOclExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLetExpRule());
					}
					set(
						$current,
						"in_",
						lv_in__3_0,
						"fr.enseeiht.ocl.xtext.Ocl.OclExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIfExp
entryRuleIfExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfExpRule()); }
	iv_ruleIfExp=ruleIfExp
	{ $current=$iv_ruleIfExp.current; }
	EOF;

// Rule IfExp
ruleIfExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfExpAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfExpAccess().getConditionOclExpressionParserRuleCall_1_0());
				}
				lv_condition_1_0=ruleOclExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfExpRule());
					}
					set(
						$current,
						"condition",
						lv_condition_1_0,
						"fr.enseeiht.ocl.xtext.Ocl.OclExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='then'
		{
			newLeafNode(otherlv_2, grammarAccess.getIfExpAccess().getThenKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfExpAccess().getThenExpressionOclExpressionParserRuleCall_3_0());
				}
				lv_thenExpression_3_0=ruleOclExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfExpRule());
					}
					set(
						$current,
						"thenExpression",
						lv_thenExpression_3_0,
						"fr.enseeiht.ocl.xtext.Ocl.OclExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='else'
		{
			newLeafNode(otherlv_4, grammarAccess.getIfExpAccess().getElseKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfExpAccess().getElseExpressionOclExpressionParserRuleCall_5_0());
				}
				lv_elseExpression_5_0=ruleOclExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfExpRule());
					}
					set(
						$current,
						"elseExpression",
						lv_elseExpression_5_0,
						"fr.enseeiht.ocl.xtext.Ocl.OclExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='endif'
		{
			newLeafNode(otherlv_6, grammarAccess.getIfExpAccess().getEndifKeyword_6());
		}
	)
;

// Entry rule entryRuleBraceExp
entryRuleBraceExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBraceExpRule()); }
	iv_ruleBraceExp=ruleBraceExp
	{ $current=$iv_ruleBraceExp.current; }
	EOF;

// Rule BraceExp
ruleBraceExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getBraceExpAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBraceExpAccess().getExpOclExpressionParserRuleCall_1_0());
				}
				lv_exp_1_0=ruleOclExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBraceExpRule());
					}
					set(
						$current,
						"exp",
						lv_exp_1_0,
						"fr.enseeiht.ocl.xtext.Ocl.OclExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getBraceExpAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleBooleanExp
entryRuleBooleanExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanExpRule()); }
	iv_ruleBooleanExp=ruleBooleanExp
	{ $current=$iv_ruleBooleanExp.current; }
	EOF;

// Rule BooleanExp
ruleBooleanExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_booleanSymbol_0_0='true'
				{
					newLeafNode(lv_booleanSymbol_0_0, grammarAccess.getBooleanExpAccess().getBooleanSymbolTrueKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanExpRule());
					}
					setWithLastConsumed($current, "booleanSymbol", lv_booleanSymbol_0_0, "true");
				}
			)
		)
		    |
		(
			(
				lv_booleanSymbol_1_0='false'
				{
					newLeafNode(lv_booleanSymbol_1_0, grammarAccess.getBooleanExpAccess().getBooleanSymbolFalseKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanExpRule());
					}
					setWithLastConsumed($current, "booleanSymbol", lv_booleanSymbol_1_0, "false");
				}
			)
		)
	)
;

// Entry rule entryRulePropertyCall
entryRulePropertyCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyCallRule()); }
	iv_rulePropertyCall=rulePropertyCall
	{ $current=$iv_rulePropertyCall.current; }
	EOF;

// Rule PropertyCall
rulePropertyCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPropertyCallAccess().getOperationCallParserRuleCall_0());
		}
		this_OperationCall_0=ruleOperationCall
		{
			$current = $this_OperationCall_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyCallAccess().getNavigationOrAttributeCallParserRuleCall_1());
		}
		this_NavigationOrAttributeCall_1=ruleNavigationOrAttributeCall
		{
			$current = $this_NavigationOrAttributeCall_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyCallAccess().getIterateExpParserRuleCall_2());
		}
		this_IterateExp_2=ruleIterateExp
		{
			$current = $this_IterateExp_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyCallAccess().getIteratorExpParserRuleCall_3());
		}
		this_IteratorExp_3=ruleIteratorExp
		{
			$current = $this_IteratorExp_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyCallAccess().getCollectionOperationCallParserRuleCall_4());
		}
		this_CollectionOperationCall_4=ruleCollectionOperationCall
		{
			$current = $this_CollectionOperationCall_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOperationCall
entryRuleOperationCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationCallRule()); }
	iv_ruleOperationCall=ruleOperationCall
	{ $current=$iv_ruleOperationCall.current; }
	EOF;

// Rule OperationCall
ruleOperationCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='.'
		{
			newLeafNode(otherlv_0, grammarAccess.getOperationCallAccess().getFullStopKeyword_0());
		}
		(
			(
				(
					lv_operationName_1_0=RULE_STRING
					{
						newLeafNode(lv_operationName_1_0, grammarAccess.getOperationCallAccess().getOperationNameSTRINGTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperationCallRule());
						}
						setWithLastConsumed(
							$current,
							"operationName",
							lv_operationName_1_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			    |
			(
				(
					lv_operationName_2_0=RULE_ID
					{
						newLeafNode(lv_operationName_2_0, grammarAccess.getOperationCallAccess().getOperationNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperationCallRule());
						}
						setWithLastConsumed(
							$current,
							"operationName",
							lv_operationName_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationCallAccess().getArgumentsOclExpressionParserRuleCall_3_0_0());
					}
					lv_arguments_4_0=ruleOclExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationCallRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_4_0,
							"fr.enseeiht.ocl.xtext.Ocl.OclExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getOperationCallAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOperationCallAccess().getArgumentsOclExpressionParserRuleCall_3_1_1_0());
						}
						lv_arguments_6_0=ruleOclExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOperationCallRule());
							}
							add(
								$current,
								"arguments",
								lv_arguments_6_0,
								"fr.enseeiht.ocl.xtext.Ocl.OclExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleNavigationOrAttributeCall
entryRuleNavigationOrAttributeCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNavigationOrAttributeCallRule()); }
	iv_ruleNavigationOrAttributeCall=ruleNavigationOrAttributeCall
	{ $current=$iv_ruleNavigationOrAttributeCall.current; }
	EOF;

// Rule NavigationOrAttributeCall
ruleNavigationOrAttributeCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='.'
		{
			newLeafNode(otherlv_0, grammarAccess.getNavigationOrAttributeCallAccess().getFullStopKeyword_0());
		}
		(
			(
				(
					lv_name_1_0=RULE_STRING
					{
						newLeafNode(lv_name_1_0, grammarAccess.getNavigationOrAttributeCallAccess().getNameSTRINGTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNavigationOrAttributeCallRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			    |
			(
				(
					lv_name_2_0=RULE_ID
					{
						newLeafNode(lv_name_2_0, grammarAccess.getNavigationOrAttributeCallAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNavigationOrAttributeCallRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleIterateExp
entryRuleIterateExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIterateExpRule()); }
	iv_ruleIterateExp=ruleIterateExp
	{ $current=$iv_ruleIterateExp.current; }
	EOF;

// Rule IterateExp
ruleIterateExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='->'
		{
			newLeafNode(otherlv_0, grammarAccess.getIterateExpAccess().getHyphenMinusGreaterThanSignKeyword_0());
		}
		otherlv_1='iterate'
		{
			newLeafNode(otherlv_1, grammarAccess.getIterateExpAccess().getIterateKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getIterateExpAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIterateExpAccess().getIteratorsIteratorParserRuleCall_3_0());
				}
				lv_iterators_3_0=ruleIterator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIterateExpRule());
					}
					add(
						$current,
						"iterators",
						lv_iterators_3_0,
						"fr.enseeiht.ocl.xtext.Ocl.Iterator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getIterateExpAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIterateExpAccess().getIteratorsIteratorParserRuleCall_4_1_0());
					}
					lv_iterators_5_0=ruleIterator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIterateExpRule());
						}
						add(
							$current,
							"iterators",
							lv_iterators_5_0,
							"fr.enseeiht.ocl.xtext.Ocl.Iterator");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getIterateExpAccess().getSemicolonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIterateExpAccess().getResultLocalVariableParserRuleCall_6_0());
				}
				lv_result_7_0=ruleLocalVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIterateExpRule());
					}
					set(
						$current,
						"result",
						lv_result_7_0,
						"fr.enseeiht.ocl.xtext.Ocl.LocalVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='|'
		{
			newLeafNode(otherlv_8, grammarAccess.getIterateExpAccess().getVerticalLineKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIterateExpAccess().getBodyOclExpressionParserRuleCall_8_0());
				}
				lv_body_9_0=ruleOclExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIterateExpRule());
					}
					set(
						$current,
						"body",
						lv_body_9_0,
						"fr.enseeiht.ocl.xtext.Ocl.OclExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10=')'
		{
			newLeafNode(otherlv_10, grammarAccess.getIterateExpAccess().getRightParenthesisKeyword_9());
		}
	)
;

// Entry rule entryRuleIterator
entryRuleIterator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIteratorRule()); }
	iv_ruleIterator=ruleIterator
	{ $current=$iv_ruleIterator.current; }
	EOF;

// Rule Iterator
ruleIterator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getIteratorAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIteratorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getIteratorAccess().getColonKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIteratorAccess().getTypeOclTypeParserRuleCall_1_1_0());
					}
					lv_type_2_0=ruleOclType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIteratorRule());
						}
						set(
							$current,
							"type",
							lv_type_2_0,
							"fr.enseeiht.ocl.xtext.Ocl.OclType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleIteratorExp
entryRuleIteratorExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIteratorExpRule()); }
	iv_ruleIteratorExp=ruleIteratorExp
	{ $current=$iv_ruleIteratorExp.current; }
	EOF;

// Rule IteratorExp
ruleIteratorExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='->'
		{
			newLeafNode(otherlv_0, grammarAccess.getIteratorExpAccess().getHyphenMinusGreaterThanSignKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getIteratorExpAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIteratorExpRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getIteratorExpAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIteratorExpAccess().getIteratorsIteratorParserRuleCall_3_0());
				}
				lv_iterators_3_0=ruleIterator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIteratorExpRule());
					}
					add(
						$current,
						"iterators",
						lv_iterators_3_0,
						"fr.enseeiht.ocl.xtext.Ocl.Iterator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getIteratorExpAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIteratorExpAccess().getIteratorsIteratorParserRuleCall_4_1_0());
					}
					lv_iterators_5_0=ruleIterator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIteratorExpRule());
						}
						add(
							$current,
							"iterators",
							lv_iterators_5_0,
							"fr.enseeiht.ocl.xtext.Ocl.Iterator");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6='|'
		{
			newLeafNode(otherlv_6, grammarAccess.getIteratorExpAccess().getVerticalLineKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIteratorExpAccess().getBodyOclExpressionParserRuleCall_6_0());
				}
				lv_body_7_0=ruleOclExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIteratorExpRule());
					}
					set(
						$current,
						"body",
						lv_body_7_0,
						"fr.enseeiht.ocl.xtext.Ocl.OclExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getIteratorExpAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRuleCollectionOperationCall
entryRuleCollectionOperationCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionOperationCallRule()); }
	iv_ruleCollectionOperationCall=ruleCollectionOperationCall
	{ $current=$iv_ruleCollectionOperationCall.current; }
	EOF;

// Rule CollectionOperationCall
ruleCollectionOperationCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='->'
		{
			newLeafNode(otherlv_0, grammarAccess.getCollectionOperationCallAccess().getHyphenMinusGreaterThanSignKeyword_0());
		}
		(
			(
				lv_operationName_1_0=RULE_ID
				{
					newLeafNode(lv_operationName_1_0, grammarAccess.getCollectionOperationCallAccess().getOperationNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCollectionOperationCallRule());
					}
					setWithLastConsumed(
						$current,
						"operationName",
						lv_operationName_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getCollectionOperationCallAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCollectionOperationCallAccess().getArgumentsOclExpressionParserRuleCall_3_0_0());
					}
					lv_arguments_3_0=ruleOclExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollectionOperationCallRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_3_0,
							"fr.enseeiht.ocl.xtext.Ocl.OclExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getCollectionOperationCallAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCollectionOperationCallAccess().getArgumentsOclExpressionParserRuleCall_3_1_1_0());
						}
						lv_arguments_5_0=ruleOclExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCollectionOperationCallRule());
							}
							add(
								$current,
								"arguments",
								lv_arguments_5_0,
								"fr.enseeiht.ocl.xtext.Ocl.OclExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getCollectionOperationCallAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleLocalVariable
entryRuleLocalVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocalVariableRule()); }
	iv_ruleLocalVariable=ruleLocalVariable
	{ $current=$iv_ruleLocalVariable.current; }
	EOF;

// Rule LocalVariable
ruleLocalVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getLocalVariableAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLocalVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getLocalVariableAccess().getColonKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLocalVariableAccess().getTypeOclTypeParserRuleCall_1_1_0());
					}
					lv_type_2_0=ruleOclType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLocalVariableRule());
						}
						set(
							$current,
							"type",
							lv_type_2_0,
							"fr.enseeiht.ocl.xtext.Ocl.OclType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getLocalVariableAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLocalVariableAccess().getInitExpressionOclExpressionParserRuleCall_3_0());
				}
				lv_initExpression_4_0=ruleOclExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLocalVariableRule());
					}
					set(
						$current,
						"initExpression",
						lv_initExpression_4_0,
						"fr.enseeiht.ocl.xtext.Ocl.OclExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOclType
entryRuleOclType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOclTypeRule()); }
	iv_ruleOclType=ruleOclType
	{ $current=$iv_ruleOclType.current; }
	EOF;

// Rule OclType
ruleOclType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOclTypeAccess().getCollectionTypeParserRuleCall_0());
		}
		this_CollectionType_0=ruleCollectionType
		{
			$current = $this_CollectionType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOclTypeAccess().getPrimitiveParserRuleCall_1());
		}
		this_Primitive_1=rulePrimitive
		{
			$current = $this_Primitive_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOclTypeAccess().getOclAnyTypeParserRuleCall_2());
		}
		this_OclAnyType_2=ruleOclAnyType
		{
			$current = $this_OclAnyType_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOclTypeAccess().getTupleTypeParserRuleCall_3());
		}
		this_TupleType_3=ruleTupleType
		{
			$current = $this_TupleType_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOclTypeAccess().getOclModelElementParserRuleCall_4());
		}
		this_OclModelElement_4=ruleOclModelElement
		{
			$current = $this_OclModelElement_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOclTypeAccess().getMapTypeParserRuleCall_5());
		}
		this_MapType_5=ruleMapType
		{
			$current = $this_MapType_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCollectionType
entryRuleCollectionType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionTypeRule()); }
	iv_ruleCollectionType=ruleCollectionType
	{ $current=$iv_ruleCollectionType.current; }
	EOF;

// Rule CollectionType
ruleCollectionType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCollectionTypeAccess().getBagTypeParserRuleCall_0());
		}
		this_BagType_0=ruleBagType
		{
			$current = $this_BagType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCollectionTypeAccess().getOrderedSetTypeParserRuleCall_1());
		}
		this_OrderedSetType_1=ruleOrderedSetType
		{
			$current = $this_OrderedSetType_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCollectionTypeAccess().getSequenceTypeParserRuleCall_2());
		}
		this_SequenceType_2=ruleSequenceType
		{
			$current = $this_SequenceType_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCollectionTypeAccess().getSetTypeParserRuleCall_3());
		}
		this_SetType_3=ruleSetType
		{
			$current = $this_SetType_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBagType
entryRuleBagType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBagTypeRule()); }
	iv_ruleBagType=ruleBagType
	{ $current=$iv_ruleBagType.current; }
	EOF;

// Rule BagType
ruleBagType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Bag'
		{
			newLeafNode(otherlv_0, grammarAccess.getBagTypeAccess().getBagKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getBagTypeAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBagTypeAccess().getElementTypeOclTypeParserRuleCall_2_0());
				}
				lv_elementType_2_0=ruleOclType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBagTypeRule());
					}
					set(
						$current,
						"elementType",
						lv_elementType_2_0,
						"fr.enseeiht.ocl.xtext.Ocl.OclType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getBagTypeAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleOrderedSetType
entryRuleOrderedSetType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrderedSetTypeRule()); }
	iv_ruleOrderedSetType=ruleOrderedSetType
	{ $current=$iv_ruleOrderedSetType.current; }
	EOF;

// Rule OrderedSetType
ruleOrderedSetType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='OrderedSet'
		{
			newLeafNode(otherlv_0, grammarAccess.getOrderedSetTypeAccess().getOrderedSetKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getOrderedSetTypeAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOrderedSetTypeAccess().getElementTypeOclTypeParserRuleCall_2_0());
				}
				lv_elementType_2_0=ruleOclType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrderedSetTypeRule());
					}
					set(
						$current,
						"elementType",
						lv_elementType_2_0,
						"fr.enseeiht.ocl.xtext.Ocl.OclType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getOrderedSetTypeAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleSequenceType
entryRuleSequenceType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSequenceTypeRule()); }
	iv_ruleSequenceType=ruleSequenceType
	{ $current=$iv_ruleSequenceType.current; }
	EOF;

// Rule SequenceType
ruleSequenceType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Sequence'
		{
			newLeafNode(otherlv_0, grammarAccess.getSequenceTypeAccess().getSequenceKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getSequenceTypeAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSequenceTypeAccess().getElementTypeOclTypeParserRuleCall_2_0());
				}
				lv_elementType_2_0=ruleOclType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSequenceTypeRule());
					}
					set(
						$current,
						"elementType",
						lv_elementType_2_0,
						"fr.enseeiht.ocl.xtext.Ocl.OclType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getSequenceTypeAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleSetType
entryRuleSetType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetTypeRule()); }
	iv_ruleSetType=ruleSetType
	{ $current=$iv_ruleSetType.current; }
	EOF;

// Rule SetType
ruleSetType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Set'
		{
			newLeafNode(otherlv_0, grammarAccess.getSetTypeAccess().getSetKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getSetTypeAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetTypeAccess().getElementTypeOclTypeParserRuleCall_2_0());
				}
				lv_elementType_2_0=ruleOclType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetTypeRule());
					}
					set(
						$current,
						"elementType",
						lv_elementType_2_0,
						"fr.enseeiht.ocl.xtext.Ocl.OclType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getSetTypeAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRulePrimitive
entryRulePrimitive returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveRule()); }
	iv_rulePrimitive=rulePrimitive
	{ $current=$iv_rulePrimitive.current; }
	EOF;

// Rule Primitive
rulePrimitive returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimitiveAccess().getStringTypeParserRuleCall_0());
		}
		this_StringType_0=ruleStringType
		{
			$current = $this_StringType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimitiveAccess().getBooleanTypeParserRuleCall_1());
		}
		this_BooleanType_1=ruleBooleanType
		{
			$current = $this_BooleanType_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimitiveAccess().getNumericTypeParserRuleCall_2());
		}
		this_NumericType_2=ruleNumericType
		{
			$current = $this_NumericType_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStringType
entryRuleStringType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringTypeRule()); }
	iv_ruleStringType=ruleStringType
	{ $current=$iv_ruleStringType.current; }
	EOF;

// Rule StringType
ruleStringType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStringTypeAccess().getStringTypeAction_0(),
					$current);
			}
		)
		otherlv_1='String'
		{
			newLeafNode(otherlv_1, grammarAccess.getStringTypeAccess().getStringKeyword_1());
		}
	)
;

// Entry rule entryRuleBooleanType
entryRuleBooleanType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanTypeRule()); }
	iv_ruleBooleanType=ruleBooleanType
	{ $current=$iv_ruleBooleanType.current; }
	EOF;

// Rule BooleanType
ruleBooleanType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBooleanTypeAccess().getBooleanTypeAction_0(),
					$current);
			}
		)
		otherlv_1='Boolean'
		{
			newLeafNode(otherlv_1, grammarAccess.getBooleanTypeAccess().getBooleanKeyword_1());
		}
	)
;

// Entry rule entryRuleNumericType
entryRuleNumericType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumericTypeRule()); }
	iv_ruleNumericType=ruleNumericType
	{ $current=$iv_ruleNumericType.current; }
	EOF;

// Rule NumericType
ruleNumericType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNumericTypeAccess().getIntegerTypeParserRuleCall_0());
		}
		this_IntegerType_0=ruleIntegerType
		{
			$current = $this_IntegerType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNumericTypeAccess().getRealTypeParserRuleCall_1());
		}
		this_RealType_1=ruleRealType
		{
			$current = $this_RealType_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIntegerType
entryRuleIntegerType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerTypeRule()); }
	iv_ruleIntegerType=ruleIntegerType
	{ $current=$iv_ruleIntegerType.current; }
	EOF;

// Rule IntegerType
ruleIntegerType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIntegerTypeAccess().getIntegerTypeAction_0(),
					$current);
			}
		)
		otherlv_1='Integer'
		{
			newLeafNode(otherlv_1, grammarAccess.getIntegerTypeAccess().getIntegerKeyword_1());
		}
	)
;

// Entry rule entryRuleRealType
entryRuleRealType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRealTypeRule()); }
	iv_ruleRealType=ruleRealType
	{ $current=$iv_ruleRealType.current; }
	EOF;

// Rule RealType
ruleRealType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRealTypeAccess().getRealTypeAction_0(),
					$current);
			}
		)
		otherlv_1='Real'
		{
			newLeafNode(otherlv_1, grammarAccess.getRealTypeAccess().getRealKeyword_1());
		}
	)
;

// Entry rule entryRuleOclAnyType
entryRuleOclAnyType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOclAnyTypeRule()); }
	iv_ruleOclAnyType=ruleOclAnyType
	{ $current=$iv_ruleOclAnyType.current; }
	EOF;

// Rule OclAnyType
ruleOclAnyType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getOclAnyTypeAccess().getOclAnyTypeAction_0(),
					$current);
			}
		)
		otherlv_1='OclAny'
		{
			newLeafNode(otherlv_1, grammarAccess.getOclAnyTypeAccess().getOclAnyKeyword_1());
		}
	)
;

// Entry rule entryRuleTupleType
entryRuleTupleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTupleTypeRule()); }
	iv_ruleTupleType=ruleTupleType
	{ $current=$iv_ruleTupleType.current; }
	EOF;

// Rule TupleType
ruleTupleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTupleTypeAccess().getTupleTypeAction_0(),
					$current);
			}
		)
		otherlv_1='Tuple'
		{
			newLeafNode(otherlv_1, grammarAccess.getTupleTypeAccess().getTupleKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getTupleTypeAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTupleTypeAccess().getAttributesTupleTypeAttributeParserRuleCall_3_0_0());
					}
					lv_attributes_3_0=ruleTupleTypeAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTupleTypeRule());
						}
						add(
							$current,
							"attributes",
							lv_attributes_3_0,
							"fr.enseeiht.ocl.xtext.Ocl.TupleTypeAttribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getTupleTypeAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTupleTypeAccess().getAttributesTupleTypeAttributeParserRuleCall_3_1_1_0());
						}
						lv_attributes_5_0=ruleTupleTypeAttribute
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTupleTypeRule());
							}
							add(
								$current,
								"attributes",
								lv_attributes_5_0,
								"fr.enseeiht.ocl.xtext.Ocl.TupleTypeAttribute");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getTupleTypeAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleTupleTypeAttribute
entryRuleTupleTypeAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTupleTypeAttributeRule()); }
	iv_ruleTupleTypeAttribute=ruleTupleTypeAttribute
	{ $current=$iv_ruleTupleTypeAttribute.current; }
	EOF;

// Rule TupleTypeAttribute
ruleTupleTypeAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getTupleTypeAttributeAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTupleTypeAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getTupleTypeAttributeAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTupleTypeAttributeAccess().getTypeOclTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleOclType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTupleTypeAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"fr.enseeiht.ocl.xtext.Ocl.OclType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOclModelElement
entryRuleOclModelElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOclModelElementRule()); }
	iv_ruleOclModelElement=ruleOclModelElement
	{ $current=$iv_ruleOclModelElement.current; }
	EOF;

// Rule OclModelElement
ruleOclModelElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOclModelElementRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getOclModelElementAccess().getModelImportCrossReference_0_0());
				}
			)
		)
		otherlv_1='!'
		{
			newLeafNode(otherlv_1, grammarAccess.getOclModelElementAccess().getExclamationMarkKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getOclModelElementAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOclModelElementRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleMapType
entryRuleMapType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapTypeRule()); }
	iv_ruleMapType=ruleMapType
	{ $current=$iv_ruleMapType.current; }
	EOF;

// Rule MapType
ruleMapType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Map'
		{
			newLeafNode(otherlv_0, grammarAccess.getMapTypeAccess().getMapKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getMapTypeAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapTypeAccess().getKeyTypeOclTypeParserRuleCall_2_0());
				}
				lv_keyType_2_0=ruleOclType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapTypeRule());
					}
					set(
						$current,
						"keyType",
						lv_keyType_2_0,
						"fr.enseeiht.ocl.xtext.Ocl.OclType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getMapTypeAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapTypeAccess().getValueTypeOclTypeParserRuleCall_4_0());
				}
				lv_valueType_4_0=ruleOclType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapTypeRule());
					}
					set(
						$current,
						"valueType",
						lv_valueType_4_0,
						"fr.enseeiht.ocl.xtext.Ocl.OclType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getMapTypeAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

RULE_DOUBLE : (RULE_INT '.' RULE_INT|'.' RULE_INT|RULE_INT '.') ('e' ('-'|'+') RULE_INT)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
