/*
 * generated by Xtext 2.32.0
 */
grammar InternalTocl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.enseeiht.xtext.tocl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.enseeiht.xtext.tocl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.enseeiht.xtext.tocl.services.ToclGrammarAccess;

}
@parser::members {
	private ToclGrammarAccess grammarAccess;

	public void setGrammarAccess(ToclGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModule
entryRuleModule
:
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModuleAccess().getGroup()); }
		(rule__Module__Group__0)
		{ after(grammarAccess.getModuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModuleElement
entryRuleModuleElement
:
{ before(grammarAccess.getModuleElementRule()); }
	 ruleModuleElement
{ after(grammarAccess.getModuleElementRule()); } 
	 EOF 
;

// Rule ModuleElement
ruleModuleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModuleElementAccess().getOclModuleElementParserRuleCall()); }
		ruleOclModuleElement
		{ after(grammarAccess.getModuleElementAccess().getOclModuleElementParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOclModuleElement
entryRuleOclModuleElement
:
{ before(grammarAccess.getOclModuleElementRule()); }
	 ruleOclModuleElement
{ after(grammarAccess.getOclModuleElementRule()); } 
	 EOF 
;

// Rule OclModuleElement
ruleOclModuleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOclModuleElementAccess().getAlternatives()); }
		(rule__OclModuleElement__Alternatives)
		{ after(grammarAccess.getOclModuleElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOclFeatureDefinition
entryRuleOclFeatureDefinition
:
{ before(grammarAccess.getOclFeatureDefinitionRule()); }
	 ruleOclFeatureDefinition
{ after(grammarAccess.getOclFeatureDefinitionRule()); } 
	 EOF 
;

// Rule OclFeatureDefinition
ruleOclFeatureDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOclFeatureDefinitionAccess().getGroup()); }
		(rule__OclFeatureDefinition__Group__0)
		{ after(grammarAccess.getOclFeatureDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup()); }
		(rule__Attribute__Group__0)
		{ after(grammarAccess.getAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperation
entryRuleOperation
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationAccess().getGroup()); }
		(rule__Operation__Group__0)
		{ after(grammarAccess.getOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOclInvariant
entryRuleOclInvariant
:
{ before(grammarAccess.getOclInvariantRule()); }
	 ruleOclInvariant
{ after(grammarAccess.getOclInvariantRule()); } 
	 EOF 
;

// Rule OclInvariant
ruleOclInvariant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOclInvariantAccess().getGroup()); }
		(rule__OclInvariant__Group__0)
		{ after(grammarAccess.getOclInvariantAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOclExpression
entryRuleOclExpression
:
{ before(grammarAccess.getOclExpressionRule()); }
	 ruleOclExpression
{ after(grammarAccess.getOclExpressionRule()); } 
	 EOF 
;

// Rule OclExpression
ruleOclExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOclExpressionAccess().getAlternatives()); }
		(rule__OclExpression__Alternatives)
		{ after(grammarAccess.getOclExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOclModelElementExp
entryRuleOclModelElementExp
:
{ before(grammarAccess.getOclModelElementExpRule()); }
	 ruleOclModelElementExp
{ after(grammarAccess.getOclModelElementExpRule()); } 
	 EOF 
;

// Rule OclModelElementExp
ruleOclModelElementExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOclModelElementExpAccess().getGroup()); }
		(rule__OclModelElementExp__Group__0)
		{ after(grammarAccess.getOclModelElementExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTEMPBIOP
entryRuleTEMPBIOP
:
{ before(grammarAccess.getTEMPBIOPRule()); }
	 ruleTEMPBIOP
{ after(grammarAccess.getTEMPBIOPRule()); } 
	 EOF 
;

// Rule TEMPBIOP
ruleTEMPBIOP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTEMPBIOPAccess().getAlternatives()); }
		(rule__TEMPBIOP__Alternatives)
		{ after(grammarAccess.getTEMPBIOPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperatorCallExp
entryRuleOperatorCallExp
:
{ before(grammarAccess.getOperatorCallExpRule()); }
	 ruleOperatorCallExp
{ after(grammarAccess.getOperatorCallExpRule()); } 
	 EOF 
;

// Rule OperatorCallExp
ruleOperatorCallExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperatorCallExpAccess().getGroup()); }
		(rule__OperatorCallExp__Group__0)
		{ after(grammarAccess.getOperatorCallExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolOpCallExp
entryRuleBoolOpCallExp
:
{ before(grammarAccess.getBoolOpCallExpRule()); }
	 ruleBoolOpCallExp
{ after(grammarAccess.getBoolOpCallExpRule()); } 
	 EOF 
;

// Rule BoolOpCallExp
ruleBoolOpCallExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoolOpCallExpAccess().getGroup()); }
		(rule__BoolOpCallExp__Group__0)
		{ after(grammarAccess.getBoolOpCallExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBOOLOP
entryRuleBOOLOP
:
{ before(grammarAccess.getBOOLOPRule()); }
	 ruleBOOLOP
{ after(grammarAccess.getBOOLOPRule()); } 
	 EOF 
;

// Rule BOOLOP
ruleBOOLOP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBOOLOPAccess().getAlternatives()); }
		(rule__BOOLOP__Alternatives)
		{ after(grammarAccess.getBOOLOPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqOpCallExp
entryRuleEqOpCallExp
:
{ before(grammarAccess.getEqOpCallExpRule()); }
	 ruleEqOpCallExp
{ after(grammarAccess.getEqOpCallExpRule()); } 
	 EOF 
;

// Rule EqOpCallExp
ruleEqOpCallExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqOpCallExpAccess().getGroup()); }
		(rule__EqOpCallExp__Group__0)
		{ after(grammarAccess.getEqOpCallExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEQOP
entryRuleEQOP
:
{ before(grammarAccess.getEQOPRule()); }
	 ruleEQOP
{ after(grammarAccess.getEQOPRule()); } 
	 EOF 
;

// Rule EQOP
ruleEQOP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEQOPAccess().getAlternatives()); }
		(rule__EQOP__Alternatives)
		{ after(grammarAccess.getEQOPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelOpCallExp
entryRuleRelOpCallExp
:
{ before(grammarAccess.getRelOpCallExpRule()); }
	 ruleRelOpCallExp
{ after(grammarAccess.getRelOpCallExpRule()); } 
	 EOF 
;

// Rule RelOpCallExp
ruleRelOpCallExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelOpCallExpAccess().getGroup()); }
		(rule__RelOpCallExp__Group__0)
		{ after(grammarAccess.getRelOpCallExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRELOP
entryRuleRELOP
:
{ before(grammarAccess.getRELOPRule()); }
	 ruleRELOP
{ after(grammarAccess.getRELOPRule()); } 
	 EOF 
;

// Rule RELOP
ruleRELOP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRELOPAccess().getAlternatives()); }
		(rule__RELOP__Alternatives)
		{ after(grammarAccess.getRELOPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddOpCallExp
entryRuleAddOpCallExp
:
{ before(grammarAccess.getAddOpCallExpRule()); }
	 ruleAddOpCallExp
{ after(grammarAccess.getAddOpCallExpRule()); } 
	 EOF 
;

// Rule AddOpCallExp
ruleAddOpCallExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddOpCallExpAccess().getGroup()); }
		(rule__AddOpCallExp__Group__0)
		{ after(grammarAccess.getAddOpCallExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleADDOP
entryRuleADDOP
:
{ before(grammarAccess.getADDOPRule()); }
	 ruleADDOP
{ after(grammarAccess.getADDOPRule()); } 
	 EOF 
;

// Rule ADDOP
ruleADDOP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getADDOPAccess().getAlternatives()); }
		(rule__ADDOP__Alternatives)
		{ after(grammarAccess.getADDOPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntOpCallExp
entryRuleIntOpCallExp
:
{ before(grammarAccess.getIntOpCallExpRule()); }
	 ruleIntOpCallExp
{ after(grammarAccess.getIntOpCallExpRule()); } 
	 EOF 
;

// Rule IntOpCallExp
ruleIntOpCallExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntOpCallExpAccess().getGroup()); }
		(rule__IntOpCallExp__Group__0)
		{ after(grammarAccess.getIntOpCallExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleINTOP
entryRuleINTOP
:
{ before(grammarAccess.getINTOPRule()); }
	 ruleINTOP
{ after(grammarAccess.getINTOPRule()); } 
	 EOF 
;

// Rule INTOP
ruleINTOP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getINTOPAccess().getAlternatives()); }
		(rule__INTOP__Alternatives)
		{ after(grammarAccess.getINTOPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMulOpCallExp
entryRuleMulOpCallExp
:
{ before(grammarAccess.getMulOpCallExpRule()); }
	 ruleMulOpCallExp
{ after(grammarAccess.getMulOpCallExpRule()); } 
	 EOF 
;

// Rule MulOpCallExp
ruleMulOpCallExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMulOpCallExpAccess().getGroup()); }
		(rule__MulOpCallExp__Group__0)
		{ after(grammarAccess.getMulOpCallExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMULOP
entryRuleMULOP
:
{ before(grammarAccess.getMULOPRule()); }
	 ruleMULOP
{ after(grammarAccess.getMULOPRule()); } 
	 EOF 
;

// Rule MULOP
ruleMULOP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMULOPAccess().getAlternatives()); }
		(rule__MULOP__Alternatives)
		{ after(grammarAccess.getMULOPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNotOpCallExp
entryRuleNotOpCallExp
:
{ before(grammarAccess.getNotOpCallExpRule()); }
	 ruleNotOpCallExp
{ after(grammarAccess.getNotOpCallExpRule()); } 
	 EOF 
;

// Rule NotOpCallExp
ruleNotOpCallExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotOpCallExpAccess().getAlternatives()); }
		(rule__NotOpCallExp__Alternatives)
		{ after(grammarAccess.getNotOpCallExpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryOP
entryRuleUnaryOP
:
{ before(grammarAccess.getUnaryOPRule()); }
	 ruleUnaryOP
{ after(grammarAccess.getUnaryOPRule()); } 
	 EOF 
;

// Rule UnaryOP
ruleUnaryOP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryOPAccess().getAlternatives()); }
		(rule__UnaryOP__Alternatives)
		{ after(grammarAccess.getUnaryOPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNOTOP
entryRuleNOTOP
:
{ before(grammarAccess.getNOTOPRule()); }
	 ruleNOTOP
{ after(grammarAccess.getNOTOPRule()); } 
	 EOF 
;

// Rule NOTOP
ruleNOTOP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNOTOPAccess().getNotKeyword()); }
		'not'
		{ after(grammarAccess.getNOTOPAccess().getNotKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUNARYTEMPOP
entryRuleUNARYTEMPOP
:
{ before(grammarAccess.getUNARYTEMPOPRule()); }
	 ruleUNARYTEMPOP
{ after(grammarAccess.getUNARYTEMPOPRule()); } 
	 EOF 
;

// Rule UNARYTEMPOP
ruleUNARYTEMPOP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUNARYTEMPOPAccess().getAlternatives()); }
		(rule__UNARYTEMPOP__Alternatives)
		{ after(grammarAccess.getUNARYTEMPOPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertyCallExp
entryRulePropertyCallExp
:
{ before(grammarAccess.getPropertyCallExpRule()); }
	 rulePropertyCallExp
{ after(grammarAccess.getPropertyCallExpRule()); } 
	 EOF 
;

// Rule PropertyCallExp
rulePropertyCallExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyCallExpAccess().getGroup()); }
		(rule__PropertyCallExp__Group__0)
		{ after(grammarAccess.getPropertyCallExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary_OclExpression
entryRulePrimary_OclExpression
:
{ before(grammarAccess.getPrimary_OclExpressionRule()); }
	 rulePrimary_OclExpression
{ after(grammarAccess.getPrimary_OclExpressionRule()); } 
	 EOF 
;

// Rule Primary_OclExpression
rulePrimary_OclExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getAlternatives()); }
		(rule__Primary_OclExpression__Alternatives)
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableExp
entryRuleVariableExp
:
{ before(grammarAccess.getVariableExpRule()); }
	 ruleVariableExp
{ after(grammarAccess.getVariableExpRule()); } 
	 EOF 
;

// Rule VariableExp
ruleVariableExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableExpAccess().getAlternatives()); }
		(rule__VariableExp__Alternatives)
		{ after(grammarAccess.getVariableExpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getVarNameAssignment()); }
		(rule__VariableDeclaration__VarNameAssignment)
		{ after(grammarAccess.getVariableDeclarationAccess().getVarNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSuperExp
entryRuleSuperExp
:
{ before(grammarAccess.getSuperExpRule()); }
	 ruleSuperExp
{ after(grammarAccess.getSuperExpRule()); } 
	 EOF 
;

// Rule SuperExp
ruleSuperExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSuperExpAccess().getGroup()); }
		(rule__SuperExp__Group__0)
		{ after(grammarAccess.getSuperExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelfExp
entryRuleSelfExp
:
{ before(grammarAccess.getSelfExpRule()); }
	 ruleSelfExp
{ after(grammarAccess.getSelfExpRule()); } 
	 EOF 
;

// Rule SelfExp
ruleSelfExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelfExpAccess().getGroup()); }
		(rule__SelfExp__Group__0)
		{ after(grammarAccess.getSelfExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringExp
entryRuleStringExp
:
{ before(grammarAccess.getStringExpRule()); }
	 ruleStringExp
{ after(grammarAccess.getStringExpRule()); } 
	 EOF 
;

// Rule StringExp
ruleStringExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringExpAccess().getGroup()); }
		(rule__StringExp__Group__0)
		{ after(grammarAccess.getStringExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericExp
entryRuleNumericExp
:
{ before(grammarAccess.getNumericExpRule()); }
	 ruleNumericExp
{ after(grammarAccess.getNumericExpRule()); } 
	 EOF 
;

// Rule NumericExp
ruleNumericExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericExpAccess().getAlternatives()); }
		(rule__NumericExp__Alternatives)
		{ after(grammarAccess.getNumericExpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRealExp
entryRuleRealExp
:
{ before(grammarAccess.getRealExpRule()); }
	 ruleRealExp
{ after(grammarAccess.getRealExpRule()); } 
	 EOF 
;

// Rule RealExp
ruleRealExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRealExpAccess().getRealSymbolAssignment()); }
		(rule__RealExp__RealSymbolAssignment)
		{ after(grammarAccess.getRealExpAccess().getRealSymbolAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerExp
entryRuleIntegerExp
:
{ before(grammarAccess.getIntegerExpRule()); }
	 ruleIntegerExp
{ after(grammarAccess.getIntegerExpRule()); } 
	 EOF 
;

// Rule IntegerExp
ruleIntegerExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerExpAccess().getGroup()); }
		(rule__IntegerExp__Group__0)
		{ after(grammarAccess.getIntegerExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBagExp
entryRuleBagExp
:
{ before(grammarAccess.getBagExpRule()); }
	 ruleBagExp
{ after(grammarAccess.getBagExpRule()); } 
	 EOF 
;

// Rule BagExp
ruleBagExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBagExpAccess().getGroup()); }
		(rule__BagExp__Group__0)
		{ after(grammarAccess.getBagExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrderedSetExp
entryRuleOrderedSetExp
:
{ before(grammarAccess.getOrderedSetExpRule()); }
	 ruleOrderedSetExp
{ after(grammarAccess.getOrderedSetExpRule()); } 
	 EOF 
;

// Rule OrderedSetExp
ruleOrderedSetExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrderedSetExpAccess().getGroup()); }
		(rule__OrderedSetExp__Group__0)
		{ after(grammarAccess.getOrderedSetExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSequenceExp
entryRuleSequenceExp
:
{ before(grammarAccess.getSequenceExpRule()); }
	 ruleSequenceExp
{ after(grammarAccess.getSequenceExpRule()); } 
	 EOF 
;

// Rule SequenceExp
ruleSequenceExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSequenceExpAccess().getGroup()); }
		(rule__SequenceExp__Group__0)
		{ after(grammarAccess.getSequenceExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetExp
entryRuleSetExp
:
{ before(grammarAccess.getSetExpRule()); }
	 ruleSetExp
{ after(grammarAccess.getSetExpRule()); } 
	 EOF 
;

// Rule SetExp
ruleSetExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetExpAccess().getGroup()); }
		(rule__SetExp__Group__0)
		{ after(grammarAccess.getSetExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTupleExp
entryRuleTupleExp
:
{ before(grammarAccess.getTupleExpRule()); }
	 ruleTupleExp
{ after(grammarAccess.getTupleExpRule()); } 
	 EOF 
;

// Rule TupleExp
ruleTupleExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTupleExpAccess().getGroup()); }
		(rule__TupleExp__Group__0)
		{ after(grammarAccess.getTupleExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTuplePart
entryRuleTuplePart
:
{ before(grammarAccess.getTuplePartRule()); }
	 ruleTuplePart
{ after(grammarAccess.getTuplePartRule()); } 
	 EOF 
;

// Rule TuplePart
ruleTuplePart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTuplePartAccess().getGroup()); }
		(rule__TuplePart__Group__0)
		{ after(grammarAccess.getTuplePartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapExp
entryRuleMapExp
:
{ before(grammarAccess.getMapExpRule()); }
	 ruleMapExp
{ after(grammarAccess.getMapExpRule()); } 
	 EOF 
;

// Rule MapExp
ruleMapExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapExpAccess().getGroup()); }
		(rule__MapExp__Group__0)
		{ after(grammarAccess.getMapExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapElement
entryRuleMapElement
:
{ before(grammarAccess.getMapElementRule()); }
	 ruleMapElement
{ after(grammarAccess.getMapElementRule()); } 
	 EOF 
;

// Rule MapElement
ruleMapElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapElementAccess().getGroup()); }
		(rule__MapElement__Group__0)
		{ after(grammarAccess.getMapElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumLiteralExp
entryRuleEnumLiteralExp
:
{ before(grammarAccess.getEnumLiteralExpRule()); }
	 ruleEnumLiteralExp
{ after(grammarAccess.getEnumLiteralExpRule()); } 
	 EOF 
;

// Rule EnumLiteralExp
ruleEnumLiteralExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumLiteralExpAccess().getGroup()); }
		(rule__EnumLiteralExp__Group__0)
		{ after(grammarAccess.getEnumLiteralExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOclUndefinedExp
entryRuleOclUndefinedExp
:
{ before(grammarAccess.getOclUndefinedExpRule()); }
	 ruleOclUndefinedExp
{ after(grammarAccess.getOclUndefinedExpRule()); } 
	 EOF 
;

// Rule OclUndefinedExp
ruleOclUndefinedExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOclUndefinedExpAccess().getGroup()); }
		(rule__OclUndefinedExp__Group__0)
		{ after(grammarAccess.getOclUndefinedExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLetExp
entryRuleLetExp
:
{ before(grammarAccess.getLetExpRule()); }
	 ruleLetExp
{ after(grammarAccess.getLetExpRule()); } 
	 EOF 
;

// Rule LetExp
ruleLetExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLetExpAccess().getGroup()); }
		(rule__LetExp__Group__0)
		{ after(grammarAccess.getLetExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfExp
entryRuleIfExp
:
{ before(grammarAccess.getIfExpRule()); }
	 ruleIfExp
{ after(grammarAccess.getIfExpRule()); } 
	 EOF 
;

// Rule IfExp
ruleIfExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfExpAccess().getGroup()); }
		(rule__IfExp__Group__0)
		{ after(grammarAccess.getIfExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBraceExp
entryRuleBraceExp
:
{ before(grammarAccess.getBraceExpRule()); }
	 ruleBraceExp
{ after(grammarAccess.getBraceExpRule()); } 
	 EOF 
;

// Rule BraceExp
ruleBraceExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBraceExpAccess().getGroup()); }
		(rule__BraceExp__Group__0)
		{ after(grammarAccess.getBraceExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanExp
entryRuleBooleanExp
:
{ before(grammarAccess.getBooleanExpRule()); }
	 ruleBooleanExp
{ after(grammarAccess.getBooleanExpRule()); } 
	 EOF 
;

// Rule BooleanExp
ruleBooleanExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanExpAccess().getAlternatives()); }
		(rule__BooleanExp__Alternatives)
		{ after(grammarAccess.getBooleanExpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertyCall
entryRulePropertyCall
:
{ before(grammarAccess.getPropertyCallRule()); }
	 rulePropertyCall
{ after(grammarAccess.getPropertyCallRule()); } 
	 EOF 
;

// Rule PropertyCall
rulePropertyCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyCallAccess().getAlternatives()); }
		(rule__PropertyCall__Alternatives)
		{ after(grammarAccess.getPropertyCallAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationCall
entryRuleOperationCall
:
{ before(grammarAccess.getOperationCallRule()); }
	 ruleOperationCall
{ after(grammarAccess.getOperationCallRule()); } 
	 EOF 
;

// Rule OperationCall
ruleOperationCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationCallAccess().getGroup()); }
		(rule__OperationCall__Group__0)
		{ after(grammarAccess.getOperationCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNavigationOrAttributeCall
entryRuleNavigationOrAttributeCall
:
{ before(grammarAccess.getNavigationOrAttributeCallRule()); }
	 ruleNavigationOrAttributeCall
{ after(grammarAccess.getNavigationOrAttributeCallRule()); } 
	 EOF 
;

// Rule NavigationOrAttributeCall
ruleNavigationOrAttributeCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNavigationOrAttributeCallAccess().getGroup()); }
		(rule__NavigationOrAttributeCall__Group__0)
		{ after(grammarAccess.getNavigationOrAttributeCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIterateExp
entryRuleIterateExp
:
{ before(grammarAccess.getIterateExpRule()); }
	 ruleIterateExp
{ after(grammarAccess.getIterateExpRule()); } 
	 EOF 
;

// Rule IterateExp
ruleIterateExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIterateExpAccess().getGroup()); }
		(rule__IterateExp__Group__0)
		{ after(grammarAccess.getIterateExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIterator
entryRuleIterator
:
{ before(grammarAccess.getIteratorRule()); }
	 ruleIterator
{ after(grammarAccess.getIteratorRule()); } 
	 EOF 
;

// Rule Iterator
ruleIterator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIteratorAccess().getGroup()); }
		(rule__Iterator__Group__0)
		{ after(grammarAccess.getIteratorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIteratorExp
entryRuleIteratorExp
:
{ before(grammarAccess.getIteratorExpRule()); }
	 ruleIteratorExp
{ after(grammarAccess.getIteratorExpRule()); } 
	 EOF 
;

// Rule IteratorExp
ruleIteratorExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIteratorExpAccess().getGroup()); }
		(rule__IteratorExp__Group__0)
		{ after(grammarAccess.getIteratorExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCollectionOperationCall
entryRuleCollectionOperationCall
:
{ before(grammarAccess.getCollectionOperationCallRule()); }
	 ruleCollectionOperationCall
{ after(grammarAccess.getCollectionOperationCallRule()); } 
	 EOF 
;

// Rule CollectionOperationCall
ruleCollectionOperationCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCollectionOperationCallAccess().getGroup()); }
		(rule__CollectionOperationCall__Group__0)
		{ after(grammarAccess.getCollectionOperationCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocalVariable
entryRuleLocalVariable
:
{ before(grammarAccess.getLocalVariableRule()); }
	 ruleLocalVariable
{ after(grammarAccess.getLocalVariableRule()); } 
	 EOF 
;

// Rule LocalVariable
ruleLocalVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocalVariableAccess().getGroup()); }
		(rule__LocalVariable__Group__0)
		{ after(grammarAccess.getLocalVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOclType
entryRuleOclType
:
{ before(grammarAccess.getOclTypeRule()); }
	 ruleOclType
{ after(grammarAccess.getOclTypeRule()); } 
	 EOF 
;

// Rule OclType
ruleOclType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOclTypeAccess().getAlternatives()); }
		(rule__OclType__Alternatives)
		{ after(grammarAccess.getOclTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCollectionType
entryRuleCollectionType
:
{ before(grammarAccess.getCollectionTypeRule()); }
	 ruleCollectionType
{ after(grammarAccess.getCollectionTypeRule()); } 
	 EOF 
;

// Rule CollectionType
ruleCollectionType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCollectionTypeAccess().getAlternatives()); }
		(rule__CollectionType__Alternatives)
		{ after(grammarAccess.getCollectionTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBagType
entryRuleBagType
:
{ before(grammarAccess.getBagTypeRule()); }
	 ruleBagType
{ after(grammarAccess.getBagTypeRule()); } 
	 EOF 
;

// Rule BagType
ruleBagType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBagTypeAccess().getGroup()); }
		(rule__BagType__Group__0)
		{ after(grammarAccess.getBagTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrderedSetType
entryRuleOrderedSetType
:
{ before(grammarAccess.getOrderedSetTypeRule()); }
	 ruleOrderedSetType
{ after(grammarAccess.getOrderedSetTypeRule()); } 
	 EOF 
;

// Rule OrderedSetType
ruleOrderedSetType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrderedSetTypeAccess().getGroup()); }
		(rule__OrderedSetType__Group__0)
		{ after(grammarAccess.getOrderedSetTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSequenceType
entryRuleSequenceType
:
{ before(grammarAccess.getSequenceTypeRule()); }
	 ruleSequenceType
{ after(grammarAccess.getSequenceTypeRule()); } 
	 EOF 
;

// Rule SequenceType
ruleSequenceType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSequenceTypeAccess().getGroup()); }
		(rule__SequenceType__Group__0)
		{ after(grammarAccess.getSequenceTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetType
entryRuleSetType
:
{ before(grammarAccess.getSetTypeRule()); }
	 ruleSetType
{ after(grammarAccess.getSetTypeRule()); } 
	 EOF 
;

// Rule SetType
ruleSetType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetTypeAccess().getGroup()); }
		(rule__SetType__Group__0)
		{ after(grammarAccess.getSetTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitive
entryRulePrimitive
:
{ before(grammarAccess.getPrimitiveRule()); }
	 rulePrimitive
{ after(grammarAccess.getPrimitiveRule()); } 
	 EOF 
;

// Rule Primitive
rulePrimitive 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveAccess().getAlternatives()); }
		(rule__Primitive__Alternatives)
		{ after(grammarAccess.getPrimitiveAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringType
entryRuleStringType
:
{ before(grammarAccess.getStringTypeRule()); }
	 ruleStringType
{ after(grammarAccess.getStringTypeRule()); } 
	 EOF 
;

// Rule StringType
ruleStringType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringTypeAccess().getGroup()); }
		(rule__StringType__Group__0)
		{ after(grammarAccess.getStringTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanType
entryRuleBooleanType
:
{ before(grammarAccess.getBooleanTypeRule()); }
	 ruleBooleanType
{ after(grammarAccess.getBooleanTypeRule()); } 
	 EOF 
;

// Rule BooleanType
ruleBooleanType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanTypeAccess().getGroup()); }
		(rule__BooleanType__Group__0)
		{ after(grammarAccess.getBooleanTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericType
entryRuleNumericType
:
{ before(grammarAccess.getNumericTypeRule()); }
	 ruleNumericType
{ after(grammarAccess.getNumericTypeRule()); } 
	 EOF 
;

// Rule NumericType
ruleNumericType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericTypeAccess().getAlternatives()); }
		(rule__NumericType__Alternatives)
		{ after(grammarAccess.getNumericTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerType
entryRuleIntegerType
:
{ before(grammarAccess.getIntegerTypeRule()); }
	 ruleIntegerType
{ after(grammarAccess.getIntegerTypeRule()); } 
	 EOF 
;

// Rule IntegerType
ruleIntegerType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerTypeAccess().getGroup()); }
		(rule__IntegerType__Group__0)
		{ after(grammarAccess.getIntegerTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRealType
entryRuleRealType
:
{ before(grammarAccess.getRealTypeRule()); }
	 ruleRealType
{ after(grammarAccess.getRealTypeRule()); } 
	 EOF 
;

// Rule RealType
ruleRealType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRealTypeAccess().getGroup()); }
		(rule__RealType__Group__0)
		{ after(grammarAccess.getRealTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOclAnyType
entryRuleOclAnyType
:
{ before(grammarAccess.getOclAnyTypeRule()); }
	 ruleOclAnyType
{ after(grammarAccess.getOclAnyTypeRule()); } 
	 EOF 
;

// Rule OclAnyType
ruleOclAnyType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOclAnyTypeAccess().getGroup()); }
		(rule__OclAnyType__Group__0)
		{ after(grammarAccess.getOclAnyTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOclType_abstractContents
entryRuleOclType_abstractContents
:
{ before(grammarAccess.getOclType_abstractContentsRule()); }
	 ruleOclType_abstractContents
{ after(grammarAccess.getOclType_abstractContentsRule()); } 
	 EOF 
;

// Rule OclType_abstractContents
ruleOclType_abstractContents 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOclType_abstractContentsAccess().getGroup()); }
		(rule__OclType_abstractContents__Group__0)
		{ after(grammarAccess.getOclType_abstractContentsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTupleType
entryRuleTupleType
:
{ before(grammarAccess.getTupleTypeRule()); }
	 ruleTupleType
{ after(grammarAccess.getTupleTypeRule()); } 
	 EOF 
;

// Rule TupleType
ruleTupleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTupleTypeAccess().getGroup()); }
		(rule__TupleType__Group__0)
		{ after(grammarAccess.getTupleTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTupleTypeAttribute
entryRuleTupleTypeAttribute
:
{ before(grammarAccess.getTupleTypeAttributeRule()); }
	 ruleTupleTypeAttribute
{ after(grammarAccess.getTupleTypeAttributeRule()); } 
	 EOF 
;

// Rule TupleTypeAttribute
ruleTupleTypeAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTupleTypeAttributeAccess().getGroup()); }
		(rule__TupleTypeAttribute__Group__0)
		{ after(grammarAccess.getTupleTypeAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOclModelElement
entryRuleOclModelElement
:
{ before(grammarAccess.getOclModelElementRule()); }
	 ruleOclModelElement
{ after(grammarAccess.getOclModelElementRule()); } 
	 EOF 
;

// Rule OclModelElement
ruleOclModelElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOclModelElementAccess().getGroup()); }
		(rule__OclModelElement__Group__0)
		{ after(grammarAccess.getOclModelElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapType
entryRuleMapType
:
{ before(grammarAccess.getMapTypeRule()); }
	 ruleMapType
{ after(grammarAccess.getMapTypeRule()); } 
	 EOF 
;

// Rule MapType
ruleMapType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapTypeAccess().getGroup()); }
		(rule__MapType__Group__0)
		{ after(grammarAccess.getMapTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModuleElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclModuleElementAccess().getOclFeatureDefinitionParserRuleCall_0()); }
		ruleOclFeatureDefinition
		{ after(grammarAccess.getOclModuleElementAccess().getOclFeatureDefinitionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOclModuleElementAccess().getOclInvariantParserRuleCall_1()); }
		ruleOclInvariant
		{ after(grammarAccess.getOclModuleElementAccess().getOclInvariantParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclFeatureDefinition__FeatureAlternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclFeatureDefinitionAccess().getFeatureAttributeParserRuleCall_3_0_0()); }
		ruleAttribute
		{ after(grammarAccess.getOclFeatureDefinitionAccess().getFeatureAttributeParserRuleCall_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getOclFeatureDefinitionAccess().getFeatureOperationParserRuleCall_3_0_1()); }
		ruleOperation
		{ after(grammarAccess.getOclFeatureDefinitionAccess().getFeatureOperationParserRuleCall_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclExpressionAccess().getOperatorCallExpParserRuleCall_0()); }
		ruleOperatorCallExp
		{ after(grammarAccess.getOclExpressionAccess().getOperatorCallExpParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOclExpressionAccess().getLetExpParserRuleCall_1()); }
		ruleLetExp
		{ after(grammarAccess.getOclExpressionAccess().getLetExpParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TEMPBIOP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTEMPBIOPAccess().getUntilKeyword_0()); }
		'until'
		{ after(grammarAccess.getTEMPBIOPAccess().getUntilKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTEMPBIOPAccess().getReleaseKeyword_1()); }
		'release'
		{ after(grammarAccess.getTEMPBIOPAccess().getReleaseKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLOP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBOOLOPAccess().getAndKeyword_0()); }
		'and'
		{ after(grammarAccess.getBOOLOPAccess().getAndKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBOOLOPAccess().getOrKeyword_1()); }
		'or'
		{ after(grammarAccess.getBOOLOPAccess().getOrKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getBOOLOPAccess().getXorKeyword_2()); }
		'xor'
		{ after(grammarAccess.getBOOLOPAccess().getXorKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getBOOLOPAccess().getImpliesKeyword_3()); }
		'implies'
		{ after(grammarAccess.getBOOLOPAccess().getImpliesKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getBOOLOPAccess().getEquivalentKeyword_4()); }
		'equivalent'
		{ after(grammarAccess.getBOOLOPAccess().getEquivalentKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EQOP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEQOPAccess().getEqualsSignKeyword_0()); }
		'='
		{ after(grammarAccess.getEQOPAccess().getEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEQOPAccess().getLessThanSignGreaterThanSignKeyword_1()); }
		'<>'
		{ after(grammarAccess.getEQOPAccess().getLessThanSignGreaterThanSignKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RELOP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRELOPAccess().getGreaterThanSignKeyword_0()); }
		'>'
		{ after(grammarAccess.getRELOPAccess().getGreaterThanSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getRELOPAccess().getLessThanSignKeyword_1()); }
		'<'
		{ after(grammarAccess.getRELOPAccess().getLessThanSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getRELOPAccess().getGreaterThanSignEqualsSignKeyword_2()); }
		'>='
		{ after(grammarAccess.getRELOPAccess().getGreaterThanSignEqualsSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getRELOPAccess().getLessThanSignEqualsSignKeyword_3()); }
		'<='
		{ after(grammarAccess.getRELOPAccess().getLessThanSignEqualsSignKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ADDOP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getADDOPAccess().getHyphenMinusKeyword_0()); }
		'-'
		{ after(grammarAccess.getADDOPAccess().getHyphenMinusKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getADDOPAccess().getPlusSignKeyword_1()); }
		'+'
		{ after(grammarAccess.getADDOPAccess().getPlusSignKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__INTOP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getINTOPAccess().getDivKeyword_0()); }
		'div'
		{ after(grammarAccess.getINTOPAccess().getDivKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getINTOPAccess().getModKeyword_1()); }
		'mod'
		{ after(grammarAccess.getINTOPAccess().getModKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MULOP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMULOPAccess().getAsteriskKeyword_0()); }
		'*'
		{ after(grammarAccess.getMULOPAccess().getAsteriskKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getMULOPAccess().getSolidusKeyword_1()); }
		'/'
		{ after(grammarAccess.getMULOPAccess().getSolidusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotOpCallExp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotOpCallExpAccess().getGroup_0()); }
		(rule__NotOpCallExp__Group_0__0)
		{ after(grammarAccess.getNotOpCallExpAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getNotOpCallExpAccess().getPropertyCallExpParserRuleCall_1()); }
		rulePropertyCallExp
		{ after(grammarAccess.getNotOpCallExpAccess().getPropertyCallExpParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOPAccess().getNOTOPParserRuleCall_0()); }
		ruleNOTOP
		{ after(grammarAccess.getUnaryOPAccess().getNOTOPParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOPAccess().getUNARYTEMPOPParserRuleCall_1()); }
		ruleUNARYTEMPOP
		{ after(grammarAccess.getUnaryOPAccess().getUNARYTEMPOPParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UNARYTEMPOP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUNARYTEMPOPAccess().getAlwaysKeyword_0()); }
		'always'
		{ after(grammarAccess.getUNARYTEMPOPAccess().getAlwaysKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getUNARYTEMPOPAccess().getEventuallyKeyword_1()); }
		'eventually'
		{ after(grammarAccess.getUNARYTEMPOPAccess().getEventuallyKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getUNARYTEMPOPAccess().getNextKeyword_2()); }
		'next'
		{ after(grammarAccess.getUNARYTEMPOPAccess().getNextKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getUNARYTEMPOPAccess().getAllKeyword_3()); }
		'All'
		{ after(grammarAccess.getUNARYTEMPOPAccess().getAllKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getUNARYTEMPOPAccess().getExistsKeyword_4()); }
		'Exists'
		{ after(grammarAccess.getUNARYTEMPOPAccess().getExistsKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_OclExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getVariableExpParserRuleCall_0()); }
		ruleVariableExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getVariableExpParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getSuperExpParserRuleCall_1()); }
		ruleSuperExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getSuperExpParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getSelfExpParserRuleCall_2()); }
		ruleSelfExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getSelfExpParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getStringExpParserRuleCall_3()); }
		ruleStringExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getStringExpParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getBooleanExpParserRuleCall_4()); }
		ruleBooleanExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getBooleanExpParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getNumericExpParserRuleCall_5()); }
		ruleNumericExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getNumericExpParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getBagExpParserRuleCall_6()); }
		ruleBagExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getBagExpParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getOrderedSetExpParserRuleCall_7()); }
		ruleOrderedSetExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getOrderedSetExpParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getSequenceExpParserRuleCall_8()); }
		ruleSequenceExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getSequenceExpParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getSetExpParserRuleCall_9()); }
		ruleSetExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getSetExpParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getTupleExpParserRuleCall_10()); }
		ruleTupleExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getTupleExpParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getMapExpParserRuleCall_11()); }
		ruleMapExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getMapExpParserRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getEnumLiteralExpParserRuleCall_12()); }
		ruleEnumLiteralExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getEnumLiteralExpParserRuleCall_12()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getOclUndefinedExpParserRuleCall_13()); }
		ruleOclUndefinedExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getOclUndefinedExpParserRuleCall_13()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getIfExpParserRuleCall_14()); }
		ruleIfExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getIfExpParserRuleCall_14()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getBraceExpParserRuleCall_15()); }
		ruleBraceExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getBraceExpParserRuleCall_15()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getOclModelElementExpParserRuleCall_16()); }
		ruleOclModelElementExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getOclModelElementExpParserRuleCall_16()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableExp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableExpAccess().getReferredVariableAssignment_0()); }
		(rule__VariableExp__ReferredVariableAssignment_0)
		{ after(grammarAccess.getVariableExpAccess().getReferredVariableAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableExpAccess().getVariableDeclarationParserRuleCall_1()); }
		ruleVariableDeclaration
		{ after(grammarAccess.getVariableExpAccess().getVariableDeclarationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericExp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericExpAccess().getRealExpParserRuleCall_0()); }
		ruleRealExp
		{ after(grammarAccess.getNumericExpAccess().getRealExpParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumericExpAccess().getIntegerExpParserRuleCall_1()); }
		ruleIntegerExp
		{ after(grammarAccess.getNumericExpAccess().getIntegerExpParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralExp__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumLiteralExpAccess().getNameAssignment_1_0()); }
		(rule__EnumLiteralExp__NameAssignment_1_0)
		{ after(grammarAccess.getEnumLiteralExpAccess().getNameAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getEnumLiteralExpAccess().getNameAssignment_1_1()); }
		(rule__EnumLiteralExp__NameAssignment_1_1)
		{ after(grammarAccess.getEnumLiteralExpAccess().getNameAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpAccess().getBooleanSymbolAssignment_0()); }
		(rule__BooleanExp__BooleanSymbolAssignment_0)
		{ after(grammarAccess.getBooleanExpAccess().getBooleanSymbolAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanExpAccess().getBooleanSymbolAssignment_1()); }
		(rule__BooleanExp__BooleanSymbolAssignment_1)
		{ after(grammarAccess.getBooleanExpAccess().getBooleanSymbolAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCall__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyCallAccess().getOperationCallParserRuleCall_0()); }
		ruleOperationCall
		{ after(grammarAccess.getPropertyCallAccess().getOperationCallParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyCallAccess().getNavigationOrAttributeCallParserRuleCall_1()); }
		ruleNavigationOrAttributeCall
		{ after(grammarAccess.getPropertyCallAccess().getNavigationOrAttributeCallParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyCallAccess().getIterateExpParserRuleCall_2()); }
		ruleIterateExp
		{ after(grammarAccess.getPropertyCallAccess().getIterateExpParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyCallAccess().getIteratorExpParserRuleCall_3()); }
		ruleIteratorExp
		{ after(grammarAccess.getPropertyCallAccess().getIteratorExpParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyCallAccess().getCollectionOperationCallParserRuleCall_4()); }
		ruleCollectionOperationCall
		{ after(grammarAccess.getPropertyCallAccess().getCollectionOperationCallParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationCallAccess().getOperationNameAssignment_1_0()); }
		(rule__OperationCall__OperationNameAssignment_1_0)
		{ after(grammarAccess.getOperationCallAccess().getOperationNameAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationCallAccess().getOperationNameAssignment_1_1()); }
		(rule__OperationCall__OperationNameAssignment_1_1)
		{ after(grammarAccess.getOperationCallAccess().getOperationNameAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigationOrAttributeCall__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNavigationOrAttributeCallAccess().getNameAssignment_1_0()); }
		(rule__NavigationOrAttributeCall__NameAssignment_1_0)
		{ after(grammarAccess.getNavigationOrAttributeCallAccess().getNameAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getNavigationOrAttributeCallAccess().getNameAssignment_1_1()); }
		(rule__NavigationOrAttributeCall__NameAssignment_1_1)
		{ after(grammarAccess.getNavigationOrAttributeCallAccess().getNameAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclTypeAccess().getCollectionTypeParserRuleCall_0()); }
		ruleCollectionType
		{ after(grammarAccess.getOclTypeAccess().getCollectionTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOclTypeAccess().getPrimitiveParserRuleCall_1()); }
		rulePrimitive
		{ after(grammarAccess.getOclTypeAccess().getPrimitiveParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getOclTypeAccess().getOclAnyTypeParserRuleCall_2()); }
		ruleOclAnyType
		{ after(grammarAccess.getOclTypeAccess().getOclAnyTypeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getOclTypeAccess().getTupleTypeParserRuleCall_3()); }
		ruleTupleType
		{ after(grammarAccess.getOclTypeAccess().getTupleTypeParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getOclTypeAccess().getOclModelElementParserRuleCall_4()); }
		ruleOclModelElement
		{ after(grammarAccess.getOclTypeAccess().getOclModelElementParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getOclTypeAccess().getMapTypeParserRuleCall_5()); }
		ruleMapType
		{ after(grammarAccess.getOclTypeAccess().getMapTypeParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getOclTypeAccess().getOclType_abstractContentsParserRuleCall_6()); }
		ruleOclType_abstractContents
		{ after(grammarAccess.getOclTypeAccess().getOclType_abstractContentsParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionTypeAccess().getBagTypeParserRuleCall_0()); }
		ruleBagType
		{ after(grammarAccess.getCollectionTypeAccess().getBagTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionTypeAccess().getOrderedSetTypeParserRuleCall_1()); }
		ruleOrderedSetType
		{ after(grammarAccess.getCollectionTypeAccess().getOrderedSetTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionTypeAccess().getSequenceTypeParserRuleCall_2()); }
		ruleSequenceType
		{ after(grammarAccess.getCollectionTypeAccess().getSequenceTypeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionTypeAccess().getSetTypeParserRuleCall_3()); }
		ruleSetType
		{ after(grammarAccess.getCollectionTypeAccess().getSetTypeParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getStringTypeParserRuleCall_0()); }
		ruleStringType
		{ after(grammarAccess.getPrimitiveAccess().getStringTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getBooleanTypeParserRuleCall_1()); }
		ruleBooleanType
		{ after(grammarAccess.getPrimitiveAccess().getBooleanTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getNumericTypeParserRuleCall_2()); }
		ruleNumericType
		{ after(grammarAccess.getPrimitiveAccess().getNumericTypeParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericTypeAccess().getIntegerTypeParserRuleCall_0()); }
		ruleIntegerType
		{ after(grammarAccess.getNumericTypeAccess().getIntegerTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumericTypeAccess().getRealTypeParserRuleCall_1()); }
		ruleRealType
		{ after(grammarAccess.getNumericTypeAccess().getRealTypeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleTypeAccess().getTupleTypeKeyword_1_0()); }
		'TupleType'
		{ after(grammarAccess.getTupleTypeAccess().getTupleTypeKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTupleTypeAccess().getTupleKeyword_1_1()); }
		'Tuple'
		{ after(grammarAccess.getTupleTypeAccess().getTupleKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__0__Impl
	rule__Module__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getModuleKeyword_0()); }
	'module'
	{ after(grammarAccess.getModuleAccess().getModuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__1__Impl
	rule__Module__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getNameAssignment_1()); }
	(rule__Module__NameAssignment_1)
	{ after(grammarAccess.getModuleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__2__Impl
	rule__Module__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getModuleAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__3__Impl
	rule__Module__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getImportsAssignment_3()); }
	(rule__Module__ImportsAssignment_3)
	{ after(grammarAccess.getModuleAccess().getImportsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getModuleAccess().getElementsAssignment_4()); }
		(rule__Module__ElementsAssignment_4)
		{ after(grammarAccess.getModuleAccess().getElementsAssignment_4()); }
	)
	(
		{ before(grammarAccess.getModuleAccess().getElementsAssignment_4()); }
		(rule__Module__ElementsAssignment_4)*
		{ after(grammarAccess.getModuleAccess().getElementsAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getPackageAssignment_1()); }
	(rule__Import__PackageAssignment_1)
	{ after(grammarAccess.getImportAccess().getPackageAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__2__Impl
	rule__Import__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getAsKeyword_2()); }
	'as'
	{ after(grammarAccess.getImportAccess().getAsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getNameAssignment_3()); }
	(rule__Import__NameAssignment_3)
	{ after(grammarAccess.getImportAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OclFeatureDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclFeatureDefinition__Group__0__Impl
	rule__OclFeatureDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OclFeatureDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclFeatureDefinitionAccess().getGroup_0()); }
	(rule__OclFeatureDefinition__Group_0__0)?
	{ after(grammarAccess.getOclFeatureDefinitionAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclFeatureDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclFeatureDefinition__Group__1__Impl
	rule__OclFeatureDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OclFeatureDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclFeatureDefinitionAccess().getDefKeyword_1()); }
	'def'
	{ after(grammarAccess.getOclFeatureDefinitionAccess().getDefKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclFeatureDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclFeatureDefinition__Group__2__Impl
	rule__OclFeatureDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OclFeatureDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclFeatureDefinitionAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getOclFeatureDefinitionAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclFeatureDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclFeatureDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OclFeatureDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclFeatureDefinitionAccess().getFeatureAssignment_3()); }
	(rule__OclFeatureDefinition__FeatureAssignment_3)
	{ after(grammarAccess.getOclFeatureDefinitionAccess().getFeatureAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OclFeatureDefinition__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclFeatureDefinition__Group_0__0__Impl
	rule__OclFeatureDefinition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OclFeatureDefinition__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclFeatureDefinitionAccess().getContextKeyword_0_0()); }
	'context'
	{ after(grammarAccess.getOclFeatureDefinitionAccess().getContextKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclFeatureDefinition__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclFeatureDefinition__Group_0__1__Impl
	rule__OclFeatureDefinition__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OclFeatureDefinition__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclFeatureDefinitionAccess().getEcoreTypesAssignment_0_1()); }
	(rule__OclFeatureDefinition__EcoreTypesAssignment_0_1)
	{ after(grammarAccess.getOclFeatureDefinitionAccess().getEcoreTypesAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclFeatureDefinition__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclFeatureDefinition__Group_0__2__Impl
	rule__OclFeatureDefinition__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OclFeatureDefinition__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclFeatureDefinitionAccess().getExclamationMarkKeyword_0_2()); }
	'!'
	{ after(grammarAccess.getOclFeatureDefinitionAccess().getExclamationMarkKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclFeatureDefinition__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclFeatureDefinition__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OclFeatureDefinition__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclFeatureDefinitionAccess().getClassAssignment_0_3()); }
	(rule__OclFeatureDefinition__ClassAssignment_0_3)
	{ after(grammarAccess.getOclFeatureDefinitionAccess().getClassAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
	(rule__Attribute__NameAssignment_0)
	{ after(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getAttributeAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__2__Impl
	rule__Attribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getTypeAssignment_2()); }
	(rule__Attribute__TypeAssignment_2)
	{ after(grammarAccess.getAttributeAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__3__Impl
	rule__Attribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getAttributeAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__4__Impl
	rule__Attribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getInitExpressionAssignment_4()); }
	(rule__Attribute__InitExpressionAssignment_4)
	{ after(grammarAccess.getAttributeAccess().getInitExpressionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getAttributeAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__0__Impl
	rule__Operation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getNameAssignment_0()); }
	(rule__Operation__NameAssignment_0)
	{ after(grammarAccess.getOperationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__1__Impl
	rule__Operation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getOperationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__2__Impl
	rule__Operation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getGroup_2()); }
	(rule__Operation__Group_2__0)?
	{ after(grammarAccess.getOperationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__3__Impl
	rule__Operation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getOperationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__4__Impl
	rule__Operation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getOperationAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__5__Impl
	rule__Operation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getReturnTypeAssignment_5()); }
	(rule__Operation__ReturnTypeAssignment_5)
	{ after(grammarAccess.getOperationAccess().getReturnTypeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__6__Impl
	rule__Operation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getEqualsSignKeyword_6()); }
	'='
	{ after(grammarAccess.getOperationAccess().getEqualsSignKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__7__Impl
	rule__Operation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getBodyAssignment_7()); }
	(rule__Operation__BodyAssignment_7)
	{ after(grammarAccess.getOperationAccess().getBodyAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getSemicolonKeyword_8()); }
	';'
	{ after(grammarAccess.getOperationAccess().getSemicolonKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group_2__0__Impl
	rule__Operation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getParametersAssignment_2_0()); }
	(rule__Operation__ParametersAssignment_2_0)
	{ after(grammarAccess.getOperationAccess().getParametersAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getOperationAccess().getGroup_2_1()); }
		(rule__Operation__Group_2_1__0)
		{ after(grammarAccess.getOperationAccess().getGroup_2_1()); }
	)
	(
		{ before(grammarAccess.getOperationAccess().getGroup_2_1()); }
		(rule__Operation__Group_2_1__0)*
		{ after(grammarAccess.getOperationAccess().getGroup_2_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group_2_1__0__Impl
	rule__Operation__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getOperationAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getParametersAssignment_2_1_1()); }
	(rule__Operation__ParametersAssignment_2_1_1)
	{ after(grammarAccess.getOperationAccess().getParametersAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_0()); }
	(rule__Parameter__NameAssignment_0)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getParameterAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getTypeAssignment_2()); }
	(rule__Parameter__TypeAssignment_2)
	{ after(grammarAccess.getParameterAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OclInvariant__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclInvariant__Group__0__Impl
	rule__OclInvariant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclInvariantAccess().getGroup_0()); }
	(rule__OclInvariant__Group_0__0)?
	{ after(grammarAccess.getOclInvariantAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclInvariant__Group__1__Impl
	rule__OclInvariant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclInvariantAccess().getInvKeyword_1()); }
	'inv'
	{ after(grammarAccess.getOclInvariantAccess().getInvKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclInvariant__Group__2__Impl
	rule__OclInvariant__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclInvariantAccess().getNameAssignment_2()); }
	(rule__OclInvariant__NameAssignment_2)
	{ after(grammarAccess.getOclInvariantAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclInvariant__Group__3__Impl
	rule__OclInvariant__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclInvariantAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getOclInvariantAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclInvariant__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclInvariantAccess().getBodyAssignment_4()); }
	(rule__OclInvariant__BodyAssignment_4)
	{ after(grammarAccess.getOclInvariantAccess().getBodyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OclInvariant__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclInvariant__Group_0__0__Impl
	rule__OclInvariant__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclInvariantAccess().getContextKeyword_0_0()); }
	'context'
	{ after(grammarAccess.getOclInvariantAccess().getContextKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclInvariant__Group_0__1__Impl
	rule__OclInvariant__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclInvariantAccess().getEcoreTypesAssignment_0_1()); }
	(rule__OclInvariant__EcoreTypesAssignment_0_1)
	{ after(grammarAccess.getOclInvariantAccess().getEcoreTypesAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclInvariant__Group_0__2__Impl
	rule__OclInvariant__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclInvariantAccess().getExclamationMarkKeyword_0_2()); }
	'!'
	{ after(grammarAccess.getOclInvariantAccess().getExclamationMarkKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclInvariant__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclInvariantAccess().getClassAssignment_0_3()); }
	(rule__OclInvariant__ClassAssignment_0_3)
	{ after(grammarAccess.getOclInvariantAccess().getClassAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OclModelElementExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclModelElementExp__Group__0__Impl
	rule__OclModelElementExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElementExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclModelElementExpAccess().getModelAssignment_0()); }
	(rule__OclModelElementExp__ModelAssignment_0)
	{ after(grammarAccess.getOclModelElementExpAccess().getModelAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElementExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclModelElementExp__Group__1__Impl
	rule__OclModelElementExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElementExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclModelElementExpAccess().getExclamationMarkKeyword_1()); }
	'!'
	{ after(grammarAccess.getOclModelElementExpAccess().getExclamationMarkKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElementExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclModelElementExp__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElementExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclModelElementExpAccess().getNameAssignment_2()); }
	(rule__OclModelElementExp__NameAssignment_2)
	{ after(grammarAccess.getOclModelElementExpAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperatorCallExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperatorCallExp__Group__0__Impl
	rule__OperatorCallExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorCallExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorCallExpAccess().getBoolOpCallExpParserRuleCall_0()); }
	ruleBoolOpCallExp
	{ after(grammarAccess.getOperatorCallExpAccess().getBoolOpCallExpParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorCallExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperatorCallExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorCallExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorCallExpAccess().getGroup_1()); }
	(rule__OperatorCallExp__Group_1__0)*
	{ after(grammarAccess.getOperatorCallExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperatorCallExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperatorCallExp__Group_1__0__Impl
	rule__OperatorCallExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorCallExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorCallExpAccess().getOperatorCallExpSourceAction_1_0()); }
	()
	{ after(grammarAccess.getOperatorCallExpAccess().getOperatorCallExpSourceAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorCallExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperatorCallExp__Group_1__1__Impl
	rule__OperatorCallExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorCallExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorCallExpAccess().getOperationNameAssignment_1_1()); }
	(rule__OperatorCallExp__OperationNameAssignment_1_1)
	{ after(grammarAccess.getOperatorCallExpAccess().getOperationNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorCallExp__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperatorCallExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorCallExp__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorCallExpAccess().getArgumentAssignment_1_2()); }
	(rule__OperatorCallExp__ArgumentAssignment_1_2)
	{ after(grammarAccess.getOperatorCallExpAccess().getArgumentAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BoolOpCallExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOpCallExp__Group__0__Impl
	rule__BoolOpCallExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOpCallExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOpCallExpAccess().getEqOpCallExpParserRuleCall_0()); }
	ruleEqOpCallExp
	{ after(grammarAccess.getBoolOpCallExpAccess().getEqOpCallExpParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOpCallExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOpCallExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOpCallExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOpCallExpAccess().getGroup_1()); }
	(rule__BoolOpCallExp__Group_1__0)*
	{ after(grammarAccess.getBoolOpCallExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BoolOpCallExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOpCallExp__Group_1__0__Impl
	rule__BoolOpCallExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOpCallExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOpCallExpAccess().getGroup_1_0()); }
	(rule__BoolOpCallExp__Group_1_0__0)
	{ after(grammarAccess.getBoolOpCallExpAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOpCallExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOpCallExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOpCallExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOpCallExpAccess().getArgumentAssignment_1_1()); }
	(rule__BoolOpCallExp__ArgumentAssignment_1_1)
	{ after(grammarAccess.getBoolOpCallExpAccess().getArgumentAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BoolOpCallExp__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOpCallExp__Group_1_0__0__Impl
	rule__BoolOpCallExp__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOpCallExp__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOpCallExpAccess().getBoolOpCallExpSourceAction_1_0_0()); }
	()
	{ after(grammarAccess.getBoolOpCallExpAccess().getBoolOpCallExpSourceAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOpCallExp__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOpCallExp__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOpCallExp__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOpCallExpAccess().getOperationNameAssignment_1_0_1()); }
	(rule__BoolOpCallExp__OperationNameAssignment_1_0_1)
	{ after(grammarAccess.getBoolOpCallExpAccess().getOperationNameAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqOpCallExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqOpCallExp__Group__0__Impl
	rule__EqOpCallExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqOpCallExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqOpCallExpAccess().getRelOpCallExpParserRuleCall_0()); }
	ruleRelOpCallExp
	{ after(grammarAccess.getEqOpCallExpAccess().getRelOpCallExpParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqOpCallExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqOpCallExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqOpCallExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqOpCallExpAccess().getGroup_1()); }
	(rule__EqOpCallExp__Group_1__0)*
	{ after(grammarAccess.getEqOpCallExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqOpCallExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqOpCallExp__Group_1__0__Impl
	rule__EqOpCallExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqOpCallExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqOpCallExpAccess().getGroup_1_0()); }
	(rule__EqOpCallExp__Group_1_0__0)
	{ after(grammarAccess.getEqOpCallExpAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqOpCallExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqOpCallExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqOpCallExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqOpCallExpAccess().getArgumentAssignment_1_1()); }
	(rule__EqOpCallExp__ArgumentAssignment_1_1)
	{ after(grammarAccess.getEqOpCallExpAccess().getArgumentAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqOpCallExp__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqOpCallExp__Group_1_0__0__Impl
	rule__EqOpCallExp__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqOpCallExp__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqOpCallExpAccess().getEqOpCallExpSourceAction_1_0_0()); }
	()
	{ after(grammarAccess.getEqOpCallExpAccess().getEqOpCallExpSourceAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqOpCallExp__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqOpCallExp__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqOpCallExp__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqOpCallExpAccess().getOperationNameAssignment_1_0_1()); }
	(rule__EqOpCallExp__OperationNameAssignment_1_0_1)
	{ after(grammarAccess.getEqOpCallExpAccess().getOperationNameAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelOpCallExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelOpCallExp__Group__0__Impl
	rule__RelOpCallExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelOpCallExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelOpCallExpAccess().getAddOpCallExpParserRuleCall_0()); }
	ruleAddOpCallExp
	{ after(grammarAccess.getRelOpCallExpAccess().getAddOpCallExpParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelOpCallExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelOpCallExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelOpCallExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelOpCallExpAccess().getGroup_1()); }
	(rule__RelOpCallExp__Group_1__0)*
	{ after(grammarAccess.getRelOpCallExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelOpCallExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelOpCallExp__Group_1__0__Impl
	rule__RelOpCallExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelOpCallExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelOpCallExpAccess().getGroup_1_0()); }
	(rule__RelOpCallExp__Group_1_0__0)
	{ after(grammarAccess.getRelOpCallExpAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelOpCallExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelOpCallExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelOpCallExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelOpCallExpAccess().getArgumentAssignment_1_1()); }
	(rule__RelOpCallExp__ArgumentAssignment_1_1)
	{ after(grammarAccess.getRelOpCallExpAccess().getArgumentAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelOpCallExp__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelOpCallExp__Group_1_0__0__Impl
	rule__RelOpCallExp__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelOpCallExp__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelOpCallExpAccess().getRelOpCallExpSourceAction_1_0_0()); }
	()
	{ after(grammarAccess.getRelOpCallExpAccess().getRelOpCallExpSourceAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelOpCallExp__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelOpCallExp__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelOpCallExp__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelOpCallExpAccess().getOperationNameAssignment_1_0_1()); }
	(rule__RelOpCallExp__OperationNameAssignment_1_0_1)
	{ after(grammarAccess.getRelOpCallExpAccess().getOperationNameAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddOpCallExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddOpCallExp__Group__0__Impl
	rule__AddOpCallExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOpCallExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddOpCallExpAccess().getIntOpCallExpParserRuleCall_0()); }
	ruleIntOpCallExp
	{ after(grammarAccess.getAddOpCallExpAccess().getIntOpCallExpParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOpCallExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddOpCallExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOpCallExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddOpCallExpAccess().getGroup_1()); }
	(rule__AddOpCallExp__Group_1__0)*
	{ after(grammarAccess.getAddOpCallExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddOpCallExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddOpCallExp__Group_1__0__Impl
	rule__AddOpCallExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOpCallExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddOpCallExpAccess().getGroup_1_0()); }
	(rule__AddOpCallExp__Group_1_0__0)
	{ after(grammarAccess.getAddOpCallExpAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOpCallExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddOpCallExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOpCallExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddOpCallExpAccess().getArgumentAssignment_1_1()); }
	(rule__AddOpCallExp__ArgumentAssignment_1_1)
	{ after(grammarAccess.getAddOpCallExpAccess().getArgumentAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddOpCallExp__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddOpCallExp__Group_1_0__0__Impl
	rule__AddOpCallExp__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOpCallExp__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddOpCallExpAccess().getAddOpCallExpSourceAction_1_0_0()); }
	()
	{ after(grammarAccess.getAddOpCallExpAccess().getAddOpCallExpSourceAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOpCallExp__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddOpCallExp__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOpCallExp__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddOpCallExpAccess().getOperationNameAssignment_1_0_1()); }
	(rule__AddOpCallExp__OperationNameAssignment_1_0_1)
	{ after(grammarAccess.getAddOpCallExpAccess().getOperationNameAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntOpCallExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntOpCallExp__Group__0__Impl
	rule__IntOpCallExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOpCallExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntOpCallExpAccess().getMulOpCallExpParserRuleCall_0()); }
	ruleMulOpCallExp
	{ after(grammarAccess.getIntOpCallExpAccess().getMulOpCallExpParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOpCallExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntOpCallExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOpCallExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntOpCallExpAccess().getGroup_1()); }
	(rule__IntOpCallExp__Group_1__0)*
	{ after(grammarAccess.getIntOpCallExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntOpCallExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntOpCallExp__Group_1__0__Impl
	rule__IntOpCallExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOpCallExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntOpCallExpAccess().getGroup_1_0()); }
	(rule__IntOpCallExp__Group_1_0__0)
	{ after(grammarAccess.getIntOpCallExpAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOpCallExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntOpCallExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOpCallExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntOpCallExpAccess().getArgumentAssignment_1_1()); }
	(rule__IntOpCallExp__ArgumentAssignment_1_1)
	{ after(grammarAccess.getIntOpCallExpAccess().getArgumentAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntOpCallExp__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntOpCallExp__Group_1_0__0__Impl
	rule__IntOpCallExp__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOpCallExp__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntOpCallExpAccess().getIntOpCallExpSourceAction_1_0_0()); }
	()
	{ after(grammarAccess.getIntOpCallExpAccess().getIntOpCallExpSourceAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOpCallExp__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntOpCallExp__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOpCallExp__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntOpCallExpAccess().getOperationNameAssignment_1_0_1()); }
	(rule__IntOpCallExp__OperationNameAssignment_1_0_1)
	{ after(grammarAccess.getIntOpCallExpAccess().getOperationNameAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOpCallExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOpCallExp__Group__0__Impl
	rule__MulOpCallExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOpCallExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOpCallExpAccess().getNotOpCallExpParserRuleCall_0()); }
	ruleNotOpCallExp
	{ after(grammarAccess.getMulOpCallExpAccess().getNotOpCallExpParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOpCallExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOpCallExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOpCallExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOpCallExpAccess().getGroup_1()); }
	(rule__MulOpCallExp__Group_1__0)*
	{ after(grammarAccess.getMulOpCallExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOpCallExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOpCallExp__Group_1__0__Impl
	rule__MulOpCallExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOpCallExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOpCallExpAccess().getGroup_1_0()); }
	(rule__MulOpCallExp__Group_1_0__0)
	{ after(grammarAccess.getMulOpCallExpAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOpCallExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOpCallExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOpCallExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOpCallExpAccess().getArgumentAssignment_1_1()); }
	(rule__MulOpCallExp__ArgumentAssignment_1_1)
	{ after(grammarAccess.getMulOpCallExpAccess().getArgumentAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOpCallExp__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOpCallExp__Group_1_0__0__Impl
	rule__MulOpCallExp__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOpCallExp__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOpCallExpAccess().getMulOpCallExpSourceAction_1_0_0()); }
	()
	{ after(grammarAccess.getMulOpCallExpAccess().getMulOpCallExpSourceAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOpCallExp__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOpCallExp__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOpCallExp__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOpCallExpAccess().getOperationNameAssignment_1_0_1()); }
	(rule__MulOpCallExp__OperationNameAssignment_1_0_1)
	{ after(grammarAccess.getMulOpCallExpAccess().getOperationNameAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NotOpCallExp__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotOpCallExp__Group_0__0__Impl
	rule__NotOpCallExp__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotOpCallExp__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotOpCallExpAccess().getOperationNameAssignment_0_0()); }
	(rule__NotOpCallExp__OperationNameAssignment_0_0)
	{ after(grammarAccess.getNotOpCallExpAccess().getOperationNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotOpCallExp__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotOpCallExp__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotOpCallExp__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotOpCallExpAccess().getSourceAssignment_0_1()); }
	(rule__NotOpCallExp__SourceAssignment_0_1)
	{ after(grammarAccess.getNotOpCallExpAccess().getSourceAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyCallExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyCallExp__Group__0__Impl
	rule__PropertyCallExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCallExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyCallExpAccess().getSourceAssignment_0()); }
	(rule__PropertyCallExp__SourceAssignment_0)
	{ after(grammarAccess.getPropertyCallExpAccess().getSourceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCallExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyCallExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCallExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyCallExpAccess().getCallsAssignment_1()); }
	(rule__PropertyCallExp__CallsAssignment_1)*
	{ after(grammarAccess.getPropertyCallExpAccess().getCallsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SuperExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuperExp__Group__0__Impl
	rule__SuperExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuperExpAccess().getSuperExpAction_0()); }
	()
	{ after(grammarAccess.getSuperExpAccess().getSuperExpAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SuperExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSuperExpAccess().getSuperKeyword_1()); }
	'super'
	{ after(grammarAccess.getSuperExpAccess().getSuperKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelfExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelfExp__Group__0__Impl
	rule__SelfExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelfExpAccess().getSelfExpAction_0()); }
	()
	{ after(grammarAccess.getSelfExpAccess().getSelfExpAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelfExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelfExpAccess().getSelfKeyword_1()); }
	'self'
	{ after(grammarAccess.getSelfExpAccess().getSelfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringExp__Group__0__Impl
	rule__StringExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringExpAccess().getStringExpAction_0()); }
	()
	{ after(grammarAccess.getStringExpAccess().getStringExpAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringExpAccess().getStringSymbolAssignment_1()); }
	(rule__StringExp__StringSymbolAssignment_1)
	{ after(grammarAccess.getStringExpAccess().getStringSymbolAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerExp__Group__0__Impl
	rule__IntegerExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerExpAccess().getIntegerExpAction_0()); }
	()
	{ after(grammarAccess.getIntegerExpAccess().getIntegerExpAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerExpAccess().getIntegerSymbolAssignment_1()); }
	(rule__IntegerExp__IntegerSymbolAssignment_1)
	{ after(grammarAccess.getIntegerExpAccess().getIntegerSymbolAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagExp__Group__0__Impl
	rule__BagExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagExpAccess().getBagExpAction_0()); }
	()
	{ after(grammarAccess.getBagExpAccess().getBagExpAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagExp__Group__1__Impl
	rule__BagExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BagExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagExpAccess().getBagKeyword_1()); }
	'Bag'
	{ after(grammarAccess.getBagExpAccess().getBagKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagExp__Group__2__Impl
	rule__BagExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BagExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagExpAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getBagExpAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagExp__Group__3__Impl
	rule__BagExp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BagExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagExpAccess().getGroup_3()); }
	(rule__BagExp__Group_3__0)?
	{ after(grammarAccess.getBagExpAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagExp__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagExp__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagExp__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagExpAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getBagExpAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagExp__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagExp__Group_3__0__Impl
	rule__BagExp__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagExp__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagExpAccess().getElementsAssignment_3_0()); }
	(rule__BagExp__ElementsAssignment_3_0)
	{ after(grammarAccess.getBagExpAccess().getElementsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagExp__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagExp__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagExp__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagExpAccess().getGroup_3_1()); }
	(rule__BagExp__Group_3_1__0)*
	{ after(grammarAccess.getBagExpAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagExp__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagExp__Group_3_1__0__Impl
	rule__BagExp__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagExp__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagExpAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getBagExpAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagExp__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagExp__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagExp__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagExpAccess().getElementsAssignment_3_1_1()); }
	(rule__BagExp__ElementsAssignment_3_1_1)
	{ after(grammarAccess.getBagExpAccess().getElementsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrderedSetExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderedSetExp__Group__0__Impl
	rule__OrderedSetExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderedSetExpAccess().getOrderedSetExpAction_0()); }
	()
	{ after(grammarAccess.getOrderedSetExpAccess().getOrderedSetExpAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderedSetExp__Group__1__Impl
	rule__OrderedSetExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderedSetExpAccess().getOrderedSetKeyword_1()); }
	'OrderedSet'
	{ after(grammarAccess.getOrderedSetExpAccess().getOrderedSetKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderedSetExp__Group__2__Impl
	rule__OrderedSetExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderedSetExpAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getOrderedSetExpAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderedSetExp__Group__3__Impl
	rule__OrderedSetExp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderedSetExpAccess().getGroup_3()); }
	(rule__OrderedSetExp__Group_3__0)?
	{ after(grammarAccess.getOrderedSetExpAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetExp__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderedSetExp__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetExp__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderedSetExpAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getOrderedSetExpAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrderedSetExp__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderedSetExp__Group_3__0__Impl
	rule__OrderedSetExp__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetExp__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderedSetExpAccess().getElementsAssignment_3_0()); }
	(rule__OrderedSetExp__ElementsAssignment_3_0)
	{ after(grammarAccess.getOrderedSetExpAccess().getElementsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetExp__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderedSetExp__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetExp__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderedSetExpAccess().getGroup_3_1()); }
	(rule__OrderedSetExp__Group_3_1__0)*
	{ after(grammarAccess.getOrderedSetExpAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrderedSetExp__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderedSetExp__Group_3_1__0__Impl
	rule__OrderedSetExp__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetExp__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderedSetExpAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getOrderedSetExpAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetExp__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderedSetExp__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetExp__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderedSetExpAccess().getElementsAssignment_3_1_1()); }
	(rule__OrderedSetExp__ElementsAssignment_3_1_1)
	{ after(grammarAccess.getOrderedSetExpAccess().getElementsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceExp__Group__0__Impl
	rule__SequenceExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceExpAccess().getSequenceExpAction_0()); }
	()
	{ after(grammarAccess.getSequenceExpAccess().getSequenceExpAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceExp__Group__1__Impl
	rule__SequenceExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceExpAccess().getSequenceKeyword_1()); }
	'Sequence'
	{ after(grammarAccess.getSequenceExpAccess().getSequenceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceExp__Group__2__Impl
	rule__SequenceExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceExpAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSequenceExpAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceExp__Group__3__Impl
	rule__SequenceExp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceExpAccess().getGroup_3()); }
	(rule__SequenceExp__Group_3__0)?
	{ after(grammarAccess.getSequenceExpAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExp__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceExp__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExp__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceExpAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getSequenceExpAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceExp__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceExp__Group_3__0__Impl
	rule__SequenceExp__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExp__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceExpAccess().getElementsAssignment_3_0()); }
	(rule__SequenceExp__ElementsAssignment_3_0)
	{ after(grammarAccess.getSequenceExpAccess().getElementsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExp__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceExp__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExp__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceExpAccess().getGroup_3_1()); }
	(rule__SequenceExp__Group_3_1__0)*
	{ after(grammarAccess.getSequenceExpAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceExp__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceExp__Group_3_1__0__Impl
	rule__SequenceExp__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExp__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceExpAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getSequenceExpAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExp__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceExp__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExp__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceExpAccess().getElementsAssignment_3_1_1()); }
	(rule__SequenceExp__ElementsAssignment_3_1_1)
	{ after(grammarAccess.getSequenceExpAccess().getElementsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetExp__Group__0__Impl
	rule__SetExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetExpAccess().getSetExpAction_0()); }
	()
	{ after(grammarAccess.getSetExpAccess().getSetExpAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetExp__Group__1__Impl
	rule__SetExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetExpAccess().getSetKeyword_1()); }
	'Set'
	{ after(grammarAccess.getSetExpAccess().getSetKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetExp__Group__2__Impl
	rule__SetExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetExpAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSetExpAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetExp__Group__3__Impl
	rule__SetExp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SetExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetExpAccess().getGroup_3()); }
	(rule__SetExp__Group_3__0)?
	{ after(grammarAccess.getSetExpAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetExp__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetExp__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetExp__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetExpAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getSetExpAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetExp__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetExp__Group_3__0__Impl
	rule__SetExp__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetExp__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetExpAccess().getElementsAssignment_3_0()); }
	(rule__SetExp__ElementsAssignment_3_0)
	{ after(grammarAccess.getSetExpAccess().getElementsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetExp__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetExp__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetExp__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetExpAccess().getGroup_3_1()); }
	(rule__SetExp__Group_3_1__0)*
	{ after(grammarAccess.getSetExpAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetExp__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetExp__Group_3_1__0__Impl
	rule__SetExp__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetExp__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetExpAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getSetExpAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetExp__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetExp__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetExp__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetExpAccess().getElementsAssignment_3_1_1()); }
	(rule__SetExp__ElementsAssignment_3_1_1)
	{ after(grammarAccess.getSetExpAccess().getElementsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleExp__Group__0__Impl
	rule__TupleExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleExpAccess().getTupleExpAction_0()); }
	()
	{ after(grammarAccess.getTupleExpAccess().getTupleExpAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleExp__Group__1__Impl
	rule__TupleExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleExpAccess().getTupleKeyword_1()); }
	'Tuple'
	{ after(grammarAccess.getTupleExpAccess().getTupleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleExp__Group__2__Impl
	rule__TupleExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleExpAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getTupleExpAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleExp__Group__3__Impl
	rule__TupleExp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleExpAccess().getGroup_3()); }
	(rule__TupleExp__Group_3__0)?
	{ after(grammarAccess.getTupleExpAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleExp__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleExp__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleExp__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleExpAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getTupleExpAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleExp__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleExp__Group_3__0__Impl
	rule__TupleExp__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleExp__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleExpAccess().getTuplePartAssignment_3_0()); }
	(rule__TupleExp__TuplePartAssignment_3_0)
	{ after(grammarAccess.getTupleExpAccess().getTuplePartAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleExp__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleExp__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleExp__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleExpAccess().getGroup_3_1()); }
	(rule__TupleExp__Group_3_1__0)*
	{ after(grammarAccess.getTupleExpAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleExp__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleExp__Group_3_1__0__Impl
	rule__TupleExp__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleExp__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleExpAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getTupleExpAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleExp__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleExp__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleExp__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleExpAccess().getTuplePartAssignment_3_1_1()); }
	(rule__TupleExp__TuplePartAssignment_3_1_1)
	{ after(grammarAccess.getTupleExpAccess().getTuplePartAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TuplePart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TuplePart__Group__0__Impl
	rule__TuplePart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTuplePartAccess().getVarNameAssignment_0()); }
	(rule__TuplePart__VarNameAssignment_0)
	{ after(grammarAccess.getTuplePartAccess().getVarNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TuplePart__Group__1__Impl
	rule__TuplePart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTuplePartAccess().getGroup_1()); }
	(rule__TuplePart__Group_1__0)?
	{ after(grammarAccess.getTuplePartAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePart__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TuplePart__Group__2__Impl
	rule__TuplePart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePart__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTuplePartAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getTuplePartAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePart__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TuplePart__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePart__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTuplePartAccess().getInitExpressionAssignment_3()); }
	(rule__TuplePart__InitExpressionAssignment_3)
	{ after(grammarAccess.getTuplePartAccess().getInitExpressionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TuplePart__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TuplePart__Group_1__0__Impl
	rule__TuplePart__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePart__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTuplePartAccess().getColonKeyword_1_0()); }
	':'
	{ after(grammarAccess.getTuplePartAccess().getColonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePart__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TuplePart__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePart__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTuplePartAccess().getTypeAssignment_1_1()); }
	(rule__TuplePart__TypeAssignment_1_1)
	{ after(grammarAccess.getTuplePartAccess().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapExp__Group__0__Impl
	rule__MapExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapExpAccess().getMapExpAction_0()); }
	()
	{ after(grammarAccess.getMapExpAccess().getMapExpAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapExp__Group__1__Impl
	rule__MapExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapExpAccess().getMapKeyword_1()); }
	'Map'
	{ after(grammarAccess.getMapExpAccess().getMapKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapExp__Group__2__Impl
	rule__MapExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapExpAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getMapExpAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapExp__Group__3__Impl
	rule__MapExp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MapExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapExpAccess().getGroup_3()); }
	(rule__MapExp__Group_3__0)?
	{ after(grammarAccess.getMapExpAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapExp__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapExp__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapExp__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapExpAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getMapExpAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapExp__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapExp__Group_3__0__Impl
	rule__MapExp__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapExp__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapExpAccess().getElementsAssignment_3_0()); }
	(rule__MapExp__ElementsAssignment_3_0)
	{ after(grammarAccess.getMapExpAccess().getElementsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapExp__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapExp__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapExp__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapExpAccess().getGroup_3_1()); }
	(rule__MapExp__Group_3_1__0)*
	{ after(grammarAccess.getMapExpAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapExp__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapExp__Group_3_1__0__Impl
	rule__MapExp__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapExp__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapExpAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getMapExpAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapExp__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapExp__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapExp__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapExpAccess().getElementsAssignment_3_1_1()); }
	(rule__MapExp__ElementsAssignment_3_1_1)
	{ after(grammarAccess.getMapExpAccess().getElementsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapElement__Group__0__Impl
	rule__MapElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapElementAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getMapElementAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapElement__Group__1__Impl
	rule__MapElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapElementAccess().getKeyAssignment_1()); }
	(rule__MapElement__KeyAssignment_1)
	{ after(grammarAccess.getMapElementAccess().getKeyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapElement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapElement__Group__2__Impl
	rule__MapElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapElement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapElementAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getMapElementAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapElement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapElement__Group__3__Impl
	rule__MapElement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MapElement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapElementAccess().getValueAssignment_3()); }
	(rule__MapElement__ValueAssignment_3)
	{ after(grammarAccess.getMapElementAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapElement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapElement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapElement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapElementAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getMapElementAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumLiteralExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumLiteralExp__Group__0__Impl
	rule__EnumLiteralExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumLiteralExpAccess().getNumberSignKeyword_0()); }
	'#'
	{ after(grammarAccess.getEnumLiteralExpAccess().getNumberSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumLiteralExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumLiteralExpAccess().getAlternatives_1()); }
	(rule__EnumLiteralExp__Alternatives_1)
	{ after(grammarAccess.getEnumLiteralExpAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OclUndefinedExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclUndefinedExp__Group__0__Impl
	rule__OclUndefinedExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OclUndefinedExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclUndefinedExpAccess().getOclUndefinedExpAction_0()); }
	()
	{ after(grammarAccess.getOclUndefinedExpAccess().getOclUndefinedExpAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclUndefinedExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclUndefinedExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OclUndefinedExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclUndefinedExpAccess().getOclUndefinedKeyword_1()); }
	'OclUndefined'
	{ after(grammarAccess.getOclUndefinedExpAccess().getOclUndefinedKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LetExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExp__Group__0__Impl
	rule__LetExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpAccess().getLetKeyword_0()); }
	'let'
	{ after(grammarAccess.getLetExpAccess().getLetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExp__Group__1__Impl
	rule__LetExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpAccess().getVariableAssignment_1()); }
	(rule__LetExp__VariableAssignment_1)
	{ after(grammarAccess.getLetExpAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExp__Group__2__Impl
	rule__LetExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpAccess().getInKeyword_2()); }
	'in'
	{ after(grammarAccess.getLetExpAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExp__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpAccess().getIn_Assignment_3()); }
	(rule__LetExp__In_Assignment_3)
	{ after(grammarAccess.getLetExpAccess().getIn_Assignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExp__Group__0__Impl
	rule__IfExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfExpAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExp__Group__1__Impl
	rule__IfExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpAccess().getConditionAssignment_1()); }
	(rule__IfExp__ConditionAssignment_1)
	{ after(grammarAccess.getIfExpAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExp__Group__2__Impl
	rule__IfExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getIfExpAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExp__Group__3__Impl
	rule__IfExp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpAccess().getThenExpressionAssignment_3()); }
	(rule__IfExp__ThenExpressionAssignment_3)
	{ after(grammarAccess.getIfExpAccess().getThenExpressionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExp__Group__4__Impl
	rule__IfExp__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpAccess().getElseKeyword_4()); }
	'else'
	{ after(grammarAccess.getIfExpAccess().getElseKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExp__Group__5__Impl
	rule__IfExp__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpAccess().getElseExpressionAssignment_5()); }
	(rule__IfExp__ElseExpressionAssignment_5)
	{ after(grammarAccess.getIfExpAccess().getElseExpressionAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExp__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpAccess().getEndifKeyword_6()); }
	'endif'
	{ after(grammarAccess.getIfExpAccess().getEndifKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BraceExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BraceExp__Group__0__Impl
	rule__BraceExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BraceExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBraceExpAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getBraceExpAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BraceExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BraceExp__Group__1__Impl
	rule__BraceExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BraceExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBraceExpAccess().getExpAssignment_1()); }
	(rule__BraceExp__ExpAssignment_1)
	{ after(grammarAccess.getBraceExpAccess().getExpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BraceExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BraceExp__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BraceExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBraceExpAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getBraceExpAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCall__Group__0__Impl
	rule__OperationCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCallAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getOperationCallAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCall__Group__1__Impl
	rule__OperationCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCallAccess().getAlternatives_1()); }
	(rule__OperationCall__Alternatives_1)
	{ after(grammarAccess.getOperationCallAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCall__Group__2__Impl
	rule__OperationCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCall__Group__3__Impl
	rule__OperationCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCallAccess().getGroup_3()); }
	(rule__OperationCall__Group_3__0)?
	{ after(grammarAccess.getOperationCallAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCall__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCall__Group_3__0__Impl
	rule__OperationCall__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCallAccess().getArgumentsAssignment_3_0()); }
	(rule__OperationCall__ArgumentsAssignment_3_0)
	{ after(grammarAccess.getOperationCallAccess().getArgumentsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCall__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCallAccess().getGroup_3_1()); }
	(rule__OperationCall__Group_3_1__0)*
	{ after(grammarAccess.getOperationCallAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCall__Group_3_1__0__Impl
	rule__OperationCall__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCallAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getOperationCallAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCall__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCallAccess().getArgumentsAssignment_3_1_1()); }
	(rule__OperationCall__ArgumentsAssignment_3_1_1)
	{ after(grammarAccess.getOperationCallAccess().getArgumentsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NavigationOrAttributeCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigationOrAttributeCall__Group__0__Impl
	rule__NavigationOrAttributeCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigationOrAttributeCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigationOrAttributeCallAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getNavigationOrAttributeCallAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigationOrAttributeCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigationOrAttributeCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigationOrAttributeCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigationOrAttributeCallAccess().getAlternatives_1()); }
	(rule__NavigationOrAttributeCall__Alternatives_1)
	{ after(grammarAccess.getNavigationOrAttributeCallAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IterateExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateExp__Group__0__Impl
	rule__IterateExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateExpAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
	'->'
	{ after(grammarAccess.getIterateExpAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateExp__Group__1__Impl
	rule__IterateExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateExpAccess().getIterateKeyword_1()); }
	'iterate'
	{ after(grammarAccess.getIterateExpAccess().getIterateKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateExp__Group__2__Impl
	rule__IterateExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateExpAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getIterateExpAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateExp__Group__3__Impl
	rule__IterateExp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateExpAccess().getIteratorsAssignment_3()); }
	(rule__IterateExp__IteratorsAssignment_3)
	{ after(grammarAccess.getIterateExpAccess().getIteratorsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateExp__Group__4__Impl
	rule__IterateExp__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateExpAccess().getGroup_4()); }
	(rule__IterateExp__Group_4__0)*
	{ after(grammarAccess.getIterateExpAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateExp__Group__5__Impl
	rule__IterateExp__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateExpAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getIterateExpAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateExp__Group__6__Impl
	rule__IterateExp__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateExpAccess().getResultAssignment_6()); }
	(rule__IterateExp__ResultAssignment_6)
	{ after(grammarAccess.getIterateExpAccess().getResultAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateExp__Group__7__Impl
	rule__IterateExp__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateExpAccess().getVerticalLineKeyword_7()); }
	'|'
	{ after(grammarAccess.getIterateExpAccess().getVerticalLineKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateExp__Group__8__Impl
	rule__IterateExp__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateExpAccess().getBodyAssignment_8()); }
	(rule__IterateExp__BodyAssignment_8)
	{ after(grammarAccess.getIterateExpAccess().getBodyAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateExp__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateExpAccess().getRightParenthesisKeyword_9()); }
	')'
	{ after(grammarAccess.getIterateExpAccess().getRightParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IterateExp__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateExp__Group_4__0__Impl
	rule__IterateExp__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateExpAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getIterateExpAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateExp__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateExpAccess().getIteratorsAssignment_4_1()); }
	(rule__IterateExp__IteratorsAssignment_4_1)
	{ after(grammarAccess.getIterateExpAccess().getIteratorsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Iterator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iterator__Group__0__Impl
	rule__Iterator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorAccess().getNameAssignment_0()); }
	(rule__Iterator__NameAssignment_0)
	{ after(grammarAccess.getIteratorAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iterator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorAccess().getGroup_1()); }
	(rule__Iterator__Group_1__0)?
	{ after(grammarAccess.getIteratorAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Iterator__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iterator__Group_1__0__Impl
	rule__Iterator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorAccess().getColonKeyword_1_0()); }
	':'
	{ after(grammarAccess.getIteratorAccess().getColonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iterator__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorAccess().getTypeAssignment_1_1()); }
	(rule__Iterator__TypeAssignment_1_1)
	{ after(grammarAccess.getIteratorAccess().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IteratorExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratorExp__Group__0__Impl
	rule__IteratorExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorExpAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
	'->'
	{ after(grammarAccess.getIteratorExpAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratorExp__Group__1__Impl
	rule__IteratorExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorExpAccess().getNameAssignment_1()); }
	(rule__IteratorExp__NameAssignment_1)
	{ after(grammarAccess.getIteratorExpAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratorExp__Group__2__Impl
	rule__IteratorExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorExpAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getIteratorExpAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratorExp__Group__3__Impl
	rule__IteratorExp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorExpAccess().getIteratorsAssignment_3()); }
	(rule__IteratorExp__IteratorsAssignment_3)
	{ after(grammarAccess.getIteratorExpAccess().getIteratorsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratorExp__Group__4__Impl
	rule__IteratorExp__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorExpAccess().getGroup_4()); }
	(rule__IteratorExp__Group_4__0)*
	{ after(grammarAccess.getIteratorExpAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratorExp__Group__5__Impl
	rule__IteratorExp__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorExpAccess().getVerticalLineKeyword_5()); }
	'|'
	{ after(grammarAccess.getIteratorExpAccess().getVerticalLineKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratorExp__Group__6__Impl
	rule__IteratorExp__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorExpAccess().getBodyAssignment_6()); }
	(rule__IteratorExp__BodyAssignment_6)
	{ after(grammarAccess.getIteratorExpAccess().getBodyAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratorExp__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorExpAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getIteratorExpAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IteratorExp__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratorExp__Group_4__0__Impl
	rule__IteratorExp__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorExpAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getIteratorExpAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratorExp__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorExpAccess().getIteratorsAssignment_4_1()); }
	(rule__IteratorExp__IteratorsAssignment_4_1)
	{ after(grammarAccess.getIteratorExpAccess().getIteratorsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionOperationCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionOperationCall__Group__0__Impl
	rule__CollectionOperationCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionOperationCallAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
	'->'
	{ after(grammarAccess.getCollectionOperationCallAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionOperationCall__Group__1__Impl
	rule__CollectionOperationCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionOperationCallAccess().getOperationNameAssignment_1()); }
	(rule__CollectionOperationCall__OperationNameAssignment_1)
	{ after(grammarAccess.getCollectionOperationCallAccess().getOperationNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionOperationCall__Group__2__Impl
	rule__CollectionOperationCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionOperationCallAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getCollectionOperationCallAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionOperationCall__Group__3__Impl
	rule__CollectionOperationCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionOperationCallAccess().getGroup_3()); }
	(rule__CollectionOperationCall__Group_3__0)?
	{ after(grammarAccess.getCollectionOperationCallAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionOperationCall__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionOperationCallAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getCollectionOperationCallAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionOperationCall__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionOperationCall__Group_3__0__Impl
	rule__CollectionOperationCall__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionOperationCallAccess().getArgumentsAssignment_3_0()); }
	(rule__CollectionOperationCall__ArgumentsAssignment_3_0)
	{ after(grammarAccess.getCollectionOperationCallAccess().getArgumentsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionOperationCall__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionOperationCallAccess().getGroup_3_1()); }
	(rule__CollectionOperationCall__Group_3_1__0)*
	{ after(grammarAccess.getCollectionOperationCallAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionOperationCall__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionOperationCall__Group_3_1__0__Impl
	rule__CollectionOperationCall__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionOperationCallAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getCollectionOperationCallAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionOperationCall__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionOperationCallAccess().getArgumentsAssignment_3_1_1()); }
	(rule__CollectionOperationCall__ArgumentsAssignment_3_1_1)
	{ after(grammarAccess.getCollectionOperationCallAccess().getArgumentsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalVariable__Group__0__Impl
	rule__LocalVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalVariableAccess().getNameAssignment_0()); }
	(rule__LocalVariable__NameAssignment_0)
	{ after(grammarAccess.getLocalVariableAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalVariable__Group__1__Impl
	rule__LocalVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalVariableAccess().getGroup_1()); }
	(rule__LocalVariable__Group_1__0)?
	{ after(grammarAccess.getLocalVariableAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalVariable__Group__2__Impl
	rule__LocalVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalVariableAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getLocalVariableAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalVariable__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalVariableAccess().getInitExpressionAssignment_3()); }
	(rule__LocalVariable__InitExpressionAssignment_3)
	{ after(grammarAccess.getLocalVariableAccess().getInitExpressionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariable__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalVariable__Group_1__0__Impl
	rule__LocalVariable__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalVariableAccess().getColonKeyword_1_0()); }
	':'
	{ after(grammarAccess.getLocalVariableAccess().getColonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalVariable__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalVariableAccess().getTypeAssignment_1_1()); }
	(rule__LocalVariable__TypeAssignment_1_1)
	{ after(grammarAccess.getLocalVariableAccess().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagType__Group__0__Impl
	rule__BagType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTypeAccess().getBagKeyword_0()); }
	'Bag'
	{ after(grammarAccess.getBagTypeAccess().getBagKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagType__Group__1__Impl
	rule__BagType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BagType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTypeAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getBagTypeAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagType__Group__2__Impl
	rule__BagType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BagType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTypeAccess().getElementTypeAssignment_2()); }
	(rule__BagType__ElementTypeAssignment_2)
	{ after(grammarAccess.getBagTypeAccess().getElementTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTypeAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getBagTypeAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrderedSetType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderedSetType__Group__0__Impl
	rule__OrderedSetType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderedSetTypeAccess().getOrderedSetKeyword_0()); }
	'OrderedSet'
	{ after(grammarAccess.getOrderedSetTypeAccess().getOrderedSetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderedSetType__Group__1__Impl
	rule__OrderedSetType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderedSetTypeAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getOrderedSetTypeAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderedSetType__Group__2__Impl
	rule__OrderedSetType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderedSetTypeAccess().getElementTypeAssignment_2()); }
	(rule__OrderedSetType__ElementTypeAssignment_2)
	{ after(grammarAccess.getOrderedSetTypeAccess().getElementTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderedSetType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderedSetTypeAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getOrderedSetTypeAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceType__Group__0__Impl
	rule__SequenceType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTypeAccess().getSequenceKeyword_0()); }
	'Sequence'
	{ after(grammarAccess.getSequenceTypeAccess().getSequenceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceType__Group__1__Impl
	rule__SequenceType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTypeAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSequenceTypeAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceType__Group__2__Impl
	rule__SequenceType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTypeAccess().getElementTypeAssignment_2()); }
	(rule__SequenceType__ElementTypeAssignment_2)
	{ after(grammarAccess.getSequenceTypeAccess().getElementTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTypeAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getSequenceTypeAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetType__Group__0__Impl
	rule__SetType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTypeAccess().getSetKeyword_0()); }
	'Set'
	{ after(grammarAccess.getSetTypeAccess().getSetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetType__Group__1__Impl
	rule__SetType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTypeAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSetTypeAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetType__Group__2__Impl
	rule__SetType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTypeAccess().getElementTypeAssignment_2()); }
	(rule__SetType__ElementTypeAssignment_2)
	{ after(grammarAccess.getSetTypeAccess().getElementTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTypeAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getSetTypeAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringType__Group__0__Impl
	rule__StringType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringTypeAccess().getStringTypeAction_0()); }
	()
	{ after(grammarAccess.getStringTypeAccess().getStringTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringTypeAccess().getStringKeyword_1()); }
	'String'
	{ after(grammarAccess.getStringTypeAccess().getStringKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanType__Group__0__Impl
	rule__BooleanType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanTypeAccess().getBooleanTypeAction_0()); }
	()
	{ after(grammarAccess.getBooleanTypeAccess().getBooleanTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanTypeAccess().getBooleanKeyword_1()); }
	'Boolean'
	{ after(grammarAccess.getBooleanTypeAccess().getBooleanKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerType__Group__0__Impl
	rule__IntegerType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerTypeAccess().getIntegerTypeAction_0()); }
	()
	{ after(grammarAccess.getIntegerTypeAccess().getIntegerTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerTypeAccess().getIntegerKeyword_1()); }
	'Integer'
	{ after(grammarAccess.getIntegerTypeAccess().getIntegerKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RealType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RealType__Group__0__Impl
	rule__RealType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealTypeAccess().getRealTypeAction_0()); }
	()
	{ after(grammarAccess.getRealTypeAccess().getRealTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RealType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealTypeAccess().getRealKeyword_1()); }
	'Real'
	{ after(grammarAccess.getRealTypeAccess().getRealKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OclAnyType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclAnyType__Group__0__Impl
	rule__OclAnyType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OclAnyType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclAnyTypeAccess().getOclAnyTypeAction_0()); }
	()
	{ after(grammarAccess.getOclAnyTypeAccess().getOclAnyTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclAnyType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclAnyType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OclAnyType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclAnyTypeAccess().getOclAnyKeyword_1()); }
	'OclAny'
	{ after(grammarAccess.getOclAnyTypeAccess().getOclAnyKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OclType_abstractContents__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclType_abstractContents__Group__0__Impl
	rule__OclType_abstractContents__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OclType_abstractContents__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclType_abstractContentsAccess().getOclTypeAction_0()); }
	()
	{ after(grammarAccess.getOclType_abstractContentsAccess().getOclTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclType_abstractContents__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclType_abstractContents__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OclType_abstractContents__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclType_abstractContentsAccess().getOclTypeKeyword_1()); }
	'OclType'
	{ after(grammarAccess.getOclType_abstractContentsAccess().getOclTypeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleType__Group__0__Impl
	rule__TupleType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeAccess().getTupleTypeAction_0()); }
	()
	{ after(grammarAccess.getTupleTypeAccess().getTupleTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleType__Group__1__Impl
	rule__TupleType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeAccess().getAlternatives_1()); }
	(rule__TupleType__Alternatives_1)
	{ after(grammarAccess.getTupleTypeAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleType__Group__2__Impl
	rule__TupleType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getTupleTypeAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleType__Group__3__Impl
	rule__TupleType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeAccess().getGroup_3()); }
	(rule__TupleType__Group_3__0)?
	{ after(grammarAccess.getTupleTypeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getTupleTypeAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleType__Group_3__0__Impl
	rule__TupleType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeAccess().getAttributesAssignment_3_0()); }
	(rule__TupleType__AttributesAssignment_3_0)
	{ after(grammarAccess.getTupleTypeAccess().getAttributesAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeAccess().getGroup_3_1()); }
	(rule__TupleType__Group_3_1__0)*
	{ after(grammarAccess.getTupleTypeAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleType__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleType__Group_3_1__0__Impl
	rule__TupleType__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getTupleTypeAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleType__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeAccess().getAttributesAssignment_3_1_1()); }
	(rule__TupleType__AttributesAssignment_3_1_1)
	{ after(grammarAccess.getTupleTypeAccess().getAttributesAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleTypeAttribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTypeAttribute__Group__0__Impl
	rule__TupleTypeAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeAttribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeAttributeAccess().getNameAssignment_0()); }
	(rule__TupleTypeAttribute__NameAssignment_0)
	{ after(grammarAccess.getTupleTypeAttributeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeAttribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTypeAttribute__Group__1__Impl
	rule__TupleTypeAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeAttribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeAttributeAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getTupleTypeAttributeAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeAttribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTypeAttribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeAttribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeAttributeAccess().getTypeAssignment_2()); }
	(rule__TupleTypeAttribute__TypeAssignment_2)
	{ after(grammarAccess.getTupleTypeAttributeAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OclModelElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclModelElement__Group__0__Impl
	rule__OclModelElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclModelElementAccess().getModelAssignment_0()); }
	(rule__OclModelElement__ModelAssignment_0)
	{ after(grammarAccess.getOclModelElementAccess().getModelAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclModelElement__Group__1__Impl
	rule__OclModelElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclModelElementAccess().getExclamationMarkKeyword_1()); }
	'!'
	{ after(grammarAccess.getOclModelElementAccess().getExclamationMarkKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclModelElement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclModelElementAccess().getNameAssignment_2()); }
	(rule__OclModelElement__NameAssignment_2)
	{ after(grammarAccess.getOclModelElementAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__0__Impl
	rule__MapType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getMapKeyword_0()); }
	'Map'
	{ after(grammarAccess.getMapTypeAccess().getMapKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__1__Impl
	rule__MapType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMapTypeAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__2__Impl
	rule__MapType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getKeyTypeAssignment_2()); }
	(rule__MapType__KeyTypeAssignment_2)
	{ after(grammarAccess.getMapTypeAccess().getKeyTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__3__Impl
	rule__MapType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getMapTypeAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__4__Impl
	rule__MapType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getValueTypeAssignment_4()); }
	(rule__MapType__ValueTypeAssignment_4)
	{ after(grammarAccess.getMapTypeAccess().getValueTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getMapTypeAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ImportsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getImportsImportParserRuleCall_3_0()); }
		ruleImport
		{ after(grammarAccess.getModuleAccess().getImportsImportParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ElementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getElementsModuleElementParserRuleCall_4_0()); }
		ruleModuleElement
		{ after(grammarAccess.getModuleAccess().getElementsModuleElementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__PackageAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getPackageEPackageCrossReference_1_0()); }
		(
			{ before(grammarAccess.getImportAccess().getPackageEPackageSTRINGTerminalRuleCall_1_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getImportAccess().getPackageEPackageSTRINGTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getImportAccess().getPackageEPackageCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getImportAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclFeatureDefinition__EcoreTypesAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclFeatureDefinitionAccess().getEcoreTypesImportCrossReference_0_1_0()); }
		(
			{ before(grammarAccess.getOclFeatureDefinitionAccess().getEcoreTypesImportIDTerminalRuleCall_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOclFeatureDefinitionAccess().getEcoreTypesImportIDTerminalRuleCall_0_1_0_1()); }
		)
		{ after(grammarAccess.getOclFeatureDefinitionAccess().getEcoreTypesImportCrossReference_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclFeatureDefinition__ClassAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclFeatureDefinitionAccess().getClassEClassCrossReference_0_3_0()); }
		(
			{ before(grammarAccess.getOclFeatureDefinitionAccess().getClassEClassQualifiedNameParserRuleCall_0_3_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getOclFeatureDefinitionAccess().getClassEClassQualifiedNameParserRuleCall_0_3_0_1()); }
		)
		{ after(grammarAccess.getOclFeatureDefinitionAccess().getClassEClassCrossReference_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclFeatureDefinition__FeatureAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclFeatureDefinitionAccess().getFeatureAlternatives_3_0()); }
		(rule__OclFeatureDefinition__FeatureAlternatives_3_0)
		{ after(grammarAccess.getOclFeatureDefinitionAccess().getFeatureAlternatives_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getTypeOclTypeParserRuleCall_2_0()); }
		ruleOclType
		{ after(grammarAccess.getAttributeAccess().getTypeOclTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__InitExpressionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getInitExpressionOclExpressionParserRuleCall_4_0()); }
		ruleOclExpression
		{ after(grammarAccess.getAttributeAccess().getInitExpressionOclExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ParametersAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getParametersParameterParserRuleCall_2_0_0()); }
		ruleParameter
		{ after(grammarAccess.getOperationAccess().getParametersParameterParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ParametersAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getParametersParameterParserRuleCall_2_1_1_0()); }
		ruleParameter
		{ after(grammarAccess.getOperationAccess().getParametersParameterParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ReturnTypeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getReturnTypeOclTypeParserRuleCall_5_0()); }
		ruleOclType
		{ after(grammarAccess.getOperationAccess().getReturnTypeOclTypeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__BodyAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getBodyOclExpressionParserRuleCall_7_0()); }
		ruleOclExpression
		{ after(grammarAccess.getOperationAccess().getBodyOclExpressionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getTypeOclTypeParserRuleCall_2_0()); }
		ruleOclType
		{ after(grammarAccess.getParameterAccess().getTypeOclTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__EcoreTypesAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclInvariantAccess().getEcoreTypesImportCrossReference_0_1_0()); }
		(
			{ before(grammarAccess.getOclInvariantAccess().getEcoreTypesImportIDTerminalRuleCall_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOclInvariantAccess().getEcoreTypesImportIDTerminalRuleCall_0_1_0_1()); }
		)
		{ after(grammarAccess.getOclInvariantAccess().getEcoreTypesImportCrossReference_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__ClassAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclInvariantAccess().getClassEClassCrossReference_0_3_0()); }
		(
			{ before(grammarAccess.getOclInvariantAccess().getClassEClassQualifiedNameParserRuleCall_0_3_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getOclInvariantAccess().getClassEClassQualifiedNameParserRuleCall_0_3_0_1()); }
		)
		{ after(grammarAccess.getOclInvariantAccess().getClassEClassCrossReference_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclInvariantAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getOclInvariantAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__BodyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclInvariantAccess().getBodyOclExpressionParserRuleCall_4_0()); }
		ruleOclExpression
		{ after(grammarAccess.getOclInvariantAccess().getBodyOclExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElementExp__ModelAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclModelElementExpAccess().getModelImportCrossReference_0_0()); }
		(
			{ before(grammarAccess.getOclModelElementExpAccess().getModelImportIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOclModelElementExpAccess().getModelImportIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getOclModelElementExpAccess().getModelImportCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElementExp__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclModelElementExpAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getOclModelElementExpAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorCallExp__OperationNameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorCallExpAccess().getOperationNameTEMPBIOPParserRuleCall_1_1_0()); }
		ruleTEMPBIOP
		{ after(grammarAccess.getOperatorCallExpAccess().getOperationNameTEMPBIOPParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorCallExp__ArgumentAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorCallExpAccess().getArgumentBoolOpCallExpParserRuleCall_1_2_0()); }
		ruleBoolOpCallExp
		{ after(grammarAccess.getOperatorCallExpAccess().getArgumentBoolOpCallExpParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOpCallExp__OperationNameAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolOpCallExpAccess().getOperationNameBOOLOPParserRuleCall_1_0_1_0()); }
		ruleBOOLOP
		{ after(grammarAccess.getBoolOpCallExpAccess().getOperationNameBOOLOPParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOpCallExp__ArgumentAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolOpCallExpAccess().getArgumentEqOpCallExpParserRuleCall_1_1_0()); }
		ruleEqOpCallExp
		{ after(grammarAccess.getBoolOpCallExpAccess().getArgumentEqOpCallExpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqOpCallExp__OperationNameAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqOpCallExpAccess().getOperationNameEQOPParserRuleCall_1_0_1_0()); }
		ruleEQOP
		{ after(grammarAccess.getEqOpCallExpAccess().getOperationNameEQOPParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqOpCallExp__ArgumentAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqOpCallExpAccess().getArgumentRelOpCallExpParserRuleCall_1_1_0()); }
		ruleRelOpCallExp
		{ after(grammarAccess.getEqOpCallExpAccess().getArgumentRelOpCallExpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelOpCallExp__OperationNameAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelOpCallExpAccess().getOperationNameRELOPParserRuleCall_1_0_1_0()); }
		ruleRELOP
		{ after(grammarAccess.getRelOpCallExpAccess().getOperationNameRELOPParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelOpCallExp__ArgumentAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelOpCallExpAccess().getArgumentAddOpCallExpParserRuleCall_1_1_0()); }
		ruleAddOpCallExp
		{ after(grammarAccess.getRelOpCallExpAccess().getArgumentAddOpCallExpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOpCallExp__OperationNameAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddOpCallExpAccess().getOperationNameADDOPParserRuleCall_1_0_1_0()); }
		ruleADDOP
		{ after(grammarAccess.getAddOpCallExpAccess().getOperationNameADDOPParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOpCallExp__ArgumentAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddOpCallExpAccess().getArgumentIntOpCallExpParserRuleCall_1_1_0()); }
		ruleIntOpCallExp
		{ after(grammarAccess.getAddOpCallExpAccess().getArgumentIntOpCallExpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOpCallExp__OperationNameAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntOpCallExpAccess().getOperationNameINTOPParserRuleCall_1_0_1_0()); }
		ruleINTOP
		{ after(grammarAccess.getIntOpCallExpAccess().getOperationNameINTOPParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOpCallExp__ArgumentAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntOpCallExpAccess().getArgumentMulOpCallExpParserRuleCall_1_1_0()); }
		ruleMulOpCallExp
		{ after(grammarAccess.getIntOpCallExpAccess().getArgumentMulOpCallExpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOpCallExp__OperationNameAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOpCallExpAccess().getOperationNameMULOPParserRuleCall_1_0_1_0()); }
		ruleMULOP
		{ after(grammarAccess.getMulOpCallExpAccess().getOperationNameMULOPParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOpCallExp__ArgumentAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOpCallExpAccess().getArgumentNotOpCallExpParserRuleCall_1_1_0()); }
		ruleNotOpCallExp
		{ after(grammarAccess.getMulOpCallExpAccess().getArgumentNotOpCallExpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotOpCallExp__OperationNameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotOpCallExpAccess().getOperationNameUnaryOPParserRuleCall_0_0_0()); }
		ruleUnaryOP
		{ after(grammarAccess.getNotOpCallExpAccess().getOperationNameUnaryOPParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotOpCallExp__SourceAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotOpCallExpAccess().getSourceNotOpCallExpParserRuleCall_0_1_0()); }
		ruleNotOpCallExp
		{ after(grammarAccess.getNotOpCallExpAccess().getSourceNotOpCallExpParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCallExp__SourceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyCallExpAccess().getSourcePrimary_OclExpressionParserRuleCall_0_0()); }
		rulePrimary_OclExpression
		{ after(grammarAccess.getPropertyCallExpAccess().getSourcePrimary_OclExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCallExp__CallsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyCallExpAccess().getCallsPropertyCallParserRuleCall_1_0()); }
		rulePropertyCall
		{ after(grammarAccess.getPropertyCallExpAccess().getCallsPropertyCallParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableExp__ReferredVariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableExpAccess().getReferredVariableAuxiliaryCrossReference_0_0()); }
		(
			{ before(grammarAccess.getVariableExpAccess().getReferredVariableAuxiliaryIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariableExpAccess().getReferredVariableAuxiliaryIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getVariableExpAccess().getReferredVariableAuxiliaryCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__VarNameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getVarNameThisModuleKeyword_0()); }
		(
			{ before(grammarAccess.getVariableDeclarationAccess().getVarNameThisModuleKeyword_0()); }
			'thisModule'
			{ after(grammarAccess.getVariableDeclarationAccess().getVarNameThisModuleKeyword_0()); }
		)
		{ after(grammarAccess.getVariableDeclarationAccess().getVarNameThisModuleKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringExp__StringSymbolAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringExpAccess().getStringSymbolSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringExpAccess().getStringSymbolSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealExp__RealSymbolAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRealExpAccess().getRealSymbolDOUBLETerminalRuleCall_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getRealExpAccess().getRealSymbolDOUBLETerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerExp__IntegerSymbolAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerExpAccess().getIntegerSymbolINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getIntegerExpAccess().getIntegerSymbolINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagExp__ElementsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagExpAccess().getElementsOclExpressionParserRuleCall_3_0_0()); }
		ruleOclExpression
		{ after(grammarAccess.getBagExpAccess().getElementsOclExpressionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagExp__ElementsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagExpAccess().getElementsOclExpressionParserRuleCall_3_1_1_0()); }
		ruleOclExpression
		{ after(grammarAccess.getBagExpAccess().getElementsOclExpressionParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetExp__ElementsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderedSetExpAccess().getElementsOclExpressionParserRuleCall_3_0_0()); }
		ruleOclExpression
		{ after(grammarAccess.getOrderedSetExpAccess().getElementsOclExpressionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetExp__ElementsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderedSetExpAccess().getElementsOclExpressionParserRuleCall_3_1_1_0()); }
		ruleOclExpression
		{ after(grammarAccess.getOrderedSetExpAccess().getElementsOclExpressionParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExp__ElementsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceExpAccess().getElementsOclExpressionParserRuleCall_3_0_0()); }
		ruleOclExpression
		{ after(grammarAccess.getSequenceExpAccess().getElementsOclExpressionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExp__ElementsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceExpAccess().getElementsOclExpressionParserRuleCall_3_1_1_0()); }
		ruleOclExpression
		{ after(grammarAccess.getSequenceExpAccess().getElementsOclExpressionParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetExp__ElementsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetExpAccess().getElementsOclExpressionParserRuleCall_3_0_0()); }
		ruleOclExpression
		{ after(grammarAccess.getSetExpAccess().getElementsOclExpressionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetExp__ElementsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetExpAccess().getElementsOclExpressionParserRuleCall_3_1_1_0()); }
		ruleOclExpression
		{ after(grammarAccess.getSetExpAccess().getElementsOclExpressionParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleExp__TuplePartAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleExpAccess().getTuplePartTuplePartParserRuleCall_3_0_0()); }
		ruleTuplePart
		{ after(grammarAccess.getTupleExpAccess().getTuplePartTuplePartParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleExp__TuplePartAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleExpAccess().getTuplePartTuplePartParserRuleCall_3_1_1_0()); }
		ruleTuplePart
		{ after(grammarAccess.getTupleExpAccess().getTuplePartTuplePartParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePart__VarNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTuplePartAccess().getVarNameSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getTuplePartAccess().getVarNameSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePart__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTuplePartAccess().getTypeOclTypeParserRuleCall_1_1_0()); }
		ruleOclType
		{ after(grammarAccess.getTuplePartAccess().getTypeOclTypeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePart__InitExpressionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTuplePartAccess().getInitExpressionOclExpressionParserRuleCall_3_0()); }
		ruleOclExpression
		{ after(grammarAccess.getTuplePartAccess().getInitExpressionOclExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapExp__ElementsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapExpAccess().getElementsMapElementParserRuleCall_3_0_0()); }
		ruleMapElement
		{ after(grammarAccess.getMapExpAccess().getElementsMapElementParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapExp__ElementsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapExpAccess().getElementsMapElementParserRuleCall_3_1_1_0()); }
		ruleMapElement
		{ after(grammarAccess.getMapExpAccess().getElementsMapElementParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapElement__KeyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapElementAccess().getKeyOclExpressionParserRuleCall_1_0()); }
		ruleOclExpression
		{ after(grammarAccess.getMapElementAccess().getKeyOclExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapElement__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapElementAccess().getValueOclExpressionParserRuleCall_3_0()); }
		ruleOclExpression
		{ after(grammarAccess.getMapElementAccess().getValueOclExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralExp__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumLiteralExpAccess().getNameSTRINGTerminalRuleCall_1_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getEnumLiteralExpAccess().getNameSTRINGTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralExp__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumLiteralExpAccess().getNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumLiteralExpAccess().getNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExp__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetExpAccess().getVariableLocalVariableParserRuleCall_1_0()); }
		ruleLocalVariable
		{ after(grammarAccess.getLetExpAccess().getVariableLocalVariableParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExp__In_Assignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetExpAccess().getIn_OclExpressionParserRuleCall_3_0()); }
		ruleOclExpression
		{ after(grammarAccess.getLetExpAccess().getIn_OclExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpAccess().getConditionOclExpressionParserRuleCall_1_0()); }
		ruleOclExpression
		{ after(grammarAccess.getIfExpAccess().getConditionOclExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__ThenExpressionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpAccess().getThenExpressionOclExpressionParserRuleCall_3_0()); }
		ruleOclExpression
		{ after(grammarAccess.getIfExpAccess().getThenExpressionOclExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__ElseExpressionAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpAccess().getElseExpressionOclExpressionParserRuleCall_5_0()); }
		ruleOclExpression
		{ after(grammarAccess.getIfExpAccess().getElseExpressionOclExpressionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BraceExp__ExpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBraceExpAccess().getExpOclExpressionParserRuleCall_1_0()); }
		ruleOclExpression
		{ after(grammarAccess.getBraceExpAccess().getExpOclExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__BooleanSymbolAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpAccess().getBooleanSymbolTrueKeyword_0_0()); }
		(
			{ before(grammarAccess.getBooleanExpAccess().getBooleanSymbolTrueKeyword_0_0()); }
			'true'
			{ after(grammarAccess.getBooleanExpAccess().getBooleanSymbolTrueKeyword_0_0()); }
		)
		{ after(grammarAccess.getBooleanExpAccess().getBooleanSymbolTrueKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__BooleanSymbolAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpAccess().getBooleanSymbolFalseKeyword_1_0()); }
		(
			{ before(grammarAccess.getBooleanExpAccess().getBooleanSymbolFalseKeyword_1_0()); }
			'false'
			{ after(grammarAccess.getBooleanExpAccess().getBooleanSymbolFalseKeyword_1_0()); }
		)
		{ after(grammarAccess.getBooleanExpAccess().getBooleanSymbolFalseKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__OperationNameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationCallAccess().getOperationNameSTRINGTerminalRuleCall_1_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getOperationCallAccess().getOperationNameSTRINGTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__OperationNameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationCallAccess().getOperationNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getOperationCallAccess().getOperationNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__ArgumentsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationCallAccess().getArgumentsOclExpressionParserRuleCall_3_0_0()); }
		ruleOclExpression
		{ after(grammarAccess.getOperationCallAccess().getArgumentsOclExpressionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__ArgumentsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationCallAccess().getArgumentsOclExpressionParserRuleCall_3_1_1_0()); }
		ruleOclExpression
		{ after(grammarAccess.getOperationCallAccess().getArgumentsOclExpressionParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigationOrAttributeCall__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNavigationOrAttributeCallAccess().getNameSTRINGTerminalRuleCall_1_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getNavigationOrAttributeCallAccess().getNameSTRINGTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigationOrAttributeCall__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNavigationOrAttributeCallAccess().getNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getNavigationOrAttributeCallAccess().getNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__IteratorsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIterateExpAccess().getIteratorsIteratorParserRuleCall_3_0()); }
		ruleIterator
		{ after(grammarAccess.getIterateExpAccess().getIteratorsIteratorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__IteratorsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIterateExpAccess().getIteratorsIteratorParserRuleCall_4_1_0()); }
		ruleIterator
		{ after(grammarAccess.getIterateExpAccess().getIteratorsIteratorParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__ResultAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIterateExpAccess().getResultLocalVariableParserRuleCall_6_0()); }
		ruleLocalVariable
		{ after(grammarAccess.getIterateExpAccess().getResultLocalVariableParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__BodyAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIterateExpAccess().getBodyOclExpressionParserRuleCall_8_0()); }
		ruleOclExpression
		{ after(grammarAccess.getIterateExpAccess().getBodyOclExpressionParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteratorAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getIteratorAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteratorAccess().getTypeOclTypeParserRuleCall_1_1_0()); }
		ruleOclType
		{ after(grammarAccess.getIteratorAccess().getTypeOclTypeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteratorExpAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getIteratorExpAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__IteratorsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteratorExpAccess().getIteratorsIteratorParserRuleCall_3_0()); }
		ruleIterator
		{ after(grammarAccess.getIteratorExpAccess().getIteratorsIteratorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__IteratorsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteratorExpAccess().getIteratorsIteratorParserRuleCall_4_1_0()); }
		ruleIterator
		{ after(grammarAccess.getIteratorExpAccess().getIteratorsIteratorParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__BodyAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteratorExpAccess().getBodyOclExpressionParserRuleCall_6_0()); }
		ruleOclExpression
		{ after(grammarAccess.getIteratorExpAccess().getBodyOclExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__OperationNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionOperationCallAccess().getOperationNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCollectionOperationCallAccess().getOperationNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__ArgumentsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionOperationCallAccess().getArgumentsOclExpressionParserRuleCall_3_0_0()); }
		ruleOclExpression
		{ after(grammarAccess.getCollectionOperationCallAccess().getArgumentsOclExpressionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__ArgumentsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionOperationCallAccess().getArgumentsOclExpressionParserRuleCall_3_1_1_0()); }
		ruleOclExpression
		{ after(grammarAccess.getCollectionOperationCallAccess().getArgumentsOclExpressionParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalVariableAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getLocalVariableAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalVariableAccess().getTypeOclTypeParserRuleCall_1_1_0()); }
		ruleOclType
		{ after(grammarAccess.getLocalVariableAccess().getTypeOclTypeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__InitExpressionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalVariableAccess().getInitExpressionOclExpressionParserRuleCall_3_0()); }
		ruleOclExpression
		{ after(grammarAccess.getLocalVariableAccess().getInitExpressionOclExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagType__ElementTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagTypeAccess().getElementTypeOclTypeParserRuleCall_2_0()); }
		ruleOclType
		{ after(grammarAccess.getBagTypeAccess().getElementTypeOclTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetType__ElementTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderedSetTypeAccess().getElementTypeOclTypeParserRuleCall_2_0()); }
		ruleOclType
		{ after(grammarAccess.getOrderedSetTypeAccess().getElementTypeOclTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceType__ElementTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceTypeAccess().getElementTypeOclTypeParserRuleCall_2_0()); }
		ruleOclType
		{ after(grammarAccess.getSequenceTypeAccess().getElementTypeOclTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetType__ElementTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetTypeAccess().getElementTypeOclTypeParserRuleCall_2_0()); }
		ruleOclType
		{ after(grammarAccess.getSetTypeAccess().getElementTypeOclTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__AttributesAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleTypeAccess().getAttributesTupleTypeAttributeParserRuleCall_3_0_0()); }
		ruleTupleTypeAttribute
		{ after(grammarAccess.getTupleTypeAccess().getAttributesTupleTypeAttributeParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__AttributesAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleTypeAccess().getAttributesTupleTypeAttributeParserRuleCall_3_1_1_0()); }
		ruleTupleTypeAttribute
		{ after(grammarAccess.getTupleTypeAccess().getAttributesTupleTypeAttributeParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeAttribute__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleTypeAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getTupleTypeAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeAttribute__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleTypeAttributeAccess().getTypeOclTypeParserRuleCall_2_0()); }
		ruleOclType
		{ after(grammarAccess.getTupleTypeAttributeAccess().getTypeOclTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElement__ModelAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclModelElementAccess().getModelImportCrossReference_0_0()); }
		(
			{ before(grammarAccess.getOclModelElementAccess().getModelImportIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOclModelElementAccess().getModelImportIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getOclModelElementAccess().getModelImportCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElement__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclModelElementAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getOclModelElementAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__KeyTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapTypeAccess().getKeyTypeOclTypeParserRuleCall_2_0()); }
		ruleOclType
		{ after(grammarAccess.getMapTypeAccess().getKeyTypeOclTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__ValueTypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapTypeAccess().getValueTypeOclTypeParserRuleCall_4_0()); }
		ruleOclType
		{ after(grammarAccess.getMapTypeAccess().getValueTypeOclTypeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_EXT_INT : RULE_INT ('e'|'E') ('-'|'+') RULE_INT;

RULE_DOUBLE : ('-'|'+')? (RULE_INT '.' RULE_INT|'.' RULE_INT|RULE_INT '.') ('e' ('-'|'+') RULE_INT)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
