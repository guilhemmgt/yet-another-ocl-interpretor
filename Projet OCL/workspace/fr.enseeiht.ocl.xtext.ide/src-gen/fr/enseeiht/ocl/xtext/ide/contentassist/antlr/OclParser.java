/*
 * generated by Xtext
 */
package fr.enseeiht.ocl.xtext.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import fr.enseeiht.ocl.xtext.ide.contentassist.antlr.internal.InternalOclParser;
import fr.enseeiht.ocl.xtext.services.OclGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class OclParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(OclGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, OclGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getOclModuleElementAccess().getAlternatives(), "rule__OclModuleElement__Alternatives");
			builder.put(grammarAccess.getOclFeatureDefinitionAccess().getFeatureAlternatives_3_0(), "rule__OclFeatureDefinition__FeatureAlternatives_3_0");
			builder.put(grammarAccess.getOclExpressionAccess().getAlternatives(), "rule__OclExpression__Alternatives");
			builder.put(grammarAccess.getTEMPBIOPAccess().getAlternatives(), "rule__TEMPBIOP__Alternatives");
			builder.put(grammarAccess.getBOOLOPAccess().getAlternatives(), "rule__BOOLOP__Alternatives");
			builder.put(grammarAccess.getEQOPAccess().getAlternatives(), "rule__EQOP__Alternatives");
			builder.put(grammarAccess.getRELOPAccess().getAlternatives(), "rule__RELOP__Alternatives");
			builder.put(grammarAccess.getADDOPAccess().getAlternatives(), "rule__ADDOP__Alternatives");
			builder.put(grammarAccess.getINTOPAccess().getAlternatives(), "rule__INTOP__Alternatives");
			builder.put(grammarAccess.getMULOPAccess().getAlternatives(), "rule__MULOP__Alternatives");
			builder.put(grammarAccess.getNotOpCallExpAccess().getAlternatives(), "rule__NotOpCallExp__Alternatives");
			builder.put(grammarAccess.getUnaryOPAccess().getAlternatives(), "rule__UnaryOP__Alternatives");
			builder.put(grammarAccess.getUNARYTEMPOPAccess().getAlternatives(), "rule__UNARYTEMPOP__Alternatives");
			builder.put(grammarAccess.getPrimary_OclExpressionAccess().getAlternatives(), "rule__Primary_OclExpression__Alternatives");
			builder.put(grammarAccess.getAuxiliaryAccess().getAlternatives(), "rule__Auxiliary__Alternatives");
			builder.put(grammarAccess.getVariableExpAccess().getAlternatives(), "rule__VariableExp__Alternatives");
			builder.put(grammarAccess.getNumericExpAccess().getAlternatives(), "rule__NumericExp__Alternatives");
			builder.put(grammarAccess.getREALAccess().getAlternatives_2(), "rule__REAL__Alternatives_2");
			builder.put(grammarAccess.getEnumLiteralExpAccess().getAlternatives_1(), "rule__EnumLiteralExp__Alternatives_1");
			builder.put(grammarAccess.getBooleanExpAccess().getAlternatives(), "rule__BooleanExp__Alternatives");
			builder.put(grammarAccess.getPropertyCallAccess().getAlternatives(), "rule__PropertyCall__Alternatives");
			builder.put(grammarAccess.getOperationCallAccess().getAlternatives_1(), "rule__OperationCall__Alternatives_1");
			builder.put(grammarAccess.getNavigationOrAttributeCallAccess().getAlternatives_1(), "rule__NavigationOrAttributeCall__Alternatives_1");
			builder.put(grammarAccess.getOclTypeAccess().getAlternatives(), "rule__OclType__Alternatives");
			builder.put(grammarAccess.getCollectionTypeAccess().getAlternatives(), "rule__CollectionType__Alternatives");
			builder.put(grammarAccess.getPrimitiveAccess().getAlternatives(), "rule__Primitive__Alternatives");
			builder.put(grammarAccess.getNumericTypeAccess().getAlternatives(), "rule__NumericType__Alternatives");
			builder.put(grammarAccess.getTupleTypeAccess().getAlternatives_1(), "rule__TupleType__Alternatives_1");
			builder.put(grammarAccess.getModuleAccess().getGroup(), "rule__Module__Group__0");
			builder.put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
			builder.put(grammarAccess.getOclFeatureDefinitionAccess().getGroup(), "rule__OclFeatureDefinition__Group__0");
			builder.put(grammarAccess.getOclFeatureDefinitionAccess().getGroup_0(), "rule__OclFeatureDefinition__Group_0__0");
			builder.put(grammarAccess.getAttributeAccess().getGroup(), "rule__Attribute__Group__0");
			builder.put(grammarAccess.getOperationAccess().getGroup(), "rule__Operation__Group__0");
			builder.put(grammarAccess.getOperationAccess().getGroup_2(), "rule__Operation__Group_2__0");
			builder.put(grammarAccess.getOperationAccess().getGroup_2_1(), "rule__Operation__Group_2_1__0");
			builder.put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
			builder.put(grammarAccess.getOclInvariantAccess().getGroup(), "rule__OclInvariant__Group__0");
			builder.put(grammarAccess.getOclInvariantAccess().getGroup_0(), "rule__OclInvariant__Group_0__0");
			builder.put(grammarAccess.getOclModelElementExpAccess().getGroup(), "rule__OclModelElementExp__Group__0");
			builder.put(grammarAccess.getOperatorCallExpAccess().getGroup(), "rule__OperatorCallExp__Group__0");
			builder.put(grammarAccess.getOperatorCallExpAccess().getGroup_1(), "rule__OperatorCallExp__Group_1__0");
			builder.put(grammarAccess.getBoolOpCallExpAccess().getGroup(), "rule__BoolOpCallExp__Group__0");
			builder.put(grammarAccess.getBoolOpCallExpAccess().getGroup_1(), "rule__BoolOpCallExp__Group_1__0");
			builder.put(grammarAccess.getBoolOpCallExpAccess().getGroup_1_0(), "rule__BoolOpCallExp__Group_1_0__0");
			builder.put(grammarAccess.getEqOpCallExpAccess().getGroup(), "rule__EqOpCallExp__Group__0");
			builder.put(grammarAccess.getEqOpCallExpAccess().getGroup_1(), "rule__EqOpCallExp__Group_1__0");
			builder.put(grammarAccess.getEqOpCallExpAccess().getGroup_1_0(), "rule__EqOpCallExp__Group_1_0__0");
			builder.put(grammarAccess.getRelOpCallExpAccess().getGroup(), "rule__RelOpCallExp__Group__0");
			builder.put(grammarAccess.getRelOpCallExpAccess().getGroup_1(), "rule__RelOpCallExp__Group_1__0");
			builder.put(grammarAccess.getRelOpCallExpAccess().getGroup_1_0(), "rule__RelOpCallExp__Group_1_0__0");
			builder.put(grammarAccess.getAddOpCallExpAccess().getGroup(), "rule__AddOpCallExp__Group__0");
			builder.put(grammarAccess.getAddOpCallExpAccess().getGroup_1(), "rule__AddOpCallExp__Group_1__0");
			builder.put(grammarAccess.getAddOpCallExpAccess().getGroup_1_0(), "rule__AddOpCallExp__Group_1_0__0");
			builder.put(grammarAccess.getIntOpCallExpAccess().getGroup(), "rule__IntOpCallExp__Group__0");
			builder.put(grammarAccess.getIntOpCallExpAccess().getGroup_1(), "rule__IntOpCallExp__Group_1__0");
			builder.put(grammarAccess.getIntOpCallExpAccess().getGroup_1_0(), "rule__IntOpCallExp__Group_1_0__0");
			builder.put(grammarAccess.getMulOpCallExpAccess().getGroup(), "rule__MulOpCallExp__Group__0");
			builder.put(grammarAccess.getMulOpCallExpAccess().getGroup_1(), "rule__MulOpCallExp__Group_1__0");
			builder.put(grammarAccess.getMulOpCallExpAccess().getGroup_1_0(), "rule__MulOpCallExp__Group_1_0__0");
			builder.put(grammarAccess.getNotOpCallExpAccess().getGroup_0(), "rule__NotOpCallExp__Group_0__0");
			builder.put(grammarAccess.getPropertyCallExpAccess().getGroup(), "rule__PropertyCallExp__Group__0");
			builder.put(grammarAccess.getSuperExpAccess().getGroup(), "rule__SuperExp__Group__0");
			builder.put(grammarAccess.getSelfExpAccess().getGroup(), "rule__SelfExp__Group__0");
			builder.put(grammarAccess.getStringExpAccess().getGroup(), "rule__StringExp__Group__0");
			builder.put(grammarAccess.getREALAccess().getGroup(), "rule__REAL__Group__0");
			builder.put(grammarAccess.getIntegerExpAccess().getGroup(), "rule__IntegerExp__Group__0");
			builder.put(grammarAccess.getBagExpAccess().getGroup(), "rule__BagExp__Group__0");
			builder.put(grammarAccess.getBagExpAccess().getGroup_3(), "rule__BagExp__Group_3__0");
			builder.put(grammarAccess.getBagExpAccess().getGroup_3_1(), "rule__BagExp__Group_3_1__0");
			builder.put(grammarAccess.getOrderedSetExpAccess().getGroup(), "rule__OrderedSetExp__Group__0");
			builder.put(grammarAccess.getOrderedSetExpAccess().getGroup_3(), "rule__OrderedSetExp__Group_3__0");
			builder.put(grammarAccess.getOrderedSetExpAccess().getGroup_3_1(), "rule__OrderedSetExp__Group_3_1__0");
			builder.put(grammarAccess.getSequenceExpAccess().getGroup(), "rule__SequenceExp__Group__0");
			builder.put(grammarAccess.getSequenceExpAccess().getGroup_3(), "rule__SequenceExp__Group_3__0");
			builder.put(grammarAccess.getSequenceExpAccess().getGroup_3_1(), "rule__SequenceExp__Group_3_1__0");
			builder.put(grammarAccess.getSetExpAccess().getGroup(), "rule__SetExp__Group__0");
			builder.put(grammarAccess.getSetExpAccess().getGroup_3(), "rule__SetExp__Group_3__0");
			builder.put(grammarAccess.getSetExpAccess().getGroup_3_1(), "rule__SetExp__Group_3_1__0");
			builder.put(grammarAccess.getTupleExpAccess().getGroup(), "rule__TupleExp__Group__0");
			builder.put(grammarAccess.getTupleExpAccess().getGroup_3(), "rule__TupleExp__Group_3__0");
			builder.put(grammarAccess.getTupleExpAccess().getGroup_3_1(), "rule__TupleExp__Group_3_1__0");
			builder.put(grammarAccess.getTuplePartAccess().getGroup(), "rule__TuplePart__Group__0");
			builder.put(grammarAccess.getTuplePartAccess().getGroup_1(), "rule__TuplePart__Group_1__0");
			builder.put(grammarAccess.getMapExpAccess().getGroup(), "rule__MapExp__Group__0");
			builder.put(grammarAccess.getMapExpAccess().getGroup_3(), "rule__MapExp__Group_3__0");
			builder.put(grammarAccess.getMapExpAccess().getGroup_3_1(), "rule__MapExp__Group_3_1__0");
			builder.put(grammarAccess.getMapElementAccess().getGroup(), "rule__MapElement__Group__0");
			builder.put(grammarAccess.getEnumLiteralExpAccess().getGroup(), "rule__EnumLiteralExp__Group__0");
			builder.put(grammarAccess.getOclUndefinedExpAccess().getGroup(), "rule__OclUndefinedExp__Group__0");
			builder.put(grammarAccess.getLetExpAccess().getGroup(), "rule__LetExp__Group__0");
			builder.put(grammarAccess.getIfExpAccess().getGroup(), "rule__IfExp__Group__0");
			builder.put(grammarAccess.getBraceExpAccess().getGroup(), "rule__BraceExp__Group__0");
			builder.put(grammarAccess.getOperationCallAccess().getGroup(), "rule__OperationCall__Group__0");
			builder.put(grammarAccess.getOperationCallAccess().getGroup_3(), "rule__OperationCall__Group_3__0");
			builder.put(grammarAccess.getOperationCallAccess().getGroup_3_1(), "rule__OperationCall__Group_3_1__0");
			builder.put(grammarAccess.getNavigationOrAttributeCallAccess().getGroup(), "rule__NavigationOrAttributeCall__Group__0");
			builder.put(grammarAccess.getIterateExpAccess().getGroup(), "rule__IterateExp__Group__0");
			builder.put(grammarAccess.getIterateExpAccess().getGroup_4(), "rule__IterateExp__Group_4__0");
			builder.put(grammarAccess.getIteratorAccess().getGroup(), "rule__Iterator__Group__0");
			builder.put(grammarAccess.getIteratorAccess().getGroup_1(), "rule__Iterator__Group_1__0");
			builder.put(grammarAccess.getIteratorExpAccess().getGroup(), "rule__IteratorExp__Group__0");
			builder.put(grammarAccess.getIteratorExpAccess().getGroup_4(), "rule__IteratorExp__Group_4__0");
			builder.put(grammarAccess.getCollectionOperationCallAccess().getGroup(), "rule__CollectionOperationCall__Group__0");
			builder.put(grammarAccess.getCollectionOperationCallAccess().getGroup_3(), "rule__CollectionOperationCall__Group_3__0");
			builder.put(grammarAccess.getCollectionOperationCallAccess().getGroup_3_1(), "rule__CollectionOperationCall__Group_3_1__0");
			builder.put(grammarAccess.getLocalVariableAccess().getGroup(), "rule__LocalVariable__Group__0");
			builder.put(grammarAccess.getLocalVariableAccess().getGroup_1(), "rule__LocalVariable__Group_1__0");
			builder.put(grammarAccess.getBagTypeAccess().getGroup(), "rule__BagType__Group__0");
			builder.put(grammarAccess.getOrderedSetTypeAccess().getGroup(), "rule__OrderedSetType__Group__0");
			builder.put(grammarAccess.getSequenceTypeAccess().getGroup(), "rule__SequenceType__Group__0");
			builder.put(grammarAccess.getSetTypeAccess().getGroup(), "rule__SetType__Group__0");
			builder.put(grammarAccess.getStringTypeAccess().getGroup(), "rule__StringType__Group__0");
			builder.put(grammarAccess.getBooleanTypeAccess().getGroup(), "rule__BooleanType__Group__0");
			builder.put(grammarAccess.getIntegerTypeAccess().getGroup(), "rule__IntegerType__Group__0");
			builder.put(grammarAccess.getRealTypeAccess().getGroup(), "rule__RealType__Group__0");
			builder.put(grammarAccess.getOclAnyTypeAccess().getGroup(), "rule__OclAnyType__Group__0");
			builder.put(grammarAccess.getOclType_abstractContentsAccess().getGroup(), "rule__OclType_abstractContents__Group__0");
			builder.put(grammarAccess.getTupleTypeAccess().getGroup(), "rule__TupleType__Group__0");
			builder.put(grammarAccess.getTupleTypeAccess().getGroup_3(), "rule__TupleType__Group_3__0");
			builder.put(grammarAccess.getTupleTypeAccess().getGroup_3_1(), "rule__TupleType__Group_3_1__0");
			builder.put(grammarAccess.getTupleTypeAttributeAccess().getGroup(), "rule__TupleTypeAttribute__Group__0");
			builder.put(grammarAccess.getOclModelElementAccess().getGroup(), "rule__OclModelElement__Group__0");
			builder.put(grammarAccess.getMapTypeAccess().getGroup(), "rule__MapType__Group__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
			builder.put(grammarAccess.getModuleAccess().getNameAssignment_1(), "rule__Module__NameAssignment_1");
			builder.put(grammarAccess.getModuleAccess().getImportsAssignment_3(), "rule__Module__ImportsAssignment_3");
			builder.put(grammarAccess.getModuleAccess().getElementsAssignment_4(), "rule__Module__ElementsAssignment_4");
			builder.put(grammarAccess.getImportAccess().getPackageAssignment_1(), "rule__Import__PackageAssignment_1");
			builder.put(grammarAccess.getImportAccess().getNameAssignment_3(), "rule__Import__NameAssignment_3");
			builder.put(grammarAccess.getOclFeatureDefinitionAccess().getEcoreTypesAssignment_0_1(), "rule__OclFeatureDefinition__EcoreTypesAssignment_0_1");
			builder.put(grammarAccess.getOclFeatureDefinitionAccess().getClassAssignment_0_3(), "rule__OclFeatureDefinition__ClassAssignment_0_3");
			builder.put(grammarAccess.getOclFeatureDefinitionAccess().getFeatureAssignment_3(), "rule__OclFeatureDefinition__FeatureAssignment_3");
			builder.put(grammarAccess.getAttributeAccess().getNameAssignment_0(), "rule__Attribute__NameAssignment_0");
			builder.put(grammarAccess.getAttributeAccess().getTypeAssignment_2(), "rule__Attribute__TypeAssignment_2");
			builder.put(grammarAccess.getAttributeAccess().getInitExpressionAssignment_4(), "rule__Attribute__InitExpressionAssignment_4");
			builder.put(grammarAccess.getOperationAccess().getNameAssignment_0(), "rule__Operation__NameAssignment_0");
			builder.put(grammarAccess.getOperationAccess().getParametersAssignment_2_0(), "rule__Operation__ParametersAssignment_2_0");
			builder.put(grammarAccess.getOperationAccess().getParametersAssignment_2_1_1(), "rule__Operation__ParametersAssignment_2_1_1");
			builder.put(grammarAccess.getOperationAccess().getReturnTypeAssignment_5(), "rule__Operation__ReturnTypeAssignment_5");
			builder.put(grammarAccess.getOperationAccess().getBodyAssignment_7(), "rule__Operation__BodyAssignment_7");
			builder.put(grammarAccess.getParameterAccess().getNameAssignment_0(), "rule__Parameter__NameAssignment_0");
			builder.put(grammarAccess.getParameterAccess().getTypeAssignment_2(), "rule__Parameter__TypeAssignment_2");
			builder.put(grammarAccess.getOclInvariantAccess().getEcoreTypesAssignment_0_1(), "rule__OclInvariant__EcoreTypesAssignment_0_1");
			builder.put(grammarAccess.getOclInvariantAccess().getClassAssignment_0_3(), "rule__OclInvariant__ClassAssignment_0_3");
			builder.put(grammarAccess.getOclInvariantAccess().getNameAssignment_2(), "rule__OclInvariant__NameAssignment_2");
			builder.put(grammarAccess.getOclInvariantAccess().getBodyAssignment_4(), "rule__OclInvariant__BodyAssignment_4");
			builder.put(grammarAccess.getOclModelElementExpAccess().getModelAssignment_0(), "rule__OclModelElementExp__ModelAssignment_0");
			builder.put(grammarAccess.getOclModelElementExpAccess().getNameAssignment_2(), "rule__OclModelElementExp__NameAssignment_2");
			builder.put(grammarAccess.getOperatorCallExpAccess().getOperationNameAssignment_1_1(), "rule__OperatorCallExp__OperationNameAssignment_1_1");
			builder.put(grammarAccess.getOperatorCallExpAccess().getArgumentAssignment_1_2(), "rule__OperatorCallExp__ArgumentAssignment_1_2");
			builder.put(grammarAccess.getBoolOpCallExpAccess().getOperationNameAssignment_1_0_1(), "rule__BoolOpCallExp__OperationNameAssignment_1_0_1");
			builder.put(grammarAccess.getBoolOpCallExpAccess().getArgumentAssignment_1_1(), "rule__BoolOpCallExp__ArgumentAssignment_1_1");
			builder.put(grammarAccess.getEqOpCallExpAccess().getOperationNameAssignment_1_0_1(), "rule__EqOpCallExp__OperationNameAssignment_1_0_1");
			builder.put(grammarAccess.getEqOpCallExpAccess().getArgumentAssignment_1_1(), "rule__EqOpCallExp__ArgumentAssignment_1_1");
			builder.put(grammarAccess.getRelOpCallExpAccess().getOperationNameAssignment_1_0_1(), "rule__RelOpCallExp__OperationNameAssignment_1_0_1");
			builder.put(grammarAccess.getRelOpCallExpAccess().getArgumentAssignment_1_1(), "rule__RelOpCallExp__ArgumentAssignment_1_1");
			builder.put(grammarAccess.getAddOpCallExpAccess().getOperationNameAssignment_1_0_1(), "rule__AddOpCallExp__OperationNameAssignment_1_0_1");
			builder.put(grammarAccess.getAddOpCallExpAccess().getArgumentAssignment_1_1(), "rule__AddOpCallExp__ArgumentAssignment_1_1");
			builder.put(grammarAccess.getIntOpCallExpAccess().getOperationNameAssignment_1_0_1(), "rule__IntOpCallExp__OperationNameAssignment_1_0_1");
			builder.put(grammarAccess.getIntOpCallExpAccess().getArgumentAssignment_1_1(), "rule__IntOpCallExp__ArgumentAssignment_1_1");
			builder.put(grammarAccess.getMulOpCallExpAccess().getOperationNameAssignment_1_0_1(), "rule__MulOpCallExp__OperationNameAssignment_1_0_1");
			builder.put(grammarAccess.getMulOpCallExpAccess().getArgumentAssignment_1_1(), "rule__MulOpCallExp__ArgumentAssignment_1_1");
			builder.put(grammarAccess.getNotOpCallExpAccess().getOperationNameAssignment_0_0(), "rule__NotOpCallExp__OperationNameAssignment_0_0");
			builder.put(grammarAccess.getNotOpCallExpAccess().getSourceAssignment_0_1(), "rule__NotOpCallExp__SourceAssignment_0_1");
			builder.put(grammarAccess.getPropertyCallExpAccess().getSourceAssignment_0(), "rule__PropertyCallExp__SourceAssignment_0");
			builder.put(grammarAccess.getPropertyCallExpAccess().getCallsAssignment_1(), "rule__PropertyCallExp__CallsAssignment_1");
			builder.put(grammarAccess.getVariableExpAccess().getReferredVariableAssignment_0(), "rule__VariableExp__ReferredVariableAssignment_0");
			builder.put(grammarAccess.getVariableDeclarationAccess().getVarNameAssignment(), "rule__VariableDeclaration__VarNameAssignment");
			builder.put(grammarAccess.getStringExpAccess().getStringSymbolAssignment_1(), "rule__StringExp__StringSymbolAssignment_1");
			builder.put(grammarAccess.getRealExpAccess().getRealSymbolAssignment(), "rule__RealExp__RealSymbolAssignment");
			builder.put(grammarAccess.getIntegerExpAccess().getIntegerSymbolAssignment_1(), "rule__IntegerExp__IntegerSymbolAssignment_1");
			builder.put(grammarAccess.getBagExpAccess().getElementsAssignment_3_0(), "rule__BagExp__ElementsAssignment_3_0");
			builder.put(grammarAccess.getBagExpAccess().getElementsAssignment_3_1_1(), "rule__BagExp__ElementsAssignment_3_1_1");
			builder.put(grammarAccess.getOrderedSetExpAccess().getElementsAssignment_3_0(), "rule__OrderedSetExp__ElementsAssignment_3_0");
			builder.put(grammarAccess.getOrderedSetExpAccess().getElementsAssignment_3_1_1(), "rule__OrderedSetExp__ElementsAssignment_3_1_1");
			builder.put(grammarAccess.getSequenceExpAccess().getElementsAssignment_3_0(), "rule__SequenceExp__ElementsAssignment_3_0");
			builder.put(grammarAccess.getSequenceExpAccess().getElementsAssignment_3_1_1(), "rule__SequenceExp__ElementsAssignment_3_1_1");
			builder.put(grammarAccess.getSetExpAccess().getElementsAssignment_3_0(), "rule__SetExp__ElementsAssignment_3_0");
			builder.put(grammarAccess.getSetExpAccess().getElementsAssignment_3_1_1(), "rule__SetExp__ElementsAssignment_3_1_1");
			builder.put(grammarAccess.getTupleExpAccess().getTuplePartAssignment_3_0(), "rule__TupleExp__TuplePartAssignment_3_0");
			builder.put(grammarAccess.getTupleExpAccess().getTuplePartAssignment_3_1_1(), "rule__TupleExp__TuplePartAssignment_3_1_1");
			builder.put(grammarAccess.getTuplePartAccess().getVarNameAssignment_0(), "rule__TuplePart__VarNameAssignment_0");
			builder.put(grammarAccess.getTuplePartAccess().getTypeAssignment_1_1(), "rule__TuplePart__TypeAssignment_1_1");
			builder.put(grammarAccess.getTuplePartAccess().getInitExpressionAssignment_3(), "rule__TuplePart__InitExpressionAssignment_3");
			builder.put(grammarAccess.getMapExpAccess().getElementsAssignment_3_0(), "rule__MapExp__ElementsAssignment_3_0");
			builder.put(grammarAccess.getMapExpAccess().getElementsAssignment_3_1_1(), "rule__MapExp__ElementsAssignment_3_1_1");
			builder.put(grammarAccess.getMapElementAccess().getKeyAssignment_1(), "rule__MapElement__KeyAssignment_1");
			builder.put(grammarAccess.getMapElementAccess().getValueAssignment_3(), "rule__MapElement__ValueAssignment_3");
			builder.put(grammarAccess.getEnumLiteralExpAccess().getNameAssignment_1_0(), "rule__EnumLiteralExp__NameAssignment_1_0");
			builder.put(grammarAccess.getEnumLiteralExpAccess().getNameAssignment_1_1(), "rule__EnumLiteralExp__NameAssignment_1_1");
			builder.put(grammarAccess.getLetExpAccess().getVariableAssignment_1(), "rule__LetExp__VariableAssignment_1");
			builder.put(grammarAccess.getLetExpAccess().getIn_Assignment_3(), "rule__LetExp__In_Assignment_3");
			builder.put(grammarAccess.getIfExpAccess().getConditionAssignment_1(), "rule__IfExp__ConditionAssignment_1");
			builder.put(grammarAccess.getIfExpAccess().getThenExpressionAssignment_3(), "rule__IfExp__ThenExpressionAssignment_3");
			builder.put(grammarAccess.getIfExpAccess().getElseExpressionAssignment_5(), "rule__IfExp__ElseExpressionAssignment_5");
			builder.put(grammarAccess.getBraceExpAccess().getExpAssignment_1(), "rule__BraceExp__ExpAssignment_1");
			builder.put(grammarAccess.getBooleanExpAccess().getBooleanSymbolAssignment_0(), "rule__BooleanExp__BooleanSymbolAssignment_0");
			builder.put(grammarAccess.getBooleanExpAccess().getBooleanSymbolAssignment_1(), "rule__BooleanExp__BooleanSymbolAssignment_1");
			builder.put(grammarAccess.getOperationCallAccess().getOperationNameAssignment_1_0(), "rule__OperationCall__OperationNameAssignment_1_0");
			builder.put(grammarAccess.getOperationCallAccess().getOperationNameAssignment_1_1(), "rule__OperationCall__OperationNameAssignment_1_1");
			builder.put(grammarAccess.getOperationCallAccess().getArgumentsAssignment_3_0(), "rule__OperationCall__ArgumentsAssignment_3_0");
			builder.put(grammarAccess.getOperationCallAccess().getArgumentsAssignment_3_1_1(), "rule__OperationCall__ArgumentsAssignment_3_1_1");
			builder.put(grammarAccess.getNavigationOrAttributeCallAccess().getNameAssignment_1_0(), "rule__NavigationOrAttributeCall__NameAssignment_1_0");
			builder.put(grammarAccess.getNavigationOrAttributeCallAccess().getNameAssignment_1_1(), "rule__NavigationOrAttributeCall__NameAssignment_1_1");
			builder.put(grammarAccess.getIterateExpAccess().getIteratorsAssignment_3(), "rule__IterateExp__IteratorsAssignment_3");
			builder.put(grammarAccess.getIterateExpAccess().getIteratorsAssignment_4_1(), "rule__IterateExp__IteratorsAssignment_4_1");
			builder.put(grammarAccess.getIterateExpAccess().getResultAssignment_6(), "rule__IterateExp__ResultAssignment_6");
			builder.put(grammarAccess.getIterateExpAccess().getBodyAssignment_8(), "rule__IterateExp__BodyAssignment_8");
			builder.put(grammarAccess.getIteratorAccess().getNameAssignment_0(), "rule__Iterator__NameAssignment_0");
			builder.put(grammarAccess.getIteratorAccess().getTypeAssignment_1_1(), "rule__Iterator__TypeAssignment_1_1");
			builder.put(grammarAccess.getIteratorExpAccess().getNameAssignment_1(), "rule__IteratorExp__NameAssignment_1");
			builder.put(grammarAccess.getIteratorExpAccess().getIteratorsAssignment_3(), "rule__IteratorExp__IteratorsAssignment_3");
			builder.put(grammarAccess.getIteratorExpAccess().getIteratorsAssignment_4_1(), "rule__IteratorExp__IteratorsAssignment_4_1");
			builder.put(grammarAccess.getIteratorExpAccess().getBodyAssignment_6(), "rule__IteratorExp__BodyAssignment_6");
			builder.put(grammarAccess.getCollectionOperationCallAccess().getOperationNameAssignment_1(), "rule__CollectionOperationCall__OperationNameAssignment_1");
			builder.put(grammarAccess.getCollectionOperationCallAccess().getArgumentsAssignment_3_0(), "rule__CollectionOperationCall__ArgumentsAssignment_3_0");
			builder.put(grammarAccess.getCollectionOperationCallAccess().getArgumentsAssignment_3_1_1(), "rule__CollectionOperationCall__ArgumentsAssignment_3_1_1");
			builder.put(grammarAccess.getLocalVariableAccess().getNameAssignment_0(), "rule__LocalVariable__NameAssignment_0");
			builder.put(grammarAccess.getLocalVariableAccess().getTypeAssignment_1_1(), "rule__LocalVariable__TypeAssignment_1_1");
			builder.put(grammarAccess.getLocalVariableAccess().getInitExpressionAssignment_3(), "rule__LocalVariable__InitExpressionAssignment_3");
			builder.put(grammarAccess.getBagTypeAccess().getElementTypeAssignment_2(), "rule__BagType__ElementTypeAssignment_2");
			builder.put(grammarAccess.getOrderedSetTypeAccess().getElementTypeAssignment_2(), "rule__OrderedSetType__ElementTypeAssignment_2");
			builder.put(grammarAccess.getSequenceTypeAccess().getElementTypeAssignment_2(), "rule__SequenceType__ElementTypeAssignment_2");
			builder.put(grammarAccess.getSetTypeAccess().getElementTypeAssignment_2(), "rule__SetType__ElementTypeAssignment_2");
			builder.put(grammarAccess.getTupleTypeAccess().getAttributesAssignment_3_0(), "rule__TupleType__AttributesAssignment_3_0");
			builder.put(grammarAccess.getTupleTypeAccess().getAttributesAssignment_3_1_1(), "rule__TupleType__AttributesAssignment_3_1_1");
			builder.put(grammarAccess.getTupleTypeAttributeAccess().getNameAssignment_0(), "rule__TupleTypeAttribute__NameAssignment_0");
			builder.put(grammarAccess.getTupleTypeAttributeAccess().getTypeAssignment_2(), "rule__TupleTypeAttribute__TypeAssignment_2");
			builder.put(grammarAccess.getOclModelElementAccess().getModelAssignment_0(), "rule__OclModelElement__ModelAssignment_0");
			builder.put(grammarAccess.getOclModelElementAccess().getNameAssignment_2(), "rule__OclModelElement__NameAssignment_2");
			builder.put(grammarAccess.getMapTypeAccess().getKeyTypeAssignment_2(), "rule__MapType__KeyTypeAssignment_2");
			builder.put(grammarAccess.getMapTypeAccess().getValueTypeAssignment_4(), "rule__MapType__ValueTypeAssignment_4");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private OclGrammarAccess grammarAccess;

	@Override
	protected InternalOclParser createParser() {
		InternalOclParser result = new InternalOclParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public OclGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(OclGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
