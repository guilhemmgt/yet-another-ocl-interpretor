/*
 * generated by Xtext
 */
grammar InternalOcl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.enseeiht.ocl.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.enseeiht.ocl.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.enseeiht.ocl.xtext.services.OclGrammarAccess;

}
@parser::members {
	private OclGrammarAccess grammarAccess;

	public void setGrammarAccess(OclGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModule
entryRuleModule
:
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModuleAccess().getGroup()); }
		(rule__Module__Group__0)
		{ after(grammarAccess.getModuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOclContextBlock
entryRuleOclContextBlock
:
{ before(grammarAccess.getOclContextBlockRule()); }
	 ruleOclContextBlock
{ after(grammarAccess.getOclContextBlockRule()); } 
	 EOF 
;

// Rule OclContextBlock
ruleOclContextBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOclContextBlockAccess().getGroup()); }
		(rule__OclContextBlock__Group__0)
		{ after(grammarAccess.getOclContextBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOclFeatureDefinition
entryRuleOclFeatureDefinition
:
{ before(grammarAccess.getOclFeatureDefinitionRule()); }
	 ruleOclFeatureDefinition
{ after(grammarAccess.getOclFeatureDefinitionRule()); } 
	 EOF 
;

// Rule OclFeatureDefinition
ruleOclFeatureDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOclFeatureDefinitionAccess().getGroup()); }
		(rule__OclFeatureDefinition__Group__0)
		{ after(grammarAccess.getOclFeatureDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup()); }
		(rule__Attribute__Group__0)
		{ after(grammarAccess.getAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperation
entryRuleOperation
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationAccess().getGroup()); }
		(rule__Operation__Group__0)
		{ after(grammarAccess.getOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOclInvariant
entryRuleOclInvariant
:
{ before(grammarAccess.getOclInvariantRule()); }
	 ruleOclInvariant
{ after(grammarAccess.getOclInvariantRule()); } 
	 EOF 
;

// Rule OclInvariant
ruleOclInvariant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOclInvariantAccess().getGroup()); }
		(rule__OclInvariant__Group__0)
		{ after(grammarAccess.getOclInvariantAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOclExpression
entryRuleOclExpression
:
{ before(grammarAccess.getOclExpressionRule()); }
	 ruleOclExpression
{ after(grammarAccess.getOclExpressionRule()); } 
	 EOF 
;

// Rule OclExpression
ruleOclExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOclExpressionAccess().getAlternatives()); }
		(rule__OclExpression__Alternatives)
		{ after(grammarAccess.getOclExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOclModelElementExp
entryRuleOclModelElementExp
:
{ before(grammarAccess.getOclModelElementExpRule()); }
	 ruleOclModelElementExp
{ after(grammarAccess.getOclModelElementExpRule()); } 
	 EOF 
;

// Rule OclModelElementExp
ruleOclModelElementExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOclModelElementExpAccess().getGroup()); }
		(rule__OclModelElementExp__Group__0)
		{ after(grammarAccess.getOclModelElementExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperatorCallExp
entryRuleOperatorCallExp
:
{ before(grammarAccess.getOperatorCallExpRule()); }
	 ruleOperatorCallExp
{ after(grammarAccess.getOperatorCallExpRule()); } 
	 EOF 
;

// Rule OperatorCallExp
ruleOperatorCallExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperatorCallExpAccess().getGroup()); }
		(rule__OperatorCallExp__Group__0)
		{ after(grammarAccess.getOperatorCallExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBOOLOP
entryRuleBOOLOP
:
{ before(grammarAccess.getBOOLOPRule()); }
	 ruleBOOLOP
{ after(grammarAccess.getBOOLOPRule()); } 
	 EOF 
;

// Rule BOOLOP
ruleBOOLOP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBOOLOPAccess().getAlternatives()); }
		(rule__BOOLOP__Alternatives)
		{ after(grammarAccess.getBOOLOPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqOpCallExp
entryRuleEqOpCallExp
:
{ before(grammarAccess.getEqOpCallExpRule()); }
	 ruleEqOpCallExp
{ after(grammarAccess.getEqOpCallExpRule()); } 
	 EOF 
;

// Rule EqOpCallExp
ruleEqOpCallExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqOpCallExpAccess().getGroup()); }
		(rule__EqOpCallExp__Group__0)
		{ after(grammarAccess.getEqOpCallExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEQOP
entryRuleEQOP
:
{ before(grammarAccess.getEQOPRule()); }
	 ruleEQOP
{ after(grammarAccess.getEQOPRule()); } 
	 EOF 
;

// Rule EQOP
ruleEQOP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEQOPAccess().getAlternatives()); }
		(rule__EQOP__Alternatives)
		{ after(grammarAccess.getEQOPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelOpCallExp
entryRuleRelOpCallExp
:
{ before(grammarAccess.getRelOpCallExpRule()); }
	 ruleRelOpCallExp
{ after(grammarAccess.getRelOpCallExpRule()); } 
	 EOF 
;

// Rule RelOpCallExp
ruleRelOpCallExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelOpCallExpAccess().getGroup()); }
		(rule__RelOpCallExp__Group__0)
		{ after(grammarAccess.getRelOpCallExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRELOP
entryRuleRELOP
:
{ before(grammarAccess.getRELOPRule()); }
	 ruleRELOP
{ after(grammarAccess.getRELOPRule()); } 
	 EOF 
;

// Rule RELOP
ruleRELOP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRELOPAccess().getAlternatives()); }
		(rule__RELOP__Alternatives)
		{ after(grammarAccess.getRELOPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddOpCallExp
entryRuleAddOpCallExp
:
{ before(grammarAccess.getAddOpCallExpRule()); }
	 ruleAddOpCallExp
{ after(grammarAccess.getAddOpCallExpRule()); } 
	 EOF 
;

// Rule AddOpCallExp
ruleAddOpCallExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddOpCallExpAccess().getGroup()); }
		(rule__AddOpCallExp__Group__0)
		{ after(grammarAccess.getAddOpCallExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleADDOP
entryRuleADDOP
:
{ before(grammarAccess.getADDOPRule()); }
	 ruleADDOP
{ after(grammarAccess.getADDOPRule()); } 
	 EOF 
;

// Rule ADDOP
ruleADDOP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getADDOPAccess().getAlternatives()); }
		(rule__ADDOP__Alternatives)
		{ after(grammarAccess.getADDOPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntOpCallExp
entryRuleIntOpCallExp
:
{ before(grammarAccess.getIntOpCallExpRule()); }
	 ruleIntOpCallExp
{ after(grammarAccess.getIntOpCallExpRule()); } 
	 EOF 
;

// Rule IntOpCallExp
ruleIntOpCallExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntOpCallExpAccess().getGroup()); }
		(rule__IntOpCallExp__Group__0)
		{ after(grammarAccess.getIntOpCallExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleINTOP
entryRuleINTOP
:
{ before(grammarAccess.getINTOPRule()); }
	 ruleINTOP
{ after(grammarAccess.getINTOPRule()); } 
	 EOF 
;

// Rule INTOP
ruleINTOP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getINTOPAccess().getAlternatives()); }
		(rule__INTOP__Alternatives)
		{ after(grammarAccess.getINTOPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMulOpCallExp
entryRuleMulOpCallExp
:
{ before(grammarAccess.getMulOpCallExpRule()); }
	 ruleMulOpCallExp
{ after(grammarAccess.getMulOpCallExpRule()); } 
	 EOF 
;

// Rule MulOpCallExp
ruleMulOpCallExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMulOpCallExpAccess().getGroup()); }
		(rule__MulOpCallExp__Group__0)
		{ after(grammarAccess.getMulOpCallExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMULOP
entryRuleMULOP
:
{ before(grammarAccess.getMULOPRule()); }
	 ruleMULOP
{ after(grammarAccess.getMULOPRule()); } 
	 EOF 
;

// Rule MULOP
ruleMULOP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMULOPAccess().getAlternatives()); }
		(rule__MULOP__Alternatives)
		{ after(grammarAccess.getMULOPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNotOpCallExp
entryRuleNotOpCallExp
:
{ before(grammarAccess.getNotOpCallExpRule()); }
	 ruleNotOpCallExp
{ after(grammarAccess.getNotOpCallExpRule()); } 
	 EOF 
;

// Rule NotOpCallExp
ruleNotOpCallExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotOpCallExpAccess().getAlternatives()); }
		(rule__NotOpCallExp__Alternatives)
		{ after(grammarAccess.getNotOpCallExpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUNARYOP
entryRuleUNARYOP
:
{ before(grammarAccess.getUNARYOPRule()); }
	 ruleUNARYOP
{ after(grammarAccess.getUNARYOPRule()); } 
	 EOF 
;

// Rule UNARYOP
ruleUNARYOP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUNARYOPAccess().getAlternatives()); }
		(rule__UNARYOP__Alternatives)
		{ after(grammarAccess.getUNARYOPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertyCallExp
entryRulePropertyCallExp
:
{ before(grammarAccess.getPropertyCallExpRule()); }
	 rulePropertyCallExp
{ after(grammarAccess.getPropertyCallExpRule()); } 
	 EOF 
;

// Rule PropertyCallExp
rulePropertyCallExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyCallExpAccess().getGroup()); }
		(rule__PropertyCallExp__Group__0)
		{ after(grammarAccess.getPropertyCallExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary_OclExpression
entryRulePrimary_OclExpression
:
{ before(grammarAccess.getPrimary_OclExpressionRule()); }
	 rulePrimary_OclExpression
{ after(grammarAccess.getPrimary_OclExpressionRule()); } 
	 EOF 
;

// Rule Primary_OclExpression
rulePrimary_OclExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getAlternatives()); }
		(rule__Primary_OclExpression__Alternatives)
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableExp
entryRuleVariableExp
:
{ before(grammarAccess.getVariableExpRule()); }
	 ruleVariableExp
{ after(grammarAccess.getVariableExpRule()); } 
	 EOF 
;

// Rule VariableExp
ruleVariableExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableExpAccess().getReferredVariableAssignment()); }
		(rule__VariableExp__ReferredVariableAssignment)
		{ after(grammarAccess.getVariableExpAccess().getReferredVariableAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelfLiteralExp
entryRuleSelfLiteralExp
:
{ before(grammarAccess.getSelfLiteralExpRule()); }
	 ruleSelfLiteralExp
{ after(grammarAccess.getSelfLiteralExpRule()); } 
	 EOF 
;

// Rule SelfLiteralExp
ruleSelfLiteralExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelfLiteralExpAccess().getGroup()); }
		(rule__SelfLiteralExp__Group__0)
		{ after(grammarAccess.getSelfLiteralExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNullLiteralExp
entryRuleNullLiteralExp
:
{ before(grammarAccess.getNullLiteralExpRule()); }
	 ruleNullLiteralExp
{ after(grammarAccess.getNullLiteralExpRule()); } 
	 EOF 
;

// Rule NullLiteralExp
ruleNullLiteralExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNullLiteralExpAccess().getGroup()); }
		(rule__NullLiteralExp__Group__0)
		{ after(grammarAccess.getNullLiteralExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringLiteralExp
entryRuleStringLiteralExp
:
{ before(grammarAccess.getStringLiteralExpRule()); }
	 ruleStringLiteralExp
{ after(grammarAccess.getStringLiteralExpRule()); } 
	 EOF 
;

// Rule StringLiteralExp
ruleStringLiteralExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringLiteralExpAccess().getGroup()); }
		(rule__StringLiteralExp__Group__0)
		{ after(grammarAccess.getStringLiteralExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericLiteralExp
entryRuleNumericLiteralExp
:
{ before(grammarAccess.getNumericLiteralExpRule()); }
	 ruleNumericLiteralExp
{ after(grammarAccess.getNumericLiteralExpRule()); } 
	 EOF 
;

// Rule NumericLiteralExp
ruleNumericLiteralExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericLiteralExpAccess().getAlternatives()); }
		(rule__NumericLiteralExp__Alternatives)
		{ after(grammarAccess.getNumericLiteralExpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRealLiteralExp
entryRuleRealLiteralExp
:
{ before(grammarAccess.getRealLiteralExpRule()); }
	 ruleRealLiteralExp
{ after(grammarAccess.getRealLiteralExpRule()); } 
	 EOF 
;

// Rule RealLiteralExp
ruleRealLiteralExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRealLiteralExpAccess().getRealSymbolAssignment()); }
		(rule__RealLiteralExp__RealSymbolAssignment)
		{ after(grammarAccess.getRealLiteralExpAccess().getRealSymbolAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerLiteralExp
entryRuleIntegerLiteralExp
:
{ before(grammarAccess.getIntegerLiteralExpRule()); }
	 ruleIntegerLiteralExp
{ after(grammarAccess.getIntegerLiteralExpRule()); } 
	 EOF 
;

// Rule IntegerLiteralExp
ruleIntegerLiteralExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerLiteralExpAccess().getGroup()); }
		(rule__IntegerLiteralExp__Group__0)
		{ after(grammarAccess.getIntegerLiteralExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBagLiteralExp
entryRuleBagLiteralExp
:
{ before(grammarAccess.getBagLiteralExpRule()); }
	 ruleBagLiteralExp
{ after(grammarAccess.getBagLiteralExpRule()); } 
	 EOF 
;

// Rule BagLiteralExp
ruleBagLiteralExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBagLiteralExpAccess().getGroup()); }
		(rule__BagLiteralExp__Group__0)
		{ after(grammarAccess.getBagLiteralExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrderedSetLiteralExp
entryRuleOrderedSetLiteralExp
:
{ before(grammarAccess.getOrderedSetLiteralExpRule()); }
	 ruleOrderedSetLiteralExp
{ after(grammarAccess.getOrderedSetLiteralExpRule()); } 
	 EOF 
;

// Rule OrderedSetLiteralExp
ruleOrderedSetLiteralExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrderedSetLiteralExpAccess().getGroup()); }
		(rule__OrderedSetLiteralExp__Group__0)
		{ after(grammarAccess.getOrderedSetLiteralExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSequenceLiteralExp
entryRuleSequenceLiteralExp
:
{ before(grammarAccess.getSequenceLiteralExpRule()); }
	 ruleSequenceLiteralExp
{ after(grammarAccess.getSequenceLiteralExpRule()); } 
	 EOF 
;

// Rule SequenceLiteralExp
ruleSequenceLiteralExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSequenceLiteralExpAccess().getGroup()); }
		(rule__SequenceLiteralExp__Group__0)
		{ after(grammarAccess.getSequenceLiteralExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetLiteralExp
entryRuleSetLiteralExp
:
{ before(grammarAccess.getSetLiteralExpRule()); }
	 ruleSetLiteralExp
{ after(grammarAccess.getSetLiteralExpRule()); } 
	 EOF 
;

// Rule SetLiteralExp
ruleSetLiteralExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetLiteralExpAccess().getGroup()); }
		(rule__SetLiteralExp__Group__0)
		{ after(grammarAccess.getSetLiteralExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTupleLiteralExp
entryRuleTupleLiteralExp
:
{ before(grammarAccess.getTupleLiteralExpRule()); }
	 ruleTupleLiteralExp
{ after(grammarAccess.getTupleLiteralExpRule()); } 
	 EOF 
;

// Rule TupleLiteralExp
ruleTupleLiteralExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTupleLiteralExpAccess().getGroup()); }
		(rule__TupleLiteralExp__Group__0)
		{ after(grammarAccess.getTupleLiteralExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTuplePart
entryRuleTuplePart
:
{ before(grammarAccess.getTuplePartRule()); }
	 ruleTuplePart
{ after(grammarAccess.getTuplePartRule()); } 
	 EOF 
;

// Rule TuplePart
ruleTuplePart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTuplePartAccess().getGroup()); }
		(rule__TuplePart__Group__0)
		{ after(grammarAccess.getTuplePartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapLiteralExp
entryRuleMapLiteralExp
:
{ before(grammarAccess.getMapLiteralExpRule()); }
	 ruleMapLiteralExp
{ after(grammarAccess.getMapLiteralExpRule()); } 
	 EOF 
;

// Rule MapLiteralExp
ruleMapLiteralExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapLiteralExpAccess().getGroup()); }
		(rule__MapLiteralExp__Group__0)
		{ after(grammarAccess.getMapLiteralExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapElement
entryRuleMapElement
:
{ before(grammarAccess.getMapElementRule()); }
	 ruleMapElement
{ after(grammarAccess.getMapElementRule()); } 
	 EOF 
;

// Rule MapElement
ruleMapElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapElementAccess().getGroup()); }
		(rule__MapElement__Group__0)
		{ after(grammarAccess.getMapElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumLiteralExp
entryRuleEnumLiteralExp
:
{ before(grammarAccess.getEnumLiteralExpRule()); }
	 ruleEnumLiteralExp
{ after(grammarAccess.getEnumLiteralExpRule()); } 
	 EOF 
;

// Rule EnumLiteralExp
ruleEnumLiteralExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumLiteralExpAccess().getGroup()); }
		(rule__EnumLiteralExp__Group__0)
		{ after(grammarAccess.getEnumLiteralExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLetExp
entryRuleLetExp
:
{ before(grammarAccess.getLetExpRule()); }
	 ruleLetExp
{ after(grammarAccess.getLetExpRule()); } 
	 EOF 
;

// Rule LetExp
ruleLetExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLetExpAccess().getGroup()); }
		(rule__LetExp__Group__0)
		{ after(grammarAccess.getLetExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfExp
entryRuleIfExp
:
{ before(grammarAccess.getIfExpRule()); }
	 ruleIfExp
{ after(grammarAccess.getIfExpRule()); } 
	 EOF 
;

// Rule IfExp
ruleIfExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfExpAccess().getGroup()); }
		(rule__IfExp__Group__0)
		{ after(grammarAccess.getIfExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBraceExp
entryRuleBraceExp
:
{ before(grammarAccess.getBraceExpRule()); }
	 ruleBraceExp
{ after(grammarAccess.getBraceExpRule()); } 
	 EOF 
;

// Rule BraceExp
ruleBraceExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBraceExpAccess().getGroup()); }
		(rule__BraceExp__Group__0)
		{ after(grammarAccess.getBraceExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContextlessCallExp
entryRuleContextlessCallExp
:
{ before(grammarAccess.getContextlessCallExpRule()); }
	 ruleContextlessCallExp
{ after(grammarAccess.getContextlessCallExpRule()); } 
	 EOF 
;

// Rule ContextlessCallExp
ruleContextlessCallExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContextlessCallExpAccess().getGroup()); }
		(rule__ContextlessCallExp__Group__0)
		{ after(grammarAccess.getContextlessCallExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanLiteralExp
entryRuleBooleanLiteralExp
:
{ before(grammarAccess.getBooleanLiteralExpRule()); }
	 ruleBooleanLiteralExp
{ after(grammarAccess.getBooleanLiteralExpRule()); } 
	 EOF 
;

// Rule BooleanLiteralExp
ruleBooleanLiteralExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanLiteralExpAccess().getAlternatives()); }
		(rule__BooleanLiteralExp__Alternatives)
		{ after(grammarAccess.getBooleanLiteralExpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertyCall
entryRulePropertyCall
:
{ before(grammarAccess.getPropertyCallRule()); }
	 rulePropertyCall
{ after(grammarAccess.getPropertyCallRule()); } 
	 EOF 
;

// Rule PropertyCall
rulePropertyCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyCallAccess().getAlternatives()); }
		(rule__PropertyCall__Alternatives)
		{ after(grammarAccess.getPropertyCallAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationCall
entryRuleOperationCall
:
{ before(grammarAccess.getOperationCallRule()); }
	 ruleOperationCall
{ after(grammarAccess.getOperationCallRule()); } 
	 EOF 
;

// Rule OperationCall
ruleOperationCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationCallAccess().getGroup()); }
		(rule__OperationCall__Group__0)
		{ after(grammarAccess.getOperationCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNavigationOrAttributeCall
entryRuleNavigationOrAttributeCall
:
{ before(grammarAccess.getNavigationOrAttributeCallRule()); }
	 ruleNavigationOrAttributeCall
{ after(grammarAccess.getNavigationOrAttributeCallRule()); } 
	 EOF 
;

// Rule NavigationOrAttributeCall
ruleNavigationOrAttributeCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNavigationOrAttributeCallAccess().getGroup()); }
		(rule__NavigationOrAttributeCall__Group__0)
		{ after(grammarAccess.getNavigationOrAttributeCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIterateExp
entryRuleIterateExp
:
{ before(grammarAccess.getIterateExpRule()); }
	 ruleIterateExp
{ after(grammarAccess.getIterateExpRule()); } 
	 EOF 
;

// Rule IterateExp
ruleIterateExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIterateExpAccess().getGroup()); }
		(rule__IterateExp__Group__0)
		{ after(grammarAccess.getIterateExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIterator
entryRuleIterator
:
{ before(grammarAccess.getIteratorRule()); }
	 ruleIterator
{ after(grammarAccess.getIteratorRule()); } 
	 EOF 
;

// Rule Iterator
ruleIterator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIteratorAccess().getGroup()); }
		(rule__Iterator__Group__0)
		{ after(grammarAccess.getIteratorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIteratorExp
entryRuleIteratorExp
:
{ before(grammarAccess.getIteratorExpRule()); }
	 ruleIteratorExp
{ after(grammarAccess.getIteratorExpRule()); } 
	 EOF 
;

// Rule IteratorExp
ruleIteratorExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIteratorExpAccess().getGroup()); }
		(rule__IteratorExp__Group__0)
		{ after(grammarAccess.getIteratorExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCollectionOperationCall
entryRuleCollectionOperationCall
:
{ before(grammarAccess.getCollectionOperationCallRule()); }
	 ruleCollectionOperationCall
{ after(grammarAccess.getCollectionOperationCallRule()); } 
	 EOF 
;

// Rule CollectionOperationCall
ruleCollectionOperationCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCollectionOperationCallAccess().getGroup()); }
		(rule__CollectionOperationCall__Group__0)
		{ after(grammarAccess.getCollectionOperationCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocalVariable
entryRuleLocalVariable
:
{ before(grammarAccess.getLocalVariableRule()); }
	 ruleLocalVariable
{ after(grammarAccess.getLocalVariableRule()); } 
	 EOF 
;

// Rule LocalVariable
ruleLocalVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocalVariableAccess().getGroup()); }
		(rule__LocalVariable__Group__0)
		{ after(grammarAccess.getLocalVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOclTypeLiteral
entryRuleOclTypeLiteral
:
{ before(grammarAccess.getOclTypeLiteralRule()); }
	 ruleOclTypeLiteral
{ after(grammarAccess.getOclTypeLiteralRule()); } 
	 EOF 
;

// Rule OclTypeLiteral
ruleOclTypeLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOclTypeLiteralAccess().getAlternatives()); }
		(rule__OclTypeLiteral__Alternatives)
		{ after(grammarAccess.getOclTypeLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCollectionTypeLiteral
entryRuleCollectionTypeLiteral
:
{ before(grammarAccess.getCollectionTypeLiteralRule()); }
	 ruleCollectionTypeLiteral
{ after(grammarAccess.getCollectionTypeLiteralRule()); } 
	 EOF 
;

// Rule CollectionTypeLiteral
ruleCollectionTypeLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCollectionTypeLiteralAccess().getAlternatives()); }
		(rule__CollectionTypeLiteral__Alternatives)
		{ after(grammarAccess.getCollectionTypeLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCollectionType
entryRuleCollectionType
:
{ before(grammarAccess.getCollectionTypeRule()); }
	 ruleCollectionType
{ after(grammarAccess.getCollectionTypeRule()); } 
	 EOF 
;

// Rule CollectionType
ruleCollectionType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCollectionTypeAccess().getGroup()); }
		(rule__CollectionType__Group__0)
		{ after(grammarAccess.getCollectionTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBagType
entryRuleBagType
:
{ before(grammarAccess.getBagTypeRule()); }
	 ruleBagType
{ after(grammarAccess.getBagTypeRule()); } 
	 EOF 
;

// Rule BagType
ruleBagType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBagTypeAccess().getGroup()); }
		(rule__BagType__Group__0)
		{ after(grammarAccess.getBagTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrderedSetType
entryRuleOrderedSetType
:
{ before(grammarAccess.getOrderedSetTypeRule()); }
	 ruleOrderedSetType
{ after(grammarAccess.getOrderedSetTypeRule()); } 
	 EOF 
;

// Rule OrderedSetType
ruleOrderedSetType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrderedSetTypeAccess().getGroup()); }
		(rule__OrderedSetType__Group__0)
		{ after(grammarAccess.getOrderedSetTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSequenceType
entryRuleSequenceType
:
{ before(grammarAccess.getSequenceTypeRule()); }
	 ruleSequenceType
{ after(grammarAccess.getSequenceTypeRule()); } 
	 EOF 
;

// Rule SequenceType
ruleSequenceType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSequenceTypeAccess().getGroup()); }
		(rule__SequenceType__Group__0)
		{ after(grammarAccess.getSequenceTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetType
entryRuleSetType
:
{ before(grammarAccess.getSetTypeRule()); }
	 ruleSetType
{ after(grammarAccess.getSetTypeRule()); } 
	 EOF 
;

// Rule SetType
ruleSetType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetTypeAccess().getGroup()); }
		(rule__SetType__Group__0)
		{ after(grammarAccess.getSetTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitive
entryRulePrimitive
:
{ before(grammarAccess.getPrimitiveRule()); }
	 rulePrimitive
{ after(grammarAccess.getPrimitiveRule()); } 
	 EOF 
;

// Rule Primitive
rulePrimitive 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveAccess().getAlternatives()); }
		(rule__Primitive__Alternatives)
		{ after(grammarAccess.getPrimitiveAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringType
entryRuleStringType
:
{ before(grammarAccess.getStringTypeRule()); }
	 ruleStringType
{ after(grammarAccess.getStringTypeRule()); } 
	 EOF 
;

// Rule StringType
ruleStringType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringTypeAccess().getGroup()); }
		(rule__StringType__Group__0)
		{ after(grammarAccess.getStringTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanType
entryRuleBooleanType
:
{ before(grammarAccess.getBooleanTypeRule()); }
	 ruleBooleanType
{ after(grammarAccess.getBooleanTypeRule()); } 
	 EOF 
;

// Rule BooleanType
ruleBooleanType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanTypeAccess().getGroup()); }
		(rule__BooleanType__Group__0)
		{ after(grammarAccess.getBooleanTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericType
entryRuleNumericType
:
{ before(grammarAccess.getNumericTypeRule()); }
	 ruleNumericType
{ after(grammarAccess.getNumericTypeRule()); } 
	 EOF 
;

// Rule NumericType
ruleNumericType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericTypeAccess().getAlternatives()); }
		(rule__NumericType__Alternatives)
		{ after(grammarAccess.getNumericTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerType
entryRuleIntegerType
:
{ before(grammarAccess.getIntegerTypeRule()); }
	 ruleIntegerType
{ after(grammarAccess.getIntegerTypeRule()); } 
	 EOF 
;

// Rule IntegerType
ruleIntegerType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerTypeAccess().getGroup()); }
		(rule__IntegerType__Group__0)
		{ after(grammarAccess.getIntegerTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRealType
entryRuleRealType
:
{ before(grammarAccess.getRealTypeRule()); }
	 ruleRealType
{ after(grammarAccess.getRealTypeRule()); } 
	 EOF 
;

// Rule RealType
ruleRealType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRealTypeAccess().getGroup()); }
		(rule__RealType__Group__0)
		{ after(grammarAccess.getRealTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOclAnyType
entryRuleOclAnyType
:
{ before(grammarAccess.getOclAnyTypeRule()); }
	 ruleOclAnyType
{ after(grammarAccess.getOclAnyTypeRule()); } 
	 EOF 
;

// Rule OclAnyType
ruleOclAnyType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOclAnyTypeAccess().getGroup()); }
		(rule__OclAnyType__Group__0)
		{ after(grammarAccess.getOclAnyTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOclVoidType
entryRuleOclVoidType
:
{ before(grammarAccess.getOclVoidTypeRule()); }
	 ruleOclVoidType
{ after(grammarAccess.getOclVoidTypeRule()); } 
	 EOF 
;

// Rule OclVoidType
ruleOclVoidType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOclVoidTypeAccess().getGroup()); }
		(rule__OclVoidType__Group__0)
		{ after(grammarAccess.getOclVoidTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTupleType
entryRuleTupleType
:
{ before(grammarAccess.getTupleTypeRule()); }
	 ruleTupleType
{ after(grammarAccess.getTupleTypeRule()); } 
	 EOF 
;

// Rule TupleType
ruleTupleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTupleTypeAccess().getGroup()); }
		(rule__TupleType__Group__0)
		{ after(grammarAccess.getTupleTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTupleTypeAttribute
entryRuleTupleTypeAttribute
:
{ before(grammarAccess.getTupleTypeAttributeRule()); }
	 ruleTupleTypeAttribute
{ after(grammarAccess.getTupleTypeAttributeRule()); } 
	 EOF 
;

// Rule TupleTypeAttribute
ruleTupleTypeAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTupleTypeAttributeAccess().getGroup()); }
		(rule__TupleTypeAttribute__Group__0)
		{ after(grammarAccess.getTupleTypeAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOclModelElementClass
entryRuleOclModelElementClass
:
{ before(grammarAccess.getOclModelElementClassRule()); }
	 ruleOclModelElementClass
{ after(grammarAccess.getOclModelElementClassRule()); } 
	 EOF 
;

// Rule OclModelElementClass
ruleOclModelElementClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOclModelElementClassAccess().getGroup()); }
		(rule__OclModelElementClass__Group__0)
		{ after(grammarAccess.getOclModelElementClassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapType
entryRuleMapType
:
{ before(grammarAccess.getMapTypeRule()); }
	 ruleMapType
{ after(grammarAccess.getMapTypeRule()); } 
	 EOF 
;

// Rule MapType
ruleMapType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapTypeAccess().getGroup()); }
		(rule__MapType__Group__0)
		{ after(grammarAccess.getMapTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclContextBlock__MembersAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclContextBlockAccess().getMembersOclFeatureDefinitionParserRuleCall_1_0_0()); }
		ruleOclFeatureDefinition
		{ after(grammarAccess.getOclContextBlockAccess().getMembersOclFeatureDefinitionParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getOclContextBlockAccess().getMembersOclInvariantParserRuleCall_1_0_1()); }
		ruleOclInvariant
		{ after(grammarAccess.getOclContextBlockAccess().getMembersOclInvariantParserRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclFeatureDefinition__FeatureAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclFeatureDefinitionAccess().getFeatureAttributeParserRuleCall_2_0_0()); }
		ruleAttribute
		{ after(grammarAccess.getOclFeatureDefinitionAccess().getFeatureAttributeParserRuleCall_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getOclFeatureDefinitionAccess().getFeatureOperationParserRuleCall_2_0_1()); }
		ruleOperation
		{ after(grammarAccess.getOclFeatureDefinitionAccess().getFeatureOperationParserRuleCall_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclExpressionAccess().getOperatorCallExpParserRuleCall_0()); }
		ruleOperatorCallExp
		{ after(grammarAccess.getOclExpressionAccess().getOperatorCallExpParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOclExpressionAccess().getLetExpParserRuleCall_1()); }
		ruleLetExp
		{ after(grammarAccess.getOclExpressionAccess().getLetExpParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLOP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBOOLOPAccess().getAndKeyword_0()); }
		'and'
		{ after(grammarAccess.getBOOLOPAccess().getAndKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBOOLOPAccess().getOrKeyword_1()); }
		'or'
		{ after(grammarAccess.getBOOLOPAccess().getOrKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getBOOLOPAccess().getXorKeyword_2()); }
		'xor'
		{ after(grammarAccess.getBOOLOPAccess().getXorKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getBOOLOPAccess().getImpliesKeyword_3()); }
		'implies'
		{ after(grammarAccess.getBOOLOPAccess().getImpliesKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EQOP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEQOPAccess().getEqualsSignKeyword_0()); }
		'='
		{ after(grammarAccess.getEQOPAccess().getEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEQOPAccess().getLessThanSignGreaterThanSignKeyword_1()); }
		'<>'
		{ after(grammarAccess.getEQOPAccess().getLessThanSignGreaterThanSignKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RELOP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRELOPAccess().getGreaterThanSignKeyword_0()); }
		'>'
		{ after(grammarAccess.getRELOPAccess().getGreaterThanSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getRELOPAccess().getLessThanSignKeyword_1()); }
		'<'
		{ after(grammarAccess.getRELOPAccess().getLessThanSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getRELOPAccess().getGreaterThanSignEqualsSignKeyword_2()); }
		'>='
		{ after(grammarAccess.getRELOPAccess().getGreaterThanSignEqualsSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getRELOPAccess().getLessThanSignEqualsSignKeyword_3()); }
		'<='
		{ after(grammarAccess.getRELOPAccess().getLessThanSignEqualsSignKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ADDOP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getADDOPAccess().getHyphenMinusKeyword_0()); }
		'-'
		{ after(grammarAccess.getADDOPAccess().getHyphenMinusKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getADDOPAccess().getPlusSignKeyword_1()); }
		'+'
		{ after(grammarAccess.getADDOPAccess().getPlusSignKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__INTOP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getINTOPAccess().getDivKeyword_0()); }
		'div'
		{ after(grammarAccess.getINTOPAccess().getDivKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getINTOPAccess().getModKeyword_1()); }
		'mod'
		{ after(grammarAccess.getINTOPAccess().getModKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MULOP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMULOPAccess().getAsteriskKeyword_0()); }
		'*'
		{ after(grammarAccess.getMULOPAccess().getAsteriskKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getMULOPAccess().getSolidusKeyword_1()); }
		'/'
		{ after(grammarAccess.getMULOPAccess().getSolidusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotOpCallExp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotOpCallExpAccess().getGroup_0()); }
		(rule__NotOpCallExp__Group_0__0)
		{ after(grammarAccess.getNotOpCallExpAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getNotOpCallExpAccess().getPropertyCallExpParserRuleCall_1()); }
		rulePropertyCallExp
		{ after(grammarAccess.getNotOpCallExpAccess().getPropertyCallExpParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UNARYOP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUNARYOPAccess().getNotKeyword_0()); }
		'not'
		{ after(grammarAccess.getUNARYOPAccess().getNotKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getUNARYOPAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getUNARYOPAccess().getHyphenMinusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_OclExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getVariableExpParserRuleCall_0()); }
		ruleVariableExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getVariableExpParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getSelfLiteralExpParserRuleCall_1()); }
		ruleSelfLiteralExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getSelfLiteralExpParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getStringLiteralExpParserRuleCall_2()); }
		ruleStringLiteralExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getStringLiteralExpParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getBooleanLiteralExpParserRuleCall_3()); }
		ruleBooleanLiteralExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getBooleanLiteralExpParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getNumericLiteralExpParserRuleCall_4()); }
		ruleNumericLiteralExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getNumericLiteralExpParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getNullLiteralExpParserRuleCall_5()); }
		ruleNullLiteralExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getNullLiteralExpParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getBagLiteralExpParserRuleCall_6()); }
		ruleBagLiteralExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getBagLiteralExpParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getOrderedSetLiteralExpParserRuleCall_7()); }
		ruleOrderedSetLiteralExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getOrderedSetLiteralExpParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getSequenceLiteralExpParserRuleCall_8()); }
		ruleSequenceLiteralExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getSequenceLiteralExpParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getSetLiteralExpParserRuleCall_9()); }
		ruleSetLiteralExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getSetLiteralExpParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getTupleLiteralExpParserRuleCall_10()); }
		ruleTupleLiteralExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getTupleLiteralExpParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getMapLiteralExpParserRuleCall_11()); }
		ruleMapLiteralExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getMapLiteralExpParserRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getEnumLiteralExpParserRuleCall_12()); }
		ruleEnumLiteralExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getEnumLiteralExpParserRuleCall_12()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getIfExpParserRuleCall_13()); }
		ruleIfExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getIfExpParserRuleCall_13()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getBraceExpParserRuleCall_14()); }
		ruleBraceExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getBraceExpParserRuleCall_14()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getOclModelElementExpParserRuleCall_15()); }
		ruleOclModelElementExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getOclModelElementExpParserRuleCall_15()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_OclExpressionAccess().getContextlessCallExpParserRuleCall_16()); }
		ruleContextlessCallExp
		{ after(grammarAccess.getPrimary_OclExpressionAccess().getContextlessCallExpParserRuleCall_16()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericLiteralExp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericLiteralExpAccess().getRealLiteralExpParserRuleCall_0()); }
		ruleRealLiteralExp
		{ after(grammarAccess.getNumericLiteralExpAccess().getRealLiteralExpParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumericLiteralExpAccess().getIntegerLiteralExpParserRuleCall_1()); }
		ruleIntegerLiteralExp
		{ after(grammarAccess.getNumericLiteralExpAccess().getIntegerLiteralExpParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteralExp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralExpAccess().getBooleanSymbolAssignment_0()); }
		(rule__BooleanLiteralExp__BooleanSymbolAssignment_0)
		{ after(grammarAccess.getBooleanLiteralExpAccess().getBooleanSymbolAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanLiteralExpAccess().getBooleanSymbolAssignment_1()); }
		(rule__BooleanLiteralExp__BooleanSymbolAssignment_1)
		{ after(grammarAccess.getBooleanLiteralExpAccess().getBooleanSymbolAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCall__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyCallAccess().getOperationCallParserRuleCall_0()); }
		ruleOperationCall
		{ after(grammarAccess.getPropertyCallAccess().getOperationCallParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyCallAccess().getNavigationOrAttributeCallParserRuleCall_1()); }
		ruleNavigationOrAttributeCall
		{ after(grammarAccess.getPropertyCallAccess().getNavigationOrAttributeCallParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyCallAccess().getIterateExpParserRuleCall_2()); }
		ruleIterateExp
		{ after(grammarAccess.getPropertyCallAccess().getIterateExpParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyCallAccess().getIteratorExpParserRuleCall_3()); }
		ruleIteratorExp
		{ after(grammarAccess.getPropertyCallAccess().getIteratorExpParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyCallAccess().getCollectionOperationCallParserRuleCall_4()); }
		ruleCollectionOperationCall
		{ after(grammarAccess.getPropertyCallAccess().getCollectionOperationCallParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigationOrAttributeCall__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNavigationOrAttributeCallAccess().getNameAssignment_1_0()); }
		(rule__NavigationOrAttributeCall__NameAssignment_1_0)
		{ after(grammarAccess.getNavigationOrAttributeCallAccess().getNameAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getNavigationOrAttributeCallAccess().getNameAssignment_1_1()); }
		(rule__NavigationOrAttributeCall__NameAssignment_1_1)
		{ after(grammarAccess.getNavigationOrAttributeCallAccess().getNameAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclTypeLiteral__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclTypeLiteralAccess().getCollectionTypeLiteralParserRuleCall_0()); }
		ruleCollectionTypeLiteral
		{ after(grammarAccess.getOclTypeLiteralAccess().getCollectionTypeLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOclTypeLiteralAccess().getPrimitiveParserRuleCall_1()); }
		rulePrimitive
		{ after(grammarAccess.getOclTypeLiteralAccess().getPrimitiveParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getOclTypeLiteralAccess().getOclAnyTypeParserRuleCall_2()); }
		ruleOclAnyType
		{ after(grammarAccess.getOclTypeLiteralAccess().getOclAnyTypeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getOclTypeLiteralAccess().getOclVoidTypeParserRuleCall_3()); }
		ruleOclVoidType
		{ after(grammarAccess.getOclTypeLiteralAccess().getOclVoidTypeParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getOclTypeLiteralAccess().getTupleTypeParserRuleCall_4()); }
		ruleTupleType
		{ after(grammarAccess.getOclTypeLiteralAccess().getTupleTypeParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getOclTypeLiteralAccess().getOclModelElementClassParserRuleCall_5()); }
		ruleOclModelElementClass
		{ after(grammarAccess.getOclTypeLiteralAccess().getOclModelElementClassParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getOclTypeLiteralAccess().getMapTypeParserRuleCall_6()); }
		ruleMapType
		{ after(grammarAccess.getOclTypeLiteralAccess().getMapTypeParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeLiteral__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionTypeLiteralAccess().getCollectionTypeParserRuleCall_0()); }
		ruleCollectionType
		{ after(grammarAccess.getCollectionTypeLiteralAccess().getCollectionTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionTypeLiteralAccess().getBagTypeParserRuleCall_1()); }
		ruleBagType
		{ after(grammarAccess.getCollectionTypeLiteralAccess().getBagTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionTypeLiteralAccess().getOrderedSetTypeParserRuleCall_2()); }
		ruleOrderedSetType
		{ after(grammarAccess.getCollectionTypeLiteralAccess().getOrderedSetTypeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionTypeLiteralAccess().getSequenceTypeParserRuleCall_3()); }
		ruleSequenceType
		{ after(grammarAccess.getCollectionTypeLiteralAccess().getSequenceTypeParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionTypeLiteralAccess().getSetTypeParserRuleCall_4()); }
		ruleSetType
		{ after(grammarAccess.getCollectionTypeLiteralAccess().getSetTypeParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getStringTypeParserRuleCall_0()); }
		ruleStringType
		{ after(grammarAccess.getPrimitiveAccess().getStringTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getBooleanTypeParserRuleCall_1()); }
		ruleBooleanType
		{ after(grammarAccess.getPrimitiveAccess().getBooleanTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getNumericTypeParserRuleCall_2()); }
		ruleNumericType
		{ after(grammarAccess.getPrimitiveAccess().getNumericTypeParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericTypeAccess().getIntegerTypeParserRuleCall_0()); }
		ruleIntegerType
		{ after(grammarAccess.getNumericTypeAccess().getIntegerTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumericTypeAccess().getRealTypeParserRuleCall_1()); }
		ruleRealType
		{ after(grammarAccess.getNumericTypeAccess().getRealTypeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__0__Impl
	rule__Module__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getModuleAccess().getImportsAssignment_0()); }
		(rule__Module__ImportsAssignment_0)
		{ after(grammarAccess.getModuleAccess().getImportsAssignment_0()); }
	)
	(
		{ before(grammarAccess.getModuleAccess().getImportsAssignment_0()); }
		(rule__Module__ImportsAssignment_0)*
		{ after(grammarAccess.getModuleAccess().getImportsAssignment_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__1__Impl
	rule__Module__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getContextlessFeaturesAssignment_1()); }
	(rule__Module__ContextlessFeaturesAssignment_1)*
	{ after(grammarAccess.getModuleAccess().getContextlessFeaturesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getModuleAccess().getContextBlocksAssignment_2()); }
		(rule__Module__ContextBlocksAssignment_2)
		{ after(grammarAccess.getModuleAccess().getContextBlocksAssignment_2()); }
	)
	(
		{ before(grammarAccess.getModuleAccess().getContextBlocksAssignment_2()); }
		(rule__Module__ContextBlocksAssignment_2)*
		{ after(grammarAccess.getModuleAccess().getContextBlocksAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getPackageAssignment_1()); }
	(rule__Import__PackageAssignment_1)
	{ after(grammarAccess.getImportAccess().getPackageAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__2__Impl
	rule__Import__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getAsKeyword_2()); }
	'as'
	{ after(grammarAccess.getImportAccess().getAsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getNameAssignment_3()); }
	(rule__Import__NameAssignment_3)
	{ after(grammarAccess.getImportAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OclContextBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclContextBlock__Group__0__Impl
	rule__OclContextBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OclContextBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclContextBlockAccess().getGroup_0()); }
	(rule__OclContextBlock__Group_0__0)
	{ after(grammarAccess.getOclContextBlockAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclContextBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclContextBlock__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OclContextBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getOclContextBlockAccess().getMembersAssignment_1()); }
		(rule__OclContextBlock__MembersAssignment_1)
		{ after(grammarAccess.getOclContextBlockAccess().getMembersAssignment_1()); }
	)
	(
		{ before(grammarAccess.getOclContextBlockAccess().getMembersAssignment_1()); }
		(rule__OclContextBlock__MembersAssignment_1)*
		{ after(grammarAccess.getOclContextBlockAccess().getMembersAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OclContextBlock__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclContextBlock__Group_0__0__Impl
	rule__OclContextBlock__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OclContextBlock__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclContextBlockAccess().getContextKeyword_0_0()); }
	'context'
	{ after(grammarAccess.getOclContextBlockAccess().getContextKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclContextBlock__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclContextBlock__Group_0__1__Impl
	rule__OclContextBlock__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OclContextBlock__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclContextBlockAccess().getEcoreTypesAssignment_0_1()); }
	(rule__OclContextBlock__EcoreTypesAssignment_0_1)
	{ after(grammarAccess.getOclContextBlockAccess().getEcoreTypesAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclContextBlock__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclContextBlock__Group_0__2__Impl
	rule__OclContextBlock__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OclContextBlock__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclContextBlockAccess().getExclamationMarkKeyword_0_2()); }
	'!'
	{ after(grammarAccess.getOclContextBlockAccess().getExclamationMarkKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclContextBlock__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclContextBlock__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OclContextBlock__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclContextBlockAccess().getClassAssignment_0_3()); }
	(rule__OclContextBlock__ClassAssignment_0_3)
	{ after(grammarAccess.getOclContextBlockAccess().getClassAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OclFeatureDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclFeatureDefinition__Group__0__Impl
	rule__OclFeatureDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OclFeatureDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclFeatureDefinitionAccess().getDefKeyword_0()); }
	'def'
	{ after(grammarAccess.getOclFeatureDefinitionAccess().getDefKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclFeatureDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclFeatureDefinition__Group__1__Impl
	rule__OclFeatureDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OclFeatureDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclFeatureDefinitionAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getOclFeatureDefinitionAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclFeatureDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclFeatureDefinition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OclFeatureDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclFeatureDefinitionAccess().getFeatureAssignment_2()); }
	(rule__OclFeatureDefinition__FeatureAssignment_2)
	{ after(grammarAccess.getOclFeatureDefinitionAccess().getFeatureAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
	(rule__Attribute__NameAssignment_0)
	{ after(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getAttributeAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__2__Impl
	rule__Attribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getTypeAssignment_2()); }
	(rule__Attribute__TypeAssignment_2)
	{ after(grammarAccess.getAttributeAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__3__Impl
	rule__Attribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getAttributeAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getInitExpressionAssignment_4()); }
	(rule__Attribute__InitExpressionAssignment_4)
	{ after(grammarAccess.getAttributeAccess().getInitExpressionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__0__Impl
	rule__Operation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getNameAssignment_0()); }
	(rule__Operation__NameAssignment_0)
	{ after(grammarAccess.getOperationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__1__Impl
	rule__Operation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getOperationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__2__Impl
	rule__Operation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getGroup_2()); }
	(rule__Operation__Group_2__0)?
	{ after(grammarAccess.getOperationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__3__Impl
	rule__Operation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getOperationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__4__Impl
	rule__Operation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getOperationAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__5__Impl
	rule__Operation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getReturnTypeAssignment_5()); }
	(rule__Operation__ReturnTypeAssignment_5)
	{ after(grammarAccess.getOperationAccess().getReturnTypeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__6__Impl
	rule__Operation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getEqualsSignKeyword_6()); }
	'='
	{ after(grammarAccess.getOperationAccess().getEqualsSignKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getBodyAssignment_7()); }
	(rule__Operation__BodyAssignment_7)
	{ after(grammarAccess.getOperationAccess().getBodyAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group_2__0__Impl
	rule__Operation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getParametersAssignment_2_0()); }
	(rule__Operation__ParametersAssignment_2_0)
	{ after(grammarAccess.getOperationAccess().getParametersAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getGroup_2_1()); }
	(rule__Operation__Group_2_1__0)*
	{ after(grammarAccess.getOperationAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group_2_1__0__Impl
	rule__Operation__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getOperationAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getParametersAssignment_2_1_1()); }
	(rule__Operation__ParametersAssignment_2_1_1)
	{ after(grammarAccess.getOperationAccess().getParametersAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_0()); }
	(rule__Parameter__NameAssignment_0)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getParameterAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getTypeAssignment_2()); }
	(rule__Parameter__TypeAssignment_2)
	{ after(grammarAccess.getParameterAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OclInvariant__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclInvariant__Group__0__Impl
	rule__OclInvariant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclInvariantAccess().getInvKeyword_0()); }
	'inv'
	{ after(grammarAccess.getOclInvariantAccess().getInvKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclInvariant__Group__1__Impl
	rule__OclInvariant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclInvariantAccess().getNameAssignment_1()); }
	(rule__OclInvariant__NameAssignment_1)
	{ after(grammarAccess.getOclInvariantAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclInvariant__Group__2__Impl
	rule__OclInvariant__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclInvariantAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getOclInvariantAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclInvariant__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclInvariantAccess().getBodyAssignment_3()); }
	(rule__OclInvariant__BodyAssignment_3)
	{ after(grammarAccess.getOclInvariantAccess().getBodyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OclModelElementExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclModelElementExp__Group__0__Impl
	rule__OclModelElementExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElementExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclModelElementExpAccess().getModelAssignment_0()); }
	(rule__OclModelElementExp__ModelAssignment_0)
	{ after(grammarAccess.getOclModelElementExpAccess().getModelAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElementExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclModelElementExp__Group__1__Impl
	rule__OclModelElementExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElementExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclModelElementExpAccess().getExclamationMarkKeyword_1()); }
	'!'
	{ after(grammarAccess.getOclModelElementExpAccess().getExclamationMarkKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElementExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclModelElementExp__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElementExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclModelElementExpAccess().getClassAssignment_2()); }
	(rule__OclModelElementExp__ClassAssignment_2)
	{ after(grammarAccess.getOclModelElementExpAccess().getClassAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperatorCallExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperatorCallExp__Group__0__Impl
	rule__OperatorCallExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorCallExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorCallExpAccess().getArgsAssignment_0()); }
	(rule__OperatorCallExp__ArgsAssignment_0)
	{ after(grammarAccess.getOperatorCallExpAccess().getArgsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorCallExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperatorCallExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorCallExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorCallExpAccess().getGroup_1()); }
	(rule__OperatorCallExp__Group_1__0)*
	{ after(grammarAccess.getOperatorCallExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperatorCallExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperatorCallExp__Group_1__0__Impl
	rule__OperatorCallExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorCallExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorCallExpAccess().getOperationNamesAssignment_1_0()); }
	(rule__OperatorCallExp__OperationNamesAssignment_1_0)
	{ after(grammarAccess.getOperatorCallExpAccess().getOperationNamesAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorCallExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperatorCallExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorCallExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorCallExpAccess().getArgsAssignment_1_1()); }
	(rule__OperatorCallExp__ArgsAssignment_1_1)
	{ after(grammarAccess.getOperatorCallExpAccess().getArgsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqOpCallExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqOpCallExp__Group__0__Impl
	rule__EqOpCallExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqOpCallExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqOpCallExpAccess().getArgsAssignment_0()); }
	(rule__EqOpCallExp__ArgsAssignment_0)
	{ after(grammarAccess.getEqOpCallExpAccess().getArgsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqOpCallExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqOpCallExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqOpCallExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqOpCallExpAccess().getGroup_1()); }
	(rule__EqOpCallExp__Group_1__0)?
	{ after(grammarAccess.getEqOpCallExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqOpCallExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqOpCallExp__Group_1__0__Impl
	rule__EqOpCallExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqOpCallExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqOpCallExpAccess().getOperationNamesAssignment_1_0()); }
	(rule__EqOpCallExp__OperationNamesAssignment_1_0)
	{ after(grammarAccess.getEqOpCallExpAccess().getOperationNamesAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqOpCallExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqOpCallExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqOpCallExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqOpCallExpAccess().getArgsAssignment_1_1()); }
	(rule__EqOpCallExp__ArgsAssignment_1_1)
	{ after(grammarAccess.getEqOpCallExpAccess().getArgsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelOpCallExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelOpCallExp__Group__0__Impl
	rule__RelOpCallExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelOpCallExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelOpCallExpAccess().getArgsAssignment_0()); }
	(rule__RelOpCallExp__ArgsAssignment_0)
	{ after(grammarAccess.getRelOpCallExpAccess().getArgsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelOpCallExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelOpCallExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelOpCallExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelOpCallExpAccess().getGroup_1()); }
	(rule__RelOpCallExp__Group_1__0)?
	{ after(grammarAccess.getRelOpCallExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelOpCallExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelOpCallExp__Group_1__0__Impl
	rule__RelOpCallExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelOpCallExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelOpCallExpAccess().getOperationNamesAssignment_1_0()); }
	(rule__RelOpCallExp__OperationNamesAssignment_1_0)
	{ after(grammarAccess.getRelOpCallExpAccess().getOperationNamesAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelOpCallExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelOpCallExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelOpCallExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelOpCallExpAccess().getArgsAssignment_1_1()); }
	(rule__RelOpCallExp__ArgsAssignment_1_1)
	{ after(grammarAccess.getRelOpCallExpAccess().getArgsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddOpCallExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddOpCallExp__Group__0__Impl
	rule__AddOpCallExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOpCallExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddOpCallExpAccess().getArgsAssignment_0()); }
	(rule__AddOpCallExp__ArgsAssignment_0)
	{ after(grammarAccess.getAddOpCallExpAccess().getArgsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOpCallExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddOpCallExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOpCallExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddOpCallExpAccess().getGroup_1()); }
	(rule__AddOpCallExp__Group_1__0)*
	{ after(grammarAccess.getAddOpCallExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddOpCallExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddOpCallExp__Group_1__0__Impl
	rule__AddOpCallExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOpCallExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddOpCallExpAccess().getOperationNamesAssignment_1_0()); }
	(rule__AddOpCallExp__OperationNamesAssignment_1_0)
	{ after(grammarAccess.getAddOpCallExpAccess().getOperationNamesAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOpCallExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddOpCallExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOpCallExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddOpCallExpAccess().getArgsAssignment_1_1()); }
	(rule__AddOpCallExp__ArgsAssignment_1_1)
	{ after(grammarAccess.getAddOpCallExpAccess().getArgsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntOpCallExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntOpCallExp__Group__0__Impl
	rule__IntOpCallExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOpCallExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntOpCallExpAccess().getArgsAssignment_0()); }
	(rule__IntOpCallExp__ArgsAssignment_0)
	{ after(grammarAccess.getIntOpCallExpAccess().getArgsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOpCallExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntOpCallExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOpCallExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntOpCallExpAccess().getGroup_1()); }
	(rule__IntOpCallExp__Group_1__0)*
	{ after(grammarAccess.getIntOpCallExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntOpCallExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntOpCallExp__Group_1__0__Impl
	rule__IntOpCallExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOpCallExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntOpCallExpAccess().getOperationNamesAssignment_1_0()); }
	(rule__IntOpCallExp__OperationNamesAssignment_1_0)
	{ after(grammarAccess.getIntOpCallExpAccess().getOperationNamesAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOpCallExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntOpCallExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOpCallExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntOpCallExpAccess().getArgsAssignment_1_1()); }
	(rule__IntOpCallExp__ArgsAssignment_1_1)
	{ after(grammarAccess.getIntOpCallExpAccess().getArgsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOpCallExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOpCallExp__Group__0__Impl
	rule__MulOpCallExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOpCallExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOpCallExpAccess().getArgsAssignment_0()); }
	(rule__MulOpCallExp__ArgsAssignment_0)
	{ after(grammarAccess.getMulOpCallExpAccess().getArgsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOpCallExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOpCallExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOpCallExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOpCallExpAccess().getGroup_1()); }
	(rule__MulOpCallExp__Group_1__0)*
	{ after(grammarAccess.getMulOpCallExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOpCallExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOpCallExp__Group_1__0__Impl
	rule__MulOpCallExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOpCallExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOpCallExpAccess().getOperationNamesAssignment_1_0()); }
	(rule__MulOpCallExp__OperationNamesAssignment_1_0)
	{ after(grammarAccess.getMulOpCallExpAccess().getOperationNamesAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOpCallExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOpCallExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOpCallExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOpCallExpAccess().getArgsAssignment_1_1()); }
	(rule__MulOpCallExp__ArgsAssignment_1_1)
	{ after(grammarAccess.getMulOpCallExpAccess().getArgsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NotOpCallExp__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotOpCallExp__Group_0__0__Impl
	rule__NotOpCallExp__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotOpCallExp__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotOpCallExpAccess().getOperationNameAssignment_0_0()); }
	(rule__NotOpCallExp__OperationNameAssignment_0_0)
	{ after(grammarAccess.getNotOpCallExpAccess().getOperationNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotOpCallExp__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotOpCallExp__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotOpCallExp__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotOpCallExpAccess().getSourceAssignment_0_1()); }
	(rule__NotOpCallExp__SourceAssignment_0_1)
	{ after(grammarAccess.getNotOpCallExpAccess().getSourceAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyCallExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyCallExp__Group__0__Impl
	rule__PropertyCallExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCallExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyCallExpAccess().getSourceAssignment_0()); }
	(rule__PropertyCallExp__SourceAssignment_0)
	{ after(grammarAccess.getPropertyCallExpAccess().getSourceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCallExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyCallExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCallExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyCallExpAccess().getCallsAssignment_1()); }
	(rule__PropertyCallExp__CallsAssignment_1)*
	{ after(grammarAccess.getPropertyCallExpAccess().getCallsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelfLiteralExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelfLiteralExp__Group__0__Impl
	rule__SelfLiteralExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfLiteralExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelfLiteralExpAccess().getSelfLiteralExpAction_0()); }
	()
	{ after(grammarAccess.getSelfLiteralExpAccess().getSelfLiteralExpAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfLiteralExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelfLiteralExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfLiteralExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelfLiteralExpAccess().getSelfKeyword_1()); }
	'self'
	{ after(grammarAccess.getSelfLiteralExpAccess().getSelfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NullLiteralExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullLiteralExp__Group__0__Impl
	rule__NullLiteralExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteralExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullLiteralExpAccess().getNullLiteralExpAction_0()); }
	()
	{ after(grammarAccess.getNullLiteralExpAccess().getNullLiteralExpAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteralExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullLiteralExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteralExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullLiteralExpAccess().getNullKeyword_1()); }
	'null'
	{ after(grammarAccess.getNullLiteralExpAccess().getNullKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringLiteralExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringLiteralExp__Group__0__Impl
	rule__StringLiteralExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteralExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringLiteralExpAccess().getStringLiteralExpAction_0()); }
	()
	{ after(grammarAccess.getStringLiteralExpAccess().getStringLiteralExpAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteralExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringLiteralExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteralExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringLiteralExpAccess().getStringSymbolAssignment_1()); }
	(rule__StringLiteralExp__StringSymbolAssignment_1)
	{ after(grammarAccess.getStringLiteralExpAccess().getStringSymbolAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerLiteralExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerLiteralExp__Group__0__Impl
	rule__IntegerLiteralExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteralExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerLiteralExpAccess().getIntegerLiteralExpAction_0()); }
	()
	{ after(grammarAccess.getIntegerLiteralExpAccess().getIntegerLiteralExpAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteralExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerLiteralExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteralExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerLiteralExpAccess().getIntegerSymbolAssignment_1()); }
	(rule__IntegerLiteralExp__IntegerSymbolAssignment_1)
	{ after(grammarAccess.getIntegerLiteralExpAccess().getIntegerSymbolAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagLiteralExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagLiteralExp__Group__0__Impl
	rule__BagLiteralExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteralExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagLiteralExpAccess().getBagLiteralExpAction_0()); }
	()
	{ after(grammarAccess.getBagLiteralExpAccess().getBagLiteralExpAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteralExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagLiteralExp__Group__1__Impl
	rule__BagLiteralExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteralExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagLiteralExpAccess().getBagKeyword_1()); }
	'Bag'
	{ after(grammarAccess.getBagLiteralExpAccess().getBagKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteralExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagLiteralExp__Group__2__Impl
	rule__BagLiteralExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteralExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagLiteralExpAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getBagLiteralExpAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteralExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagLiteralExp__Group__3__Impl
	rule__BagLiteralExp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteralExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagLiteralExpAccess().getGroup_3()); }
	(rule__BagLiteralExp__Group_3__0)?
	{ after(grammarAccess.getBagLiteralExpAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteralExp__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagLiteralExp__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteralExp__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagLiteralExpAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getBagLiteralExpAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagLiteralExp__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagLiteralExp__Group_3__0__Impl
	rule__BagLiteralExp__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteralExp__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagLiteralExpAccess().getElementsAssignment_3_0()); }
	(rule__BagLiteralExp__ElementsAssignment_3_0)
	{ after(grammarAccess.getBagLiteralExpAccess().getElementsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteralExp__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagLiteralExp__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteralExp__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagLiteralExpAccess().getGroup_3_1()); }
	(rule__BagLiteralExp__Group_3_1__0)*
	{ after(grammarAccess.getBagLiteralExpAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagLiteralExp__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagLiteralExp__Group_3_1__0__Impl
	rule__BagLiteralExp__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteralExp__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagLiteralExpAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getBagLiteralExpAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteralExp__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagLiteralExp__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteralExp__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagLiteralExpAccess().getElementsAssignment_3_1_1()); }
	(rule__BagLiteralExp__ElementsAssignment_3_1_1)
	{ after(grammarAccess.getBagLiteralExpAccess().getElementsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrderedSetLiteralExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderedSetLiteralExp__Group__0__Impl
	rule__OrderedSetLiteralExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetLiteralExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderedSetLiteralExpAccess().getOrderedSetLiteralExpAction_0()); }
	()
	{ after(grammarAccess.getOrderedSetLiteralExpAccess().getOrderedSetLiteralExpAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetLiteralExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderedSetLiteralExp__Group__1__Impl
	rule__OrderedSetLiteralExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetLiteralExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderedSetLiteralExpAccess().getOrderedSetKeyword_1()); }
	'OrderedSet'
	{ after(grammarAccess.getOrderedSetLiteralExpAccess().getOrderedSetKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetLiteralExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderedSetLiteralExp__Group__2__Impl
	rule__OrderedSetLiteralExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetLiteralExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderedSetLiteralExpAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getOrderedSetLiteralExpAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetLiteralExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderedSetLiteralExp__Group__3__Impl
	rule__OrderedSetLiteralExp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetLiteralExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderedSetLiteralExpAccess().getGroup_3()); }
	(rule__OrderedSetLiteralExp__Group_3__0)?
	{ after(grammarAccess.getOrderedSetLiteralExpAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetLiteralExp__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderedSetLiteralExp__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetLiteralExp__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderedSetLiteralExpAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getOrderedSetLiteralExpAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrderedSetLiteralExp__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderedSetLiteralExp__Group_3__0__Impl
	rule__OrderedSetLiteralExp__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetLiteralExp__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderedSetLiteralExpAccess().getElementsAssignment_3_0()); }
	(rule__OrderedSetLiteralExp__ElementsAssignment_3_0)
	{ after(grammarAccess.getOrderedSetLiteralExpAccess().getElementsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetLiteralExp__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderedSetLiteralExp__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetLiteralExp__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderedSetLiteralExpAccess().getGroup_3_1()); }
	(rule__OrderedSetLiteralExp__Group_3_1__0)*
	{ after(grammarAccess.getOrderedSetLiteralExpAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrderedSetLiteralExp__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderedSetLiteralExp__Group_3_1__0__Impl
	rule__OrderedSetLiteralExp__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetLiteralExp__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderedSetLiteralExpAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getOrderedSetLiteralExpAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetLiteralExp__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderedSetLiteralExp__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetLiteralExp__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderedSetLiteralExpAccess().getElementsAssignment_3_1_1()); }
	(rule__OrderedSetLiteralExp__ElementsAssignment_3_1_1)
	{ after(grammarAccess.getOrderedSetLiteralExpAccess().getElementsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceLiteralExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceLiteralExp__Group__0__Impl
	rule__SequenceLiteralExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceLiteralExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceLiteralExpAccess().getSequenceLiteralExpAction_0()); }
	()
	{ after(grammarAccess.getSequenceLiteralExpAccess().getSequenceLiteralExpAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceLiteralExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceLiteralExp__Group__1__Impl
	rule__SequenceLiteralExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceLiteralExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceLiteralExpAccess().getSequenceKeyword_1()); }
	'Sequence'
	{ after(grammarAccess.getSequenceLiteralExpAccess().getSequenceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceLiteralExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceLiteralExp__Group__2__Impl
	rule__SequenceLiteralExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceLiteralExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceLiteralExpAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSequenceLiteralExpAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceLiteralExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceLiteralExp__Group__3__Impl
	rule__SequenceLiteralExp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceLiteralExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceLiteralExpAccess().getGroup_3()); }
	(rule__SequenceLiteralExp__Group_3__0)?
	{ after(grammarAccess.getSequenceLiteralExpAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceLiteralExp__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceLiteralExp__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceLiteralExp__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceLiteralExpAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getSequenceLiteralExpAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceLiteralExp__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceLiteralExp__Group_3__0__Impl
	rule__SequenceLiteralExp__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceLiteralExp__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceLiteralExpAccess().getElementsAssignment_3_0()); }
	(rule__SequenceLiteralExp__ElementsAssignment_3_0)
	{ after(grammarAccess.getSequenceLiteralExpAccess().getElementsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceLiteralExp__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceLiteralExp__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceLiteralExp__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceLiteralExpAccess().getGroup_3_1()); }
	(rule__SequenceLiteralExp__Group_3_1__0)*
	{ after(grammarAccess.getSequenceLiteralExpAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceLiteralExp__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceLiteralExp__Group_3_1__0__Impl
	rule__SequenceLiteralExp__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceLiteralExp__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceLiteralExpAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getSequenceLiteralExpAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceLiteralExp__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceLiteralExp__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceLiteralExp__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceLiteralExpAccess().getElementsAssignment_3_1_1()); }
	(rule__SequenceLiteralExp__ElementsAssignment_3_1_1)
	{ after(grammarAccess.getSequenceLiteralExpAccess().getElementsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetLiteralExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetLiteralExp__Group__0__Impl
	rule__SetLiteralExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteralExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetLiteralExpAccess().getSetLiteralExpAction_0()); }
	()
	{ after(grammarAccess.getSetLiteralExpAccess().getSetLiteralExpAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteralExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetLiteralExp__Group__1__Impl
	rule__SetLiteralExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteralExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetLiteralExpAccess().getSetKeyword_1()); }
	'Set'
	{ after(grammarAccess.getSetLiteralExpAccess().getSetKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteralExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetLiteralExp__Group__2__Impl
	rule__SetLiteralExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteralExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetLiteralExpAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSetLiteralExpAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteralExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetLiteralExp__Group__3__Impl
	rule__SetLiteralExp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteralExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetLiteralExpAccess().getGroup_3()); }
	(rule__SetLiteralExp__Group_3__0)?
	{ after(grammarAccess.getSetLiteralExpAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteralExp__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetLiteralExp__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteralExp__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetLiteralExpAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getSetLiteralExpAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetLiteralExp__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetLiteralExp__Group_3__0__Impl
	rule__SetLiteralExp__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteralExp__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetLiteralExpAccess().getElementsAssignment_3_0()); }
	(rule__SetLiteralExp__ElementsAssignment_3_0)
	{ after(grammarAccess.getSetLiteralExpAccess().getElementsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteralExp__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetLiteralExp__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteralExp__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetLiteralExpAccess().getGroup_3_1()); }
	(rule__SetLiteralExp__Group_3_1__0)*
	{ after(grammarAccess.getSetLiteralExpAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetLiteralExp__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetLiteralExp__Group_3_1__0__Impl
	rule__SetLiteralExp__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteralExp__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetLiteralExpAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getSetLiteralExpAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteralExp__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetLiteralExp__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteralExp__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetLiteralExpAccess().getElementsAssignment_3_1_1()); }
	(rule__SetLiteralExp__ElementsAssignment_3_1_1)
	{ after(grammarAccess.getSetLiteralExpAccess().getElementsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleLiteralExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleLiteralExp__Group__0__Impl
	rule__TupleLiteralExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleLiteralExpAccess().getTupleLiteralExpAction_0()); }
	()
	{ after(grammarAccess.getTupleLiteralExpAccess().getTupleLiteralExpAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleLiteralExp__Group__1__Impl
	rule__TupleLiteralExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleLiteralExpAccess().getTupleKeyword_1()); }
	'Tuple'
	{ after(grammarAccess.getTupleLiteralExpAccess().getTupleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleLiteralExp__Group__2__Impl
	rule__TupleLiteralExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleLiteralExpAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getTupleLiteralExpAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleLiteralExp__Group__3__Impl
	rule__TupleLiteralExp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleLiteralExpAccess().getGroup_3()); }
	(rule__TupleLiteralExp__Group_3__0)?
	{ after(grammarAccess.getTupleLiteralExpAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExp__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleLiteralExp__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExp__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleLiteralExpAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getTupleLiteralExpAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleLiteralExp__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleLiteralExp__Group_3__0__Impl
	rule__TupleLiteralExp__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExp__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleLiteralExpAccess().getTuplePartAssignment_3_0()); }
	(rule__TupleLiteralExp__TuplePartAssignment_3_0)
	{ after(grammarAccess.getTupleLiteralExpAccess().getTuplePartAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExp__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleLiteralExp__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExp__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleLiteralExpAccess().getGroup_3_1()); }
	(rule__TupleLiteralExp__Group_3_1__0)*
	{ after(grammarAccess.getTupleLiteralExpAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleLiteralExp__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleLiteralExp__Group_3_1__0__Impl
	rule__TupleLiteralExp__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExp__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleLiteralExpAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getTupleLiteralExpAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExp__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleLiteralExp__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExp__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleLiteralExpAccess().getTuplePartAssignment_3_1_1()); }
	(rule__TupleLiteralExp__TuplePartAssignment_3_1_1)
	{ after(grammarAccess.getTupleLiteralExpAccess().getTuplePartAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TuplePart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TuplePart__Group__0__Impl
	rule__TuplePart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTuplePartAccess().getVarNameAssignment_0()); }
	(rule__TuplePart__VarNameAssignment_0)
	{ after(grammarAccess.getTuplePartAccess().getVarNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TuplePart__Group__1__Impl
	rule__TuplePart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTuplePartAccess().getGroup_1()); }
	(rule__TuplePart__Group_1__0)?
	{ after(grammarAccess.getTuplePartAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePart__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TuplePart__Group__2__Impl
	rule__TuplePart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePart__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTuplePartAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getTuplePartAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePart__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TuplePart__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePart__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTuplePartAccess().getInitExpressionAssignment_3()); }
	(rule__TuplePart__InitExpressionAssignment_3)
	{ after(grammarAccess.getTuplePartAccess().getInitExpressionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TuplePart__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TuplePart__Group_1__0__Impl
	rule__TuplePart__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePart__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTuplePartAccess().getColonKeyword_1_0()); }
	':'
	{ after(grammarAccess.getTuplePartAccess().getColonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePart__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TuplePart__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePart__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTuplePartAccess().getTypeAssignment_1_1()); }
	(rule__TuplePart__TypeAssignment_1_1)
	{ after(grammarAccess.getTuplePartAccess().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapLiteralExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteralExp__Group__0__Impl
	rule__MapLiteralExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteralExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralExpAccess().getMapLiteralExpAction_0()); }
	()
	{ after(grammarAccess.getMapLiteralExpAccess().getMapLiteralExpAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteralExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteralExp__Group__1__Impl
	rule__MapLiteralExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteralExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralExpAccess().getMapKeyword_1()); }
	'Map'
	{ after(grammarAccess.getMapLiteralExpAccess().getMapKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteralExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteralExp__Group__2__Impl
	rule__MapLiteralExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteralExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralExpAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getMapLiteralExpAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteralExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteralExp__Group__3__Impl
	rule__MapLiteralExp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteralExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralExpAccess().getGroup_3()); }
	(rule__MapLiteralExp__Group_3__0)?
	{ after(grammarAccess.getMapLiteralExpAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteralExp__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteralExp__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteralExp__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralExpAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getMapLiteralExpAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapLiteralExp__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteralExp__Group_3__0__Impl
	rule__MapLiteralExp__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteralExp__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralExpAccess().getElementsAssignment_3_0()); }
	(rule__MapLiteralExp__ElementsAssignment_3_0)
	{ after(grammarAccess.getMapLiteralExpAccess().getElementsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteralExp__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteralExp__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteralExp__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralExpAccess().getGroup_3_1()); }
	(rule__MapLiteralExp__Group_3_1__0)*
	{ after(grammarAccess.getMapLiteralExpAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapLiteralExp__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteralExp__Group_3_1__0__Impl
	rule__MapLiteralExp__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteralExp__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralExpAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getMapLiteralExpAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteralExp__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteralExp__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteralExp__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralExpAccess().getElementsAssignment_3_1_1()); }
	(rule__MapLiteralExp__ElementsAssignment_3_1_1)
	{ after(grammarAccess.getMapLiteralExpAccess().getElementsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapElement__Group__0__Impl
	rule__MapElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapElementAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getMapElementAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapElement__Group__1__Impl
	rule__MapElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapElementAccess().getKeyAssignment_1()); }
	(rule__MapElement__KeyAssignment_1)
	{ after(grammarAccess.getMapElementAccess().getKeyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapElement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapElement__Group__2__Impl
	rule__MapElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapElement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapElementAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getMapElementAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapElement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapElement__Group__3__Impl
	rule__MapElement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MapElement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapElementAccess().getValueAssignment_3()); }
	(rule__MapElement__ValueAssignment_3)
	{ after(grammarAccess.getMapElementAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapElement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapElement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapElement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapElementAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getMapElementAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumLiteralExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumLiteralExp__Group__0__Impl
	rule__EnumLiteralExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumLiteralExpAccess().getEnum_Assignment_0()); }
	(rule__EnumLiteralExp__Enum_Assignment_0)
	{ after(grammarAccess.getEnumLiteralExpAccess().getEnum_Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumLiteralExp__Group__1__Impl
	rule__EnumLiteralExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumLiteralExpAccess().getNumberSignKeyword_1()); }
	'#'
	{ after(grammarAccess.getEnumLiteralExpAccess().getNumberSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumLiteralExp__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumLiteralExpAccess().getNameAssignment_2()); }
	(rule__EnumLiteralExp__NameAssignment_2)
	{ after(grammarAccess.getEnumLiteralExpAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LetExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExp__Group__0__Impl
	rule__LetExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpAccess().getLetKeyword_0()); }
	'let'
	{ after(grammarAccess.getLetExpAccess().getLetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExp__Group__1__Impl
	rule__LetExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpAccess().getVariableAssignment_1()); }
	(rule__LetExp__VariableAssignment_1)
	{ after(grammarAccess.getLetExpAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExp__Group__2__Impl
	rule__LetExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpAccess().getInKeyword_2()); }
	'in'
	{ after(grammarAccess.getLetExpAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExp__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpAccess().getIn_Assignment_3()); }
	(rule__LetExp__In_Assignment_3)
	{ after(grammarAccess.getLetExpAccess().getIn_Assignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExp__Group__0__Impl
	rule__IfExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfExpAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExp__Group__1__Impl
	rule__IfExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpAccess().getConditionAssignment_1()); }
	(rule__IfExp__ConditionAssignment_1)
	{ after(grammarAccess.getIfExpAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExp__Group__2__Impl
	rule__IfExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getIfExpAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExp__Group__3__Impl
	rule__IfExp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpAccess().getThenExpressionAssignment_3()); }
	(rule__IfExp__ThenExpressionAssignment_3)
	{ after(grammarAccess.getIfExpAccess().getThenExpressionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExp__Group__4__Impl
	rule__IfExp__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpAccess().getElseKeyword_4()); }
	'else'
	{ after(grammarAccess.getIfExpAccess().getElseKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExp__Group__5__Impl
	rule__IfExp__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpAccess().getElseExpressionAssignment_5()); }
	(rule__IfExp__ElseExpressionAssignment_5)
	{ after(grammarAccess.getIfExpAccess().getElseExpressionAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExp__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpAccess().getEndifKeyword_6()); }
	'endif'
	{ after(grammarAccess.getIfExpAccess().getEndifKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BraceExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BraceExp__Group__0__Impl
	rule__BraceExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BraceExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBraceExpAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getBraceExpAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BraceExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BraceExp__Group__1__Impl
	rule__BraceExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BraceExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBraceExpAccess().getExpAssignment_1()); }
	(rule__BraceExp__ExpAssignment_1)
	{ after(grammarAccess.getBraceExpAccess().getExpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BraceExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BraceExp__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BraceExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBraceExpAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getBraceExpAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContextlessCallExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContextlessCallExp__Group__0__Impl
	rule__ContextlessCallExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextlessCallExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextlessCallExpAccess().getOperationNameAssignment_0()); }
	(rule__ContextlessCallExp__OperationNameAssignment_0)
	{ after(grammarAccess.getContextlessCallExpAccess().getOperationNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextlessCallExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContextlessCallExp__Group__1__Impl
	rule__ContextlessCallExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextlessCallExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextlessCallExpAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getContextlessCallExpAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextlessCallExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContextlessCallExp__Group__2__Impl
	rule__ContextlessCallExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextlessCallExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextlessCallExpAccess().getGroup_2()); }
	(rule__ContextlessCallExp__Group_2__0)?
	{ after(grammarAccess.getContextlessCallExpAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextlessCallExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContextlessCallExp__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextlessCallExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextlessCallExpAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getContextlessCallExpAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContextlessCallExp__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContextlessCallExp__Group_2__0__Impl
	rule__ContextlessCallExp__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextlessCallExp__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextlessCallExpAccess().getArgumentsAssignment_2_0()); }
	(rule__ContextlessCallExp__ArgumentsAssignment_2_0)
	{ after(grammarAccess.getContextlessCallExpAccess().getArgumentsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextlessCallExp__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContextlessCallExp__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextlessCallExp__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextlessCallExpAccess().getGroup_2_1()); }
	(rule__ContextlessCallExp__Group_2_1__0)*
	{ after(grammarAccess.getContextlessCallExpAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContextlessCallExp__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContextlessCallExp__Group_2_1__0__Impl
	rule__ContextlessCallExp__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextlessCallExp__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextlessCallExpAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getContextlessCallExpAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextlessCallExp__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContextlessCallExp__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextlessCallExp__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextlessCallExpAccess().getArgumentsAssignment_2_1_1()); }
	(rule__ContextlessCallExp__ArgumentsAssignment_2_1_1)
	{ after(grammarAccess.getContextlessCallExpAccess().getArgumentsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCall__Group__0__Impl
	rule__OperationCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCallAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getOperationCallAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCall__Group__1__Impl
	rule__OperationCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCallAccess().getOperationNameAssignment_1()); }
	(rule__OperationCall__OperationNameAssignment_1)
	{ after(grammarAccess.getOperationCallAccess().getOperationNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCall__Group__2__Impl
	rule__OperationCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCall__Group__3__Impl
	rule__OperationCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCallAccess().getGroup_3()); }
	(rule__OperationCall__Group_3__0)?
	{ after(grammarAccess.getOperationCallAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCall__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCall__Group_3__0__Impl
	rule__OperationCall__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCallAccess().getArgumentsAssignment_3_0()); }
	(rule__OperationCall__ArgumentsAssignment_3_0)
	{ after(grammarAccess.getOperationCallAccess().getArgumentsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCall__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCallAccess().getGroup_3_1()); }
	(rule__OperationCall__Group_3_1__0)*
	{ after(grammarAccess.getOperationCallAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCall__Group_3_1__0__Impl
	rule__OperationCall__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCallAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getOperationCallAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCall__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCallAccess().getArgumentsAssignment_3_1_1()); }
	(rule__OperationCall__ArgumentsAssignment_3_1_1)
	{ after(grammarAccess.getOperationCallAccess().getArgumentsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NavigationOrAttributeCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigationOrAttributeCall__Group__0__Impl
	rule__NavigationOrAttributeCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigationOrAttributeCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigationOrAttributeCallAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getNavigationOrAttributeCallAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigationOrAttributeCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NavigationOrAttributeCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigationOrAttributeCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNavigationOrAttributeCallAccess().getAlternatives_1()); }
	(rule__NavigationOrAttributeCall__Alternatives_1)
	{ after(grammarAccess.getNavigationOrAttributeCallAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IterateExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateExp__Group__0__Impl
	rule__IterateExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateExpAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
	'->'
	{ after(grammarAccess.getIterateExpAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateExp__Group__1__Impl
	rule__IterateExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateExpAccess().getIterateKeyword_1()); }
	'iterate'
	{ after(grammarAccess.getIterateExpAccess().getIterateKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateExp__Group__2__Impl
	rule__IterateExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateExpAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getIterateExpAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateExp__Group__3__Impl
	rule__IterateExp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateExpAccess().getIteratorsAssignment_3()); }
	(rule__IterateExp__IteratorsAssignment_3)
	{ after(grammarAccess.getIterateExpAccess().getIteratorsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateExp__Group__4__Impl
	rule__IterateExp__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateExpAccess().getGroup_4()); }
	(rule__IterateExp__Group_4__0)*
	{ after(grammarAccess.getIterateExpAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateExp__Group__5__Impl
	rule__IterateExp__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateExpAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getIterateExpAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateExp__Group__6__Impl
	rule__IterateExp__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateExpAccess().getResultAssignment_6()); }
	(rule__IterateExp__ResultAssignment_6)
	{ after(grammarAccess.getIterateExpAccess().getResultAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateExp__Group__7__Impl
	rule__IterateExp__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateExpAccess().getVerticalLineKeyword_7()); }
	'|'
	{ after(grammarAccess.getIterateExpAccess().getVerticalLineKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateExp__Group__8__Impl
	rule__IterateExp__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateExpAccess().getBodyAssignment_8()); }
	(rule__IterateExp__BodyAssignment_8)
	{ after(grammarAccess.getIterateExpAccess().getBodyAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateExp__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateExpAccess().getRightParenthesisKeyword_9()); }
	')'
	{ after(grammarAccess.getIterateExpAccess().getRightParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IterateExp__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateExp__Group_4__0__Impl
	rule__IterateExp__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateExpAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getIterateExpAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateExp__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateExpAccess().getIteratorsAssignment_4_1()); }
	(rule__IterateExp__IteratorsAssignment_4_1)
	{ after(grammarAccess.getIterateExpAccess().getIteratorsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Iterator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iterator__Group__0__Impl
	rule__Iterator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorAccess().getNameAssignment_0()); }
	(rule__Iterator__NameAssignment_0)
	{ after(grammarAccess.getIteratorAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iterator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorAccess().getGroup_1()); }
	(rule__Iterator__Group_1__0)?
	{ after(grammarAccess.getIteratorAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Iterator__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iterator__Group_1__0__Impl
	rule__Iterator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorAccess().getColonKeyword_1_0()); }
	':'
	{ after(grammarAccess.getIteratorAccess().getColonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iterator__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorAccess().getTypeAssignment_1_1()); }
	(rule__Iterator__TypeAssignment_1_1)
	{ after(grammarAccess.getIteratorAccess().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IteratorExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratorExp__Group__0__Impl
	rule__IteratorExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorExpAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
	'->'
	{ after(grammarAccess.getIteratorExpAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratorExp__Group__1__Impl
	rule__IteratorExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorExpAccess().getNameAssignment_1()); }
	(rule__IteratorExp__NameAssignment_1)
	{ after(grammarAccess.getIteratorExpAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratorExp__Group__2__Impl
	rule__IteratorExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorExpAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getIteratorExpAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratorExp__Group__3__Impl
	rule__IteratorExp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorExpAccess().getIteratorsAssignment_3()); }
	(rule__IteratorExp__IteratorsAssignment_3)
	{ after(grammarAccess.getIteratorExpAccess().getIteratorsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratorExp__Group__4__Impl
	rule__IteratorExp__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorExpAccess().getGroup_4()); }
	(rule__IteratorExp__Group_4__0)*
	{ after(grammarAccess.getIteratorExpAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratorExp__Group__5__Impl
	rule__IteratorExp__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorExpAccess().getVerticalLineKeyword_5()); }
	'|'
	{ after(grammarAccess.getIteratorExpAccess().getVerticalLineKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratorExp__Group__6__Impl
	rule__IteratorExp__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorExpAccess().getBodyAssignment_6()); }
	(rule__IteratorExp__BodyAssignment_6)
	{ after(grammarAccess.getIteratorExpAccess().getBodyAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratorExp__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorExpAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getIteratorExpAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IteratorExp__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratorExp__Group_4__0__Impl
	rule__IteratorExp__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorExpAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getIteratorExpAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IteratorExp__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteratorExpAccess().getIteratorsAssignment_4_1()); }
	(rule__IteratorExp__IteratorsAssignment_4_1)
	{ after(grammarAccess.getIteratorExpAccess().getIteratorsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionOperationCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionOperationCall__Group__0__Impl
	rule__CollectionOperationCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionOperationCallAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
	'->'
	{ after(grammarAccess.getCollectionOperationCallAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionOperationCall__Group__1__Impl
	rule__CollectionOperationCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionOperationCallAccess().getOperationNameAssignment_1()); }
	(rule__CollectionOperationCall__OperationNameAssignment_1)
	{ after(grammarAccess.getCollectionOperationCallAccess().getOperationNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionOperationCall__Group__2__Impl
	rule__CollectionOperationCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionOperationCallAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getCollectionOperationCallAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionOperationCall__Group__3__Impl
	rule__CollectionOperationCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionOperationCallAccess().getGroup_3()); }
	(rule__CollectionOperationCall__Group_3__0)?
	{ after(grammarAccess.getCollectionOperationCallAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionOperationCall__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionOperationCallAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getCollectionOperationCallAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionOperationCall__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionOperationCall__Group_3__0__Impl
	rule__CollectionOperationCall__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionOperationCallAccess().getArgumentsAssignment_3_0()); }
	(rule__CollectionOperationCall__ArgumentsAssignment_3_0)
	{ after(grammarAccess.getCollectionOperationCallAccess().getArgumentsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionOperationCall__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionOperationCallAccess().getGroup_3_1()); }
	(rule__CollectionOperationCall__Group_3_1__0)*
	{ after(grammarAccess.getCollectionOperationCallAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionOperationCall__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionOperationCall__Group_3_1__0__Impl
	rule__CollectionOperationCall__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionOperationCallAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getCollectionOperationCallAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionOperationCall__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionOperationCallAccess().getArgumentsAssignment_3_1_1()); }
	(rule__CollectionOperationCall__ArgumentsAssignment_3_1_1)
	{ after(grammarAccess.getCollectionOperationCallAccess().getArgumentsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalVariable__Group__0__Impl
	rule__LocalVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalVariableAccess().getNameAssignment_0()); }
	(rule__LocalVariable__NameAssignment_0)
	{ after(grammarAccess.getLocalVariableAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalVariable__Group__1__Impl
	rule__LocalVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalVariableAccess().getGroup_1()); }
	(rule__LocalVariable__Group_1__0)?
	{ after(grammarAccess.getLocalVariableAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalVariable__Group__2__Impl
	rule__LocalVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalVariableAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getLocalVariableAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalVariable__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalVariableAccess().getInitExpressionAssignment_3()); }
	(rule__LocalVariable__InitExpressionAssignment_3)
	{ after(grammarAccess.getLocalVariableAccess().getInitExpressionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariable__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalVariable__Group_1__0__Impl
	rule__LocalVariable__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalVariableAccess().getColonKeyword_1_0()); }
	':'
	{ after(grammarAccess.getLocalVariableAccess().getColonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalVariable__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalVariableAccess().getTypeAssignment_1_1()); }
	(rule__LocalVariable__TypeAssignment_1_1)
	{ after(grammarAccess.getLocalVariableAccess().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionType__Group__0__Impl
	rule__CollectionType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeAccess().getCollectionKeyword_0()); }
	'Collection'
	{ after(grammarAccess.getCollectionTypeAccess().getCollectionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionType__Group__1__Impl
	rule__CollectionType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getCollectionTypeAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionType__Group__2__Impl
	rule__CollectionType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeAccess().getElementTypeAssignment_2()); }
	(rule__CollectionType__ElementTypeAssignment_2)
	{ after(grammarAccess.getCollectionTypeAccess().getElementTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getCollectionTypeAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagType__Group__0__Impl
	rule__BagType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTypeAccess().getBagKeyword_0()); }
	'Bag'
	{ after(grammarAccess.getBagTypeAccess().getBagKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagType__Group__1__Impl
	rule__BagType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BagType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTypeAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getBagTypeAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagType__Group__2__Impl
	rule__BagType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BagType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTypeAccess().getElementTypeAssignment_2()); }
	(rule__BagType__ElementTypeAssignment_2)
	{ after(grammarAccess.getBagTypeAccess().getElementTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTypeAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getBagTypeAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrderedSetType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderedSetType__Group__0__Impl
	rule__OrderedSetType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderedSetTypeAccess().getOrderedSetKeyword_0()); }
	'OrderedSet'
	{ after(grammarAccess.getOrderedSetTypeAccess().getOrderedSetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderedSetType__Group__1__Impl
	rule__OrderedSetType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderedSetTypeAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getOrderedSetTypeAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderedSetType__Group__2__Impl
	rule__OrderedSetType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderedSetTypeAccess().getElementTypeAssignment_2()); }
	(rule__OrderedSetType__ElementTypeAssignment_2)
	{ after(grammarAccess.getOrderedSetTypeAccess().getElementTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderedSetType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderedSetTypeAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getOrderedSetTypeAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceType__Group__0__Impl
	rule__SequenceType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTypeAccess().getSequenceKeyword_0()); }
	'Sequence'
	{ after(grammarAccess.getSequenceTypeAccess().getSequenceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceType__Group__1__Impl
	rule__SequenceType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTypeAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSequenceTypeAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceType__Group__2__Impl
	rule__SequenceType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTypeAccess().getElementTypeAssignment_2()); }
	(rule__SequenceType__ElementTypeAssignment_2)
	{ after(grammarAccess.getSequenceTypeAccess().getElementTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTypeAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getSequenceTypeAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetType__Group__0__Impl
	rule__SetType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTypeAccess().getSetKeyword_0()); }
	'Set'
	{ after(grammarAccess.getSetTypeAccess().getSetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetType__Group__1__Impl
	rule__SetType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTypeAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSetTypeAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetType__Group__2__Impl
	rule__SetType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTypeAccess().getElementTypeAssignment_2()); }
	(rule__SetType__ElementTypeAssignment_2)
	{ after(grammarAccess.getSetTypeAccess().getElementTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTypeAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getSetTypeAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringType__Group__0__Impl
	rule__StringType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringTypeAccess().getStringTypeAction_0()); }
	()
	{ after(grammarAccess.getStringTypeAccess().getStringTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringTypeAccess().getStringKeyword_1()); }
	'String'
	{ after(grammarAccess.getStringTypeAccess().getStringKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanType__Group__0__Impl
	rule__BooleanType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanTypeAccess().getBooleanTypeAction_0()); }
	()
	{ after(grammarAccess.getBooleanTypeAccess().getBooleanTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanTypeAccess().getBooleanKeyword_1()); }
	'Boolean'
	{ after(grammarAccess.getBooleanTypeAccess().getBooleanKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerType__Group__0__Impl
	rule__IntegerType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerTypeAccess().getIntegerTypeAction_0()); }
	()
	{ after(grammarAccess.getIntegerTypeAccess().getIntegerTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerTypeAccess().getIntegerKeyword_1()); }
	'Integer'
	{ after(grammarAccess.getIntegerTypeAccess().getIntegerKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RealType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RealType__Group__0__Impl
	rule__RealType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealTypeAccess().getRealTypeAction_0()); }
	()
	{ after(grammarAccess.getRealTypeAccess().getRealTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RealType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealTypeAccess().getRealKeyword_1()); }
	'Real'
	{ after(grammarAccess.getRealTypeAccess().getRealKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OclAnyType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclAnyType__Group__0__Impl
	rule__OclAnyType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OclAnyType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclAnyTypeAccess().getOclAnyTypeAction_0()); }
	()
	{ after(grammarAccess.getOclAnyTypeAccess().getOclAnyTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclAnyType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclAnyType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OclAnyType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclAnyTypeAccess().getOclAnyKeyword_1()); }
	'OclAny'
	{ after(grammarAccess.getOclAnyTypeAccess().getOclAnyKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OclVoidType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclVoidType__Group__0__Impl
	rule__OclVoidType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OclVoidType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclVoidTypeAccess().getOclVoidTypeAction_0()); }
	()
	{ after(grammarAccess.getOclVoidTypeAccess().getOclVoidTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclVoidType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclVoidType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OclVoidType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclVoidTypeAccess().getOclVoidKeyword_1()); }
	'OclVoid'
	{ after(grammarAccess.getOclVoidTypeAccess().getOclVoidKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleType__Group__0__Impl
	rule__TupleType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeAccess().getTupleTypeAction_0()); }
	()
	{ after(grammarAccess.getTupleTypeAccess().getTupleTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleType__Group__1__Impl
	rule__TupleType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeAccess().getTupleKeyword_1()); }
	'Tuple'
	{ after(grammarAccess.getTupleTypeAccess().getTupleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleType__Group__2__Impl
	rule__TupleType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getTupleTypeAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleType__Group__3__Impl
	rule__TupleType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeAccess().getGroup_3()); }
	(rule__TupleType__Group_3__0)?
	{ after(grammarAccess.getTupleTypeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getTupleTypeAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleType__Group_3__0__Impl
	rule__TupleType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeAccess().getAttributesAssignment_3_0()); }
	(rule__TupleType__AttributesAssignment_3_0)
	{ after(grammarAccess.getTupleTypeAccess().getAttributesAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeAccess().getGroup_3_1()); }
	(rule__TupleType__Group_3_1__0)*
	{ after(grammarAccess.getTupleTypeAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleType__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleType__Group_3_1__0__Impl
	rule__TupleType__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getTupleTypeAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleType__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeAccess().getAttributesAssignment_3_1_1()); }
	(rule__TupleType__AttributesAssignment_3_1_1)
	{ after(grammarAccess.getTupleTypeAccess().getAttributesAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleTypeAttribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTypeAttribute__Group__0__Impl
	rule__TupleTypeAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeAttribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeAttributeAccess().getNameAssignment_0()); }
	(rule__TupleTypeAttribute__NameAssignment_0)
	{ after(grammarAccess.getTupleTypeAttributeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeAttribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTypeAttribute__Group__1__Impl
	rule__TupleTypeAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeAttribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeAttributeAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getTupleTypeAttributeAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeAttribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTypeAttribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeAttribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeAttributeAccess().getTypeAssignment_2()); }
	(rule__TupleTypeAttribute__TypeAssignment_2)
	{ after(grammarAccess.getTupleTypeAttributeAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OclModelElementClass__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclModelElementClass__Group__0__Impl
	rule__OclModelElementClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElementClass__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclModelElementClassAccess().getModelAssignment_0()); }
	(rule__OclModelElementClass__ModelAssignment_0)
	{ after(grammarAccess.getOclModelElementClassAccess().getModelAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElementClass__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclModelElementClass__Group__1__Impl
	rule__OclModelElementClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElementClass__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclModelElementClassAccess().getExclamationMarkKeyword_1()); }
	'!'
	{ after(grammarAccess.getOclModelElementClassAccess().getExclamationMarkKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElementClass__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OclModelElementClass__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElementClass__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOclModelElementClassAccess().getNameAssignment_2()); }
	(rule__OclModelElementClass__NameAssignment_2)
	{ after(grammarAccess.getOclModelElementClassAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__0__Impl
	rule__MapType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getMapKeyword_0()); }
	'Map'
	{ after(grammarAccess.getMapTypeAccess().getMapKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__1__Impl
	rule__MapType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMapTypeAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__2__Impl
	rule__MapType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getKeyTypeAssignment_2()); }
	(rule__MapType__KeyTypeAssignment_2)
	{ after(grammarAccess.getMapTypeAccess().getKeyTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__3__Impl
	rule__MapType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getMapTypeAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__4__Impl
	rule__MapType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getValueTypeAssignment_4()); }
	(rule__MapType__ValueTypeAssignment_4)
	{ after(grammarAccess.getMapTypeAccess().getValueTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getMapTypeAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__ImportsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getImportsImportParserRuleCall_0_0()); }
		ruleImport
		{ after(grammarAccess.getModuleAccess().getImportsImportParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ContextlessFeaturesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getContextlessFeaturesOclFeatureDefinitionParserRuleCall_1_0()); }
		ruleOclFeatureDefinition
		{ after(grammarAccess.getModuleAccess().getContextlessFeaturesOclFeatureDefinitionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ContextBlocksAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getContextBlocksOclContextBlockParserRuleCall_2_0()); }
		ruleOclContextBlock
		{ after(grammarAccess.getModuleAccess().getContextBlocksOclContextBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__PackageAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getPackageEPackageCrossReference_1_0()); }
		(
			{ before(grammarAccess.getImportAccess().getPackageEPackageSTRINGTerminalRuleCall_1_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getImportAccess().getPackageEPackageSTRINGTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getImportAccess().getPackageEPackageCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getImportAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclContextBlock__EcoreTypesAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclContextBlockAccess().getEcoreTypesImportCrossReference_0_1_0()); }
		(
			{ before(grammarAccess.getOclContextBlockAccess().getEcoreTypesImportIDTerminalRuleCall_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOclContextBlockAccess().getEcoreTypesImportIDTerminalRuleCall_0_1_0_1()); }
		)
		{ after(grammarAccess.getOclContextBlockAccess().getEcoreTypesImportCrossReference_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclContextBlock__ClassAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclContextBlockAccess().getClassEClassCrossReference_0_3_0()); }
		(
			{ before(grammarAccess.getOclContextBlockAccess().getClassEClassQualifiedNameParserRuleCall_0_3_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getOclContextBlockAccess().getClassEClassQualifiedNameParserRuleCall_0_3_0_1()); }
		)
		{ after(grammarAccess.getOclContextBlockAccess().getClassEClassCrossReference_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclContextBlock__MembersAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclContextBlockAccess().getMembersAlternatives_1_0()); }
		(rule__OclContextBlock__MembersAlternatives_1_0)
		{ after(grammarAccess.getOclContextBlockAccess().getMembersAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclFeatureDefinition__FeatureAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclFeatureDefinitionAccess().getFeatureAlternatives_2_0()); }
		(rule__OclFeatureDefinition__FeatureAlternatives_2_0)
		{ after(grammarAccess.getOclFeatureDefinitionAccess().getFeatureAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getTypeOclTypeLiteralParserRuleCall_2_0()); }
		ruleOclTypeLiteral
		{ after(grammarAccess.getAttributeAccess().getTypeOclTypeLiteralParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__InitExpressionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getInitExpressionOclExpressionParserRuleCall_4_0()); }
		ruleOclExpression
		{ after(grammarAccess.getAttributeAccess().getInitExpressionOclExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ParametersAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getParametersParameterParserRuleCall_2_0_0()); }
		ruleParameter
		{ after(grammarAccess.getOperationAccess().getParametersParameterParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ParametersAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getParametersParameterParserRuleCall_2_1_1_0()); }
		ruleParameter
		{ after(grammarAccess.getOperationAccess().getParametersParameterParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ReturnTypeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getReturnTypeOclTypeLiteralParserRuleCall_5_0()); }
		ruleOclTypeLiteral
		{ after(grammarAccess.getOperationAccess().getReturnTypeOclTypeLiteralParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__BodyAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getBodyOclExpressionParserRuleCall_7_0()); }
		ruleOclExpression
		{ after(grammarAccess.getOperationAccess().getBodyOclExpressionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getTypeOclTypeLiteralParserRuleCall_2_0()); }
		ruleOclTypeLiteral
		{ after(grammarAccess.getParameterAccess().getTypeOclTypeLiteralParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclInvariantAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getOclInvariantAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclInvariant__BodyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclInvariantAccess().getBodyOclExpressionParserRuleCall_3_0()); }
		ruleOclExpression
		{ after(grammarAccess.getOclInvariantAccess().getBodyOclExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElementExp__ModelAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclModelElementExpAccess().getModelImportCrossReference_0_0()); }
		(
			{ before(grammarAccess.getOclModelElementExpAccess().getModelImportIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOclModelElementExpAccess().getModelImportIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getOclModelElementExpAccess().getModelImportCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElementExp__ClassAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclModelElementExpAccess().getClassEClassCrossReference_2_0()); }
		(
			{ before(grammarAccess.getOclModelElementExpAccess().getClassEClassQualifiedNameParserRuleCall_2_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getOclModelElementExpAccess().getClassEClassQualifiedNameParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getOclModelElementExpAccess().getClassEClassCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorCallExp__ArgsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorCallExpAccess().getArgsEqOpCallExpParserRuleCall_0_0()); }
		ruleEqOpCallExp
		{ after(grammarAccess.getOperatorCallExpAccess().getArgsEqOpCallExpParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorCallExp__OperationNamesAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorCallExpAccess().getOperationNamesBOOLOPParserRuleCall_1_0_0()); }
		ruleBOOLOP
		{ after(grammarAccess.getOperatorCallExpAccess().getOperationNamesBOOLOPParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorCallExp__ArgsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorCallExpAccess().getArgsEqOpCallExpParserRuleCall_1_1_0()); }
		ruleEqOpCallExp
		{ after(grammarAccess.getOperatorCallExpAccess().getArgsEqOpCallExpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqOpCallExp__ArgsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqOpCallExpAccess().getArgsRelOpCallExpParserRuleCall_0_0()); }
		ruleRelOpCallExp
		{ after(grammarAccess.getEqOpCallExpAccess().getArgsRelOpCallExpParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqOpCallExp__OperationNamesAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqOpCallExpAccess().getOperationNamesEQOPParserRuleCall_1_0_0()); }
		ruleEQOP
		{ after(grammarAccess.getEqOpCallExpAccess().getOperationNamesEQOPParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqOpCallExp__ArgsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqOpCallExpAccess().getArgsRelOpCallExpParserRuleCall_1_1_0()); }
		ruleRelOpCallExp
		{ after(grammarAccess.getEqOpCallExpAccess().getArgsRelOpCallExpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelOpCallExp__ArgsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelOpCallExpAccess().getArgsAddOpCallExpParserRuleCall_0_0()); }
		ruleAddOpCallExp
		{ after(grammarAccess.getRelOpCallExpAccess().getArgsAddOpCallExpParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelOpCallExp__OperationNamesAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelOpCallExpAccess().getOperationNamesRELOPParserRuleCall_1_0_0()); }
		ruleRELOP
		{ after(grammarAccess.getRelOpCallExpAccess().getOperationNamesRELOPParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelOpCallExp__ArgsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelOpCallExpAccess().getArgsAddOpCallExpParserRuleCall_1_1_0()); }
		ruleAddOpCallExp
		{ after(grammarAccess.getRelOpCallExpAccess().getArgsAddOpCallExpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOpCallExp__ArgsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddOpCallExpAccess().getArgsIntOpCallExpParserRuleCall_0_0()); }
		ruleIntOpCallExp
		{ after(grammarAccess.getAddOpCallExpAccess().getArgsIntOpCallExpParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOpCallExp__OperationNamesAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddOpCallExpAccess().getOperationNamesADDOPParserRuleCall_1_0_0()); }
		ruleADDOP
		{ after(grammarAccess.getAddOpCallExpAccess().getOperationNamesADDOPParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOpCallExp__ArgsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddOpCallExpAccess().getArgsIntOpCallExpParserRuleCall_1_1_0()); }
		ruleIntOpCallExp
		{ after(grammarAccess.getAddOpCallExpAccess().getArgsIntOpCallExpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOpCallExp__ArgsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntOpCallExpAccess().getArgsMulOpCallExpParserRuleCall_0_0()); }
		ruleMulOpCallExp
		{ after(grammarAccess.getIntOpCallExpAccess().getArgsMulOpCallExpParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOpCallExp__OperationNamesAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntOpCallExpAccess().getOperationNamesINTOPParserRuleCall_1_0_0()); }
		ruleINTOP
		{ after(grammarAccess.getIntOpCallExpAccess().getOperationNamesINTOPParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOpCallExp__ArgsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntOpCallExpAccess().getArgsMulOpCallExpParserRuleCall_1_1_0()); }
		ruleMulOpCallExp
		{ after(grammarAccess.getIntOpCallExpAccess().getArgsMulOpCallExpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOpCallExp__ArgsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOpCallExpAccess().getArgsNotOpCallExpParserRuleCall_0_0()); }
		ruleNotOpCallExp
		{ after(grammarAccess.getMulOpCallExpAccess().getArgsNotOpCallExpParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOpCallExp__OperationNamesAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOpCallExpAccess().getOperationNamesMULOPParserRuleCall_1_0_0()); }
		ruleMULOP
		{ after(grammarAccess.getMulOpCallExpAccess().getOperationNamesMULOPParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOpCallExp__ArgsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOpCallExpAccess().getArgsNotOpCallExpParserRuleCall_1_1_0()); }
		ruleNotOpCallExp
		{ after(grammarAccess.getMulOpCallExpAccess().getArgsNotOpCallExpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotOpCallExp__OperationNameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotOpCallExpAccess().getOperationNameUNARYOPParserRuleCall_0_0_0()); }
		ruleUNARYOP
		{ after(grammarAccess.getNotOpCallExpAccess().getOperationNameUNARYOPParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotOpCallExp__SourceAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotOpCallExpAccess().getSourceNotOpCallExpParserRuleCall_0_1_0()); }
		ruleNotOpCallExp
		{ after(grammarAccess.getNotOpCallExpAccess().getSourceNotOpCallExpParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCallExp__SourceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyCallExpAccess().getSourcePrimary_OclExpressionParserRuleCall_0_0()); }
		rulePrimary_OclExpression
		{ after(grammarAccess.getPropertyCallExpAccess().getSourcePrimary_OclExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCallExp__CallsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyCallExpAccess().getCallsPropertyCallParserRuleCall_1_0()); }
		rulePropertyCall
		{ after(grammarAccess.getPropertyCallExpAccess().getCallsPropertyCallParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableExp__ReferredVariableAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableExpAccess().getReferredVariableAuxiliaryCrossReference_0()); }
		(
			{ before(grammarAccess.getVariableExpAccess().getReferredVariableAuxiliaryIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariableExpAccess().getReferredVariableAuxiliaryIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getVariableExpAccess().getReferredVariableAuxiliaryCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteralExp__StringSymbolAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringLiteralExpAccess().getStringSymbolSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringLiteralExpAccess().getStringSymbolSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteralExp__RealSymbolAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRealLiteralExpAccess().getRealSymbolDOUBLETerminalRuleCall_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getRealLiteralExpAccess().getRealSymbolDOUBLETerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteralExp__IntegerSymbolAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerLiteralExpAccess().getIntegerSymbolINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getIntegerLiteralExpAccess().getIntegerSymbolINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteralExp__ElementsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagLiteralExpAccess().getElementsOclExpressionParserRuleCall_3_0_0()); }
		ruleOclExpression
		{ after(grammarAccess.getBagLiteralExpAccess().getElementsOclExpressionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteralExp__ElementsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagLiteralExpAccess().getElementsOclExpressionParserRuleCall_3_1_1_0()); }
		ruleOclExpression
		{ after(grammarAccess.getBagLiteralExpAccess().getElementsOclExpressionParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetLiteralExp__ElementsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderedSetLiteralExpAccess().getElementsOclExpressionParserRuleCall_3_0_0()); }
		ruleOclExpression
		{ after(grammarAccess.getOrderedSetLiteralExpAccess().getElementsOclExpressionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetLiteralExp__ElementsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderedSetLiteralExpAccess().getElementsOclExpressionParserRuleCall_3_1_1_0()); }
		ruleOclExpression
		{ after(grammarAccess.getOrderedSetLiteralExpAccess().getElementsOclExpressionParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceLiteralExp__ElementsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceLiteralExpAccess().getElementsOclExpressionParserRuleCall_3_0_0()); }
		ruleOclExpression
		{ after(grammarAccess.getSequenceLiteralExpAccess().getElementsOclExpressionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceLiteralExp__ElementsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceLiteralExpAccess().getElementsOclExpressionParserRuleCall_3_1_1_0()); }
		ruleOclExpression
		{ after(grammarAccess.getSequenceLiteralExpAccess().getElementsOclExpressionParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteralExp__ElementsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetLiteralExpAccess().getElementsOclExpressionParserRuleCall_3_0_0()); }
		ruleOclExpression
		{ after(grammarAccess.getSetLiteralExpAccess().getElementsOclExpressionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteralExp__ElementsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetLiteralExpAccess().getElementsOclExpressionParserRuleCall_3_1_1_0()); }
		ruleOclExpression
		{ after(grammarAccess.getSetLiteralExpAccess().getElementsOclExpressionParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExp__TuplePartAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleLiteralExpAccess().getTuplePartTuplePartParserRuleCall_3_0_0()); }
		ruleTuplePart
		{ after(grammarAccess.getTupleLiteralExpAccess().getTuplePartTuplePartParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExp__TuplePartAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleLiteralExpAccess().getTuplePartTuplePartParserRuleCall_3_1_1_0()); }
		ruleTuplePart
		{ after(grammarAccess.getTupleLiteralExpAccess().getTuplePartTuplePartParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePart__VarNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTuplePartAccess().getVarNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getTuplePartAccess().getVarNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePart__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTuplePartAccess().getTypeOclTypeLiteralParserRuleCall_1_1_0()); }
		ruleOclTypeLiteral
		{ after(grammarAccess.getTuplePartAccess().getTypeOclTypeLiteralParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TuplePart__InitExpressionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTuplePartAccess().getInitExpressionOclExpressionParserRuleCall_3_0()); }
		ruleOclExpression
		{ after(grammarAccess.getTuplePartAccess().getInitExpressionOclExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteralExp__ElementsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapLiteralExpAccess().getElementsMapElementParserRuleCall_3_0_0()); }
		ruleMapElement
		{ after(grammarAccess.getMapLiteralExpAccess().getElementsMapElementParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteralExp__ElementsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapLiteralExpAccess().getElementsMapElementParserRuleCall_3_1_1_0()); }
		ruleMapElement
		{ after(grammarAccess.getMapLiteralExpAccess().getElementsMapElementParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapElement__KeyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapElementAccess().getKeyOclExpressionParserRuleCall_1_0()); }
		ruleOclExpression
		{ after(grammarAccess.getMapElementAccess().getKeyOclExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapElement__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapElementAccess().getValueOclExpressionParserRuleCall_3_0()); }
		ruleOclExpression
		{ after(grammarAccess.getMapElementAccess().getValueOclExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralExp__Enum_Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumLiteralExpAccess().getEnum_EEnumCrossReference_0_0()); }
		(
			{ before(grammarAccess.getEnumLiteralExpAccess().getEnum_EEnumQualifiedNameParserRuleCall_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getEnumLiteralExpAccess().getEnum_EEnumQualifiedNameParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getEnumLiteralExpAccess().getEnum_EEnumCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralExp__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumLiteralExpAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumLiteralExpAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExp__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetExpAccess().getVariableLocalVariableParserRuleCall_1_0()); }
		ruleLocalVariable
		{ after(grammarAccess.getLetExpAccess().getVariableLocalVariableParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExp__In_Assignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetExpAccess().getIn_OclExpressionParserRuleCall_3_0()); }
		ruleOclExpression
		{ after(grammarAccess.getLetExpAccess().getIn_OclExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpAccess().getConditionOclExpressionParserRuleCall_1_0()); }
		ruleOclExpression
		{ after(grammarAccess.getIfExpAccess().getConditionOclExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__ThenExpressionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpAccess().getThenExpressionOclExpressionParserRuleCall_3_0()); }
		ruleOclExpression
		{ after(grammarAccess.getIfExpAccess().getThenExpressionOclExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__ElseExpressionAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpAccess().getElseExpressionOclExpressionParserRuleCall_5_0()); }
		ruleOclExpression
		{ after(grammarAccess.getIfExpAccess().getElseExpressionOclExpressionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BraceExp__ExpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBraceExpAccess().getExpOclExpressionParserRuleCall_1_0()); }
		ruleOclExpression
		{ after(grammarAccess.getBraceExpAccess().getExpOclExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextlessCallExp__OperationNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContextlessCallExpAccess().getOperationNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getContextlessCallExpAccess().getOperationNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextlessCallExp__ArgumentsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContextlessCallExpAccess().getArgumentsOclExpressionParserRuleCall_2_0_0()); }
		ruleOclExpression
		{ after(grammarAccess.getContextlessCallExpAccess().getArgumentsOclExpressionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextlessCallExp__ArgumentsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContextlessCallExpAccess().getArgumentsOclExpressionParserRuleCall_2_1_1_0()); }
		ruleOclExpression
		{ after(grammarAccess.getContextlessCallExpAccess().getArgumentsOclExpressionParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteralExp__BooleanSymbolAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralExpAccess().getBooleanSymbolTrueKeyword_0_0()); }
		(
			{ before(grammarAccess.getBooleanLiteralExpAccess().getBooleanSymbolTrueKeyword_0_0()); }
			'true'
			{ after(grammarAccess.getBooleanLiteralExpAccess().getBooleanSymbolTrueKeyword_0_0()); }
		)
		{ after(grammarAccess.getBooleanLiteralExpAccess().getBooleanSymbolTrueKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteralExp__BooleanSymbolAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralExpAccess().getBooleanSymbolFalseKeyword_1_0()); }
		(
			{ before(grammarAccess.getBooleanLiteralExpAccess().getBooleanSymbolFalseKeyword_1_0()); }
			'false'
			{ after(grammarAccess.getBooleanLiteralExpAccess().getBooleanSymbolFalseKeyword_1_0()); }
		)
		{ after(grammarAccess.getBooleanLiteralExpAccess().getBooleanSymbolFalseKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__OperationNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationCallAccess().getOperationNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getOperationCallAccess().getOperationNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__ArgumentsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationCallAccess().getArgumentsOclExpressionParserRuleCall_3_0_0()); }
		ruleOclExpression
		{ after(grammarAccess.getOperationCallAccess().getArgumentsOclExpressionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__ArgumentsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationCallAccess().getArgumentsOclExpressionParserRuleCall_3_1_1_0()); }
		ruleOclExpression
		{ after(grammarAccess.getOperationCallAccess().getArgumentsOclExpressionParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigationOrAttributeCall__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNavigationOrAttributeCallAccess().getNameSTRINGTerminalRuleCall_1_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getNavigationOrAttributeCallAccess().getNameSTRINGTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NavigationOrAttributeCall__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNavigationOrAttributeCallAccess().getNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getNavigationOrAttributeCallAccess().getNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__IteratorsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIterateExpAccess().getIteratorsIteratorParserRuleCall_3_0()); }
		ruleIterator
		{ after(grammarAccess.getIterateExpAccess().getIteratorsIteratorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__IteratorsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIterateExpAccess().getIteratorsIteratorParserRuleCall_4_1_0()); }
		ruleIterator
		{ after(grammarAccess.getIterateExpAccess().getIteratorsIteratorParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__ResultAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIterateExpAccess().getResultLocalVariableParserRuleCall_6_0()); }
		ruleLocalVariable
		{ after(grammarAccess.getIterateExpAccess().getResultLocalVariableParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateExp__BodyAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIterateExpAccess().getBodyOclExpressionParserRuleCall_8_0()); }
		ruleOclExpression
		{ after(grammarAccess.getIterateExpAccess().getBodyOclExpressionParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteratorAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getIteratorAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iterator__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteratorAccess().getTypeOclTypeLiteralParserRuleCall_1_1_0()); }
		ruleOclTypeLiteral
		{ after(grammarAccess.getIteratorAccess().getTypeOclTypeLiteralParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteratorExpAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getIteratorExpAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__IteratorsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteratorExpAccess().getIteratorsIteratorParserRuleCall_3_0()); }
		ruleIterator
		{ after(grammarAccess.getIteratorExpAccess().getIteratorsIteratorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__IteratorsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteratorExpAccess().getIteratorsIteratorParserRuleCall_4_1_0()); }
		ruleIterator
		{ after(grammarAccess.getIteratorExpAccess().getIteratorsIteratorParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorExp__BodyAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteratorExpAccess().getBodyOclExpressionParserRuleCall_6_0()); }
		ruleOclExpression
		{ after(grammarAccess.getIteratorExpAccess().getBodyOclExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__OperationNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionOperationCallAccess().getOperationNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCollectionOperationCallAccess().getOperationNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__ArgumentsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionOperationCallAccess().getArgumentsOclExpressionParserRuleCall_3_0_0()); }
		ruleOclExpression
		{ after(grammarAccess.getCollectionOperationCallAccess().getArgumentsOclExpressionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionOperationCall__ArgumentsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionOperationCallAccess().getArgumentsOclExpressionParserRuleCall_3_1_1_0()); }
		ruleOclExpression
		{ after(grammarAccess.getCollectionOperationCallAccess().getArgumentsOclExpressionParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalVariableAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getLocalVariableAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalVariableAccess().getTypeOclTypeLiteralParserRuleCall_1_1_0()); }
		ruleOclTypeLiteral
		{ after(grammarAccess.getLocalVariableAccess().getTypeOclTypeLiteralParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__InitExpressionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalVariableAccess().getInitExpressionOclExpressionParserRuleCall_3_0()); }
		ruleOclExpression
		{ after(grammarAccess.getLocalVariableAccess().getInitExpressionOclExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__ElementTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionTypeAccess().getElementTypeOclTypeLiteralParserRuleCall_2_0()); }
		ruleOclTypeLiteral
		{ after(grammarAccess.getCollectionTypeAccess().getElementTypeOclTypeLiteralParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagType__ElementTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagTypeAccess().getElementTypeOclTypeLiteralParserRuleCall_2_0()); }
		ruleOclTypeLiteral
		{ after(grammarAccess.getBagTypeAccess().getElementTypeOclTypeLiteralParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedSetType__ElementTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderedSetTypeAccess().getElementTypeOclTypeLiteralParserRuleCall_2_0()); }
		ruleOclTypeLiteral
		{ after(grammarAccess.getOrderedSetTypeAccess().getElementTypeOclTypeLiteralParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceType__ElementTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceTypeAccess().getElementTypeOclTypeLiteralParserRuleCall_2_0()); }
		ruleOclTypeLiteral
		{ after(grammarAccess.getSequenceTypeAccess().getElementTypeOclTypeLiteralParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetType__ElementTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetTypeAccess().getElementTypeOclTypeLiteralParserRuleCall_2_0()); }
		ruleOclTypeLiteral
		{ after(grammarAccess.getSetTypeAccess().getElementTypeOclTypeLiteralParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__AttributesAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleTypeAccess().getAttributesTupleTypeAttributeParserRuleCall_3_0_0()); }
		ruleTupleTypeAttribute
		{ after(grammarAccess.getTupleTypeAccess().getAttributesTupleTypeAttributeParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__AttributesAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleTypeAccess().getAttributesTupleTypeAttributeParserRuleCall_3_1_1_0()); }
		ruleTupleTypeAttribute
		{ after(grammarAccess.getTupleTypeAccess().getAttributesTupleTypeAttributeParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeAttribute__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleTypeAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getTupleTypeAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeAttribute__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleTypeAttributeAccess().getTypeOclTypeLiteralParserRuleCall_2_0()); }
		ruleOclTypeLiteral
		{ after(grammarAccess.getTupleTypeAttributeAccess().getTypeOclTypeLiteralParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElementClass__ModelAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclModelElementClassAccess().getModelImportCrossReference_0_0()); }
		(
			{ before(grammarAccess.getOclModelElementClassAccess().getModelImportIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOclModelElementClassAccess().getModelImportIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getOclModelElementClassAccess().getModelImportCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclModelElementClass__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclModelElementClassAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getOclModelElementClassAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__KeyTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapTypeAccess().getKeyTypeOclTypeLiteralParserRuleCall_2_0()); }
		ruleOclTypeLiteral
		{ after(grammarAccess.getMapTypeAccess().getKeyTypeOclTypeLiteralParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__ValueTypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapTypeAccess().getValueTypeOclTypeLiteralParserRuleCall_4_0()); }
		ruleOclTypeLiteral
		{ after(grammarAccess.getMapTypeAccess().getValueTypeOclTypeLiteralParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_DOUBLE : (RULE_INT '.' RULE_INT|'.' RULE_INT|RULE_INT '.') ('e' ('-'|'+') RULE_INT)?;

RULE_SL_COMMENT : '--' .* '\n';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
